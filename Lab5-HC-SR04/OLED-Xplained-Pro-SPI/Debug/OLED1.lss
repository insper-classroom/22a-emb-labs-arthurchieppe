
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006fc4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406fc4  00406fc4  00016fc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406fcc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000308  204009d0  0040799c  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400cd8  00407ca4  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd8  00409ca4  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00019ff1  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003b4b  00000000  00000000  0003aa48  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005e2f  00000000  00000000  0003e593  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000998  00000000  00000000  000443c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a28  00000000  00000000  00044d5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000aae3  00000000  00000000  00045782  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000fc3d  00000000  00000000  00050265  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090683  00000000  00000000  0005fea2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  000020d4  00000000  00000000  000f0528  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2c 40 20 b1 12 40 00 ad 12 40 00 ad 12 40 00     .,@ ..@...@...@.
  400010:	ad 12 40 00 ad 12 40 00 ad 12 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	ad 12 40 00 ad 12 40 00 00 00 00 00 ad 12 40 00     ..@...@.......@.
  40003c:	ad 12 40 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     ..@...@...@...@.
  40004c:	7d 16 40 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     }.@...@...@...@.
  40005c:	ad 12 40 00 ad 12 40 00 00 00 00 00 11 0e 40 00     ..@...@.......@.
  40006c:	25 0e 40 00 39 0e 40 00 ad 12 40 00 ad 12 40 00     %.@.9.@...@...@.
  40007c:	ad 12 40 00 4d 0e 40 00 61 0e 40 00 ad 12 40 00     ..@.M.@.a.@...@.
  40008c:	ad 12 40 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     ..@...@...@...@.
  40009c:	ad 12 40 00 a1 15 40 00 ad 12 40 00 ad 12 40 00     ..@...@...@...@.
  4000ac:	ad 12 40 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     ..@...@...@...@.
  4000bc:	ad 12 40 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     ..@...@...@...@.
  4000cc:	ad 12 40 00 00 00 00 00 ad 12 40 00 00 00 00 00     ..@.......@.....
  4000dc:	ad 12 40 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     ..@...@...@...@.
  4000ec:	ad 12 40 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     ..@...@...@...@.
  4000fc:	ad 12 40 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     ..@...@...@...@.
  40010c:	ad 12 40 00 ad 12 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 ad 12 40 00 ad 12 40 00 ad 12 40 00     ......@...@...@.
  40012c:	ad 12 40 00 ad 12 40 00 00 00 00 00 ad 12 40 00     ..@...@.......@.
  40013c:	ad 12 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406fcc 	.word	0x00406fcc

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406fcc 	.word	0x00406fcc
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406fcc 	.word	0x00406fcc
  4001a8:	00000000 	.word	0x00000000

004001ac <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4001ac:	4b03      	ldr	r3, [pc, #12]	; (4001bc <rtt_init+0x10>)
  4001ae:	681b      	ldr	r3, [r3, #0]
  4001b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  4001b4:	4319      	orrs	r1, r3
  4001b6:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  4001b8:	2000      	movs	r0, #0
  4001ba:	4770      	bx	lr
  4001bc:	204009ec 	.word	0x204009ec

004001c0 <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  4001c0:	b941      	cbnz	r1, 4001d4 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4001c2:	4a09      	ldr	r2, [pc, #36]	; (4001e8 <rtt_sel_source+0x28>)
  4001c4:	6813      	ldr	r3, [r2, #0]
  4001c6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  4001ca:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001cc:	6802      	ldr	r2, [r0, #0]
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6003      	str	r3, [r0, #0]
  4001d2:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4001d4:	4a04      	ldr	r2, [pc, #16]	; (4001e8 <rtt_sel_source+0x28>)
  4001d6:	6813      	ldr	r3, [r2, #0]
  4001d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4001dc:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001de:	6802      	ldr	r2, [r0, #0]
  4001e0:	4313      	orrs	r3, r2
  4001e2:	6003      	str	r3, [r0, #0]
  4001e4:	4770      	bx	lr
  4001e6:	bf00      	nop
  4001e8:	204009ec 	.word	0x204009ec

004001ec <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  4001ec:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  4001ee:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4001f2:	4b02      	ldr	r3, [pc, #8]	; (4001fc <rtt_disable_interrupt+0x10>)
  4001f4:	681b      	ldr	r3, [r3, #0]
  4001f6:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  4001f8:	6001      	str	r1, [r0, #0]
  4001fa:	4770      	bx	lr
  4001fc:	204009ec 	.word	0x204009ec

00400200 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400200:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400202:	6883      	ldr	r3, [r0, #8]
  400204:	429a      	cmp	r2, r3
  400206:	d003      	beq.n	400210 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  400208:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40020a:	6883      	ldr	r3, [r0, #8]
  40020c:	4293      	cmp	r3, r2
  40020e:	d1fb      	bne.n	400208 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400210:	4618      	mov	r0, r3
  400212:	4770      	bx	lr

00400214 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400214:	68c0      	ldr	r0, [r0, #12]
}
  400216:	4770      	bx	lr

00400218 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400218:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  40021a:	4b07      	ldr	r3, [pc, #28]	; (400238 <spi_enable_clock+0x20>)
  40021c:	4298      	cmp	r0, r3
  40021e:	d003      	beq.n	400228 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400220:	4b06      	ldr	r3, [pc, #24]	; (40023c <spi_enable_clock+0x24>)
  400222:	4298      	cmp	r0, r3
  400224:	d004      	beq.n	400230 <spi_enable_clock+0x18>
  400226:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400228:	2015      	movs	r0, #21
  40022a:	4b05      	ldr	r3, [pc, #20]	; (400240 <spi_enable_clock+0x28>)
  40022c:	4798      	blx	r3
  40022e:	bd08      	pop	{r3, pc}
  400230:	202a      	movs	r0, #42	; 0x2a
  400232:	4b03      	ldr	r3, [pc, #12]	; (400240 <spi_enable_clock+0x28>)
  400234:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  400236:	e7f6      	b.n	400226 <spi_enable_clock+0xe>
  400238:	40008000 	.word	0x40008000
  40023c:	40058000 	.word	0x40058000
  400240:	00400f95 	.word	0x00400f95

00400244 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400244:	6843      	ldr	r3, [r0, #4]
  400246:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40024a:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  40024c:	6843      	ldr	r3, [r0, #4]
  40024e:	0409      	lsls	r1, r1, #16
  400250:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400254:	4319      	orrs	r1, r3
  400256:	6041      	str	r1, [r0, #4]
  400258:	4770      	bx	lr

0040025a <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  40025a:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  40025c:	f643 2499 	movw	r4, #15001	; 0x3a99
  400260:	6905      	ldr	r5, [r0, #16]
  400262:	f015 0f02 	tst.w	r5, #2
  400266:	d103      	bne.n	400270 <spi_write+0x16>
		if (!timeout--) {
  400268:	3c01      	subs	r4, #1
  40026a:	d1f9      	bne.n	400260 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  40026c:	2001      	movs	r0, #1
  40026e:	e00c      	b.n	40028a <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400270:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400272:	f014 0f02 	tst.w	r4, #2
  400276:	d006      	beq.n	400286 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  400278:	0412      	lsls	r2, r2, #16
  40027a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  40027e:	4311      	orrs	r1, r2
		if (uc_last) {
  400280:	b10b      	cbz	r3, 400286 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400282:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  400286:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400288:	2000      	movs	r0, #0
}
  40028a:	bc30      	pop	{r4, r5}
  40028c:	4770      	bx	lr

0040028e <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  40028e:	b932      	cbnz	r2, 40029e <spi_set_clock_polarity+0x10>
  400290:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400294:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400296:	f023 0301 	bic.w	r3, r3, #1
  40029a:	6303      	str	r3, [r0, #48]	; 0x30
  40029c:	4770      	bx	lr
  40029e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4002a2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002a4:	f043 0301 	orr.w	r3, r3, #1
  4002a8:	6303      	str	r3, [r0, #48]	; 0x30
  4002aa:	4770      	bx	lr

004002ac <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4002ac:	b932      	cbnz	r2, 4002bc <spi_set_clock_phase+0x10>
  4002ae:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4002b2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002b4:	f023 0302 	bic.w	r3, r3, #2
  4002b8:	6303      	str	r3, [r0, #48]	; 0x30
  4002ba:	4770      	bx	lr
  4002bc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4002c0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002c2:	f043 0302 	orr.w	r3, r3, #2
  4002c6:	6303      	str	r3, [r0, #48]	; 0x30
  4002c8:	4770      	bx	lr

004002ca <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  4002ca:	2a04      	cmp	r2, #4
  4002cc:	d003      	beq.n	4002d6 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  4002ce:	b16a      	cbz	r2, 4002ec <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  4002d0:	2a08      	cmp	r2, #8
  4002d2:	d016      	beq.n	400302 <spi_configure_cs_behavior+0x38>
  4002d4:	4770      	bx	lr
  4002d6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4002da:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002dc:	f023 0308 	bic.w	r3, r3, #8
  4002e0:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  4002e2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002e4:	f043 0304 	orr.w	r3, r3, #4
  4002e8:	6303      	str	r3, [r0, #48]	; 0x30
  4002ea:	4770      	bx	lr
  4002ec:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4002f0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002f2:	f023 0308 	bic.w	r3, r3, #8
  4002f6:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4002f8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002fa:	f023 0304 	bic.w	r3, r3, #4
  4002fe:	6303      	str	r3, [r0, #48]	; 0x30
  400300:	4770      	bx	lr
  400302:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  400306:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400308:	f043 0308 	orr.w	r3, r3, #8
  40030c:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  40030e:	e7e1      	b.n	4002d4 <spi_configure_cs_behavior+0xa>

00400310 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400310:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400314:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400316:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40031a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  40031c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40031e:	431a      	orrs	r2, r3
  400320:	630a      	str	r2, [r1, #48]	; 0x30
  400322:	4770      	bx	lr

00400324 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  400324:	1e43      	subs	r3, r0, #1
  400326:	4419      	add	r1, r3
  400328:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  40032c:	1e43      	subs	r3, r0, #1
  40032e:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400330:	bf94      	ite	ls
  400332:	b200      	sxthls	r0, r0
		return -1;
  400334:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400338:	4770      	bx	lr

0040033a <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  40033a:	b17a      	cbz	r2, 40035c <spi_set_baudrate_div+0x22>
{
  40033c:	b410      	push	{r4}
  40033e:	4614      	mov	r4, r2
  400340:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400344:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400346:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40034a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  40034c:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  40034e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400352:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400354:	2000      	movs	r0, #0
}
  400356:	f85d 4b04 	ldr.w	r4, [sp], #4
  40035a:	4770      	bx	lr
        return -1;
  40035c:	f04f 30ff 	mov.w	r0, #4294967295
  400360:	4770      	bx	lr

00400362 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400362:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400364:	0189      	lsls	r1, r1, #6
  400366:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400368:	2402      	movs	r4, #2
  40036a:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40036c:	f04f 31ff 	mov.w	r1, #4294967295
  400370:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400372:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400374:	605a      	str	r2, [r3, #4]
}
  400376:	f85d 4b04 	ldr.w	r4, [sp], #4
  40037a:	4770      	bx	lr

0040037c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40037c:	0189      	lsls	r1, r1, #6
  40037e:	2305      	movs	r3, #5
  400380:	5043      	str	r3, [r0, r1]
  400382:	4770      	bx	lr

00400384 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400384:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400388:	61ca      	str	r2, [r1, #28]
  40038a:	4770      	bx	lr

0040038c <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40038c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  400390:	624a      	str	r2, [r1, #36]	; 0x24
  400392:	4770      	bx	lr

00400394 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400394:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400398:	6a08      	ldr	r0, [r1, #32]
}
  40039a:	4770      	bx	lr

0040039c <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  40039c:	b4f0      	push	{r4, r5, r6, r7}
  40039e:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4003a0:	2402      	movs	r4, #2
  4003a2:	9401      	str	r4, [sp, #4]
  4003a4:	2408      	movs	r4, #8
  4003a6:	9402      	str	r4, [sp, #8]
  4003a8:	2420      	movs	r4, #32
  4003aa:	9403      	str	r4, [sp, #12]
  4003ac:	2480      	movs	r4, #128	; 0x80
  4003ae:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  4003b0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4003b2:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4003b4:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  4003b6:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  4003ba:	d814      	bhi.n	4003e6 <tc_find_mck_divisor+0x4a>
  4003bc:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  4003be:	42a0      	cmp	r0, r4
  4003c0:	d217      	bcs.n	4003f2 <tc_find_mck_divisor+0x56>
  4003c2:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  4003c4:	af01      	add	r7, sp, #4
  4003c6:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  4003ca:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  4003ce:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  4003d0:	4284      	cmp	r4, r0
  4003d2:	d30a      	bcc.n	4003ea <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  4003d4:	4286      	cmp	r6, r0
  4003d6:	d90d      	bls.n	4003f4 <tc_find_mck_divisor+0x58>
			ul_index++) {
  4003d8:	3501      	adds	r5, #1
	for (ul_index = 0;
  4003da:	2d05      	cmp	r5, #5
  4003dc:	d1f3      	bne.n	4003c6 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  4003de:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  4003e0:	b006      	add	sp, #24
  4003e2:	bcf0      	pop	{r4, r5, r6, r7}
  4003e4:	4770      	bx	lr
			return 0;
  4003e6:	2000      	movs	r0, #0
  4003e8:	e7fa      	b.n	4003e0 <tc_find_mck_divisor+0x44>
  4003ea:	2000      	movs	r0, #0
  4003ec:	e7f8      	b.n	4003e0 <tc_find_mck_divisor+0x44>
	return 1;
  4003ee:	2001      	movs	r0, #1
  4003f0:	e7f6      	b.n	4003e0 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  4003f2:	2500      	movs	r5, #0
	if (p_uldiv) {
  4003f4:	b12a      	cbz	r2, 400402 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  4003f6:	a906      	add	r1, sp, #24
  4003f8:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  4003fc:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400400:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400402:	2b00      	cmp	r3, #0
  400404:	d0f3      	beq.n	4003ee <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400406:	601d      	str	r5, [r3, #0]
	return 1;
  400408:	2001      	movs	r0, #1
  40040a:	e7e9      	b.n	4003e0 <tc_find_mck_divisor+0x44>

0040040c <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  40040c:	4b01      	ldr	r3, [pc, #4]	; (400414 <gfx_mono_set_framebuffer+0x8>)
  40040e:	6018      	str	r0, [r3, #0]
  400410:	4770      	bx	lr
  400412:	bf00      	nop
  400414:	204009f0 	.word	0x204009f0

00400418 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400418:	4b02      	ldr	r3, [pc, #8]	; (400424 <gfx_mono_framebuffer_put_byte+0xc>)
  40041a:	681b      	ldr	r3, [r3, #0]
  40041c:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  400420:	5442      	strb	r2, [r0, r1]
  400422:	4770      	bx	lr
  400424:	204009f0 	.word	0x204009f0

00400428 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400428:	4b02      	ldr	r3, [pc, #8]	; (400434 <gfx_mono_framebuffer_get_byte+0xc>)
  40042a:	681b      	ldr	r3, [r3, #0]
  40042c:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  400430:	5c40      	ldrb	r0, [r0, r1]
  400432:	4770      	bx	lr
  400434:	204009f0 	.word	0x204009f0

00400438 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400438:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  40043c:	1884      	adds	r4, r0, r2
  40043e:	2c80      	cmp	r4, #128	; 0x80
  400440:	dd02      	ble.n	400448 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  400442:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  400446:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400448:	b322      	cbz	r2, 400494 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  40044a:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  40044c:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  400450:	2601      	movs	r6, #1
  400452:	fa06 f101 	lsl.w	r1, r6, r1
  400456:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400458:	2b01      	cmp	r3, #1
  40045a:	d01d      	beq.n	400498 <gfx_mono_generic_draw_horizontal_line+0x60>
  40045c:	2b00      	cmp	r3, #0
  40045e:	d035      	beq.n	4004cc <gfx_mono_generic_draw_horizontal_line+0x94>
  400460:	2b02      	cmp	r3, #2
  400462:	d117      	bne.n	400494 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400464:	3801      	subs	r0, #1
  400466:	b2c7      	uxtb	r7, r0
  400468:	19d4      	adds	r4, r2, r7
  40046a:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  40046c:	f8df a090 	ldr.w	sl, [pc, #144]	; 400500 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400470:	f04f 0900 	mov.w	r9, #0
  400474:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400504 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400478:	4621      	mov	r1, r4
  40047a:	4628      	mov	r0, r5
  40047c:	47d0      	blx	sl
			temp ^= pixelmask;
  40047e:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400482:	464b      	mov	r3, r9
  400484:	b2d2      	uxtb	r2, r2
  400486:	4621      	mov	r1, r4
  400488:	4628      	mov	r0, r5
  40048a:	47c0      	blx	r8
  40048c:	3c01      	subs	r4, #1
  40048e:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400490:	42bc      	cmp	r4, r7
  400492:	d1f1      	bne.n	400478 <gfx_mono_generic_draw_horizontal_line+0x40>
  400494:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400498:	3801      	subs	r0, #1
  40049a:	b2c7      	uxtb	r7, r0
  40049c:	19d4      	adds	r4, r2, r7
  40049e:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4004a0:	f8df a05c 	ldr.w	sl, [pc, #92]	; 400500 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  4004a4:	f04f 0900 	mov.w	r9, #0
  4004a8:	f8df 8058 	ldr.w	r8, [pc, #88]	; 400504 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4004ac:	4621      	mov	r1, r4
  4004ae:	4628      	mov	r0, r5
  4004b0:	47d0      	blx	sl
			temp |= pixelmask;
  4004b2:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4004b6:	464b      	mov	r3, r9
  4004b8:	b2d2      	uxtb	r2, r2
  4004ba:	4621      	mov	r1, r4
  4004bc:	4628      	mov	r0, r5
  4004be:	47c0      	blx	r8
  4004c0:	3c01      	subs	r4, #1
  4004c2:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4004c4:	42bc      	cmp	r4, r7
  4004c6:	d1f1      	bne.n	4004ac <gfx_mono_generic_draw_horizontal_line+0x74>
  4004c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4004cc:	3801      	subs	r0, #1
  4004ce:	b2c7      	uxtb	r7, r0
  4004d0:	19d4      	adds	r4, r2, r7
  4004d2:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4004d4:	f8df 8028 	ldr.w	r8, [pc, #40]	; 400500 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  4004d8:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  4004da:	f8df 9028 	ldr.w	r9, [pc, #40]	; 400504 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4004de:	4621      	mov	r1, r4
  4004e0:	4628      	mov	r0, r5
  4004e2:	47c0      	blx	r8
			temp &= ~pixelmask;
  4004e4:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4004e8:	2300      	movs	r3, #0
  4004ea:	b2d2      	uxtb	r2, r2
  4004ec:	4621      	mov	r1, r4
  4004ee:	4628      	mov	r0, r5
  4004f0:	47c8      	blx	r9
  4004f2:	3c01      	subs	r4, #1
  4004f4:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4004f6:	42bc      	cmp	r4, r7
  4004f8:	d1f1      	bne.n	4004de <gfx_mono_generic_draw_horizontal_line+0xa6>
  4004fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4004fe:	bf00      	nop
  400500:	00400739 	.word	0x00400739
  400504:	00400635 	.word	0x00400635

00400508 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400508:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40050c:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  400510:	b18b      	cbz	r3, 400536 <gfx_mono_generic_draw_filled_rect+0x2e>
  400512:	461c      	mov	r4, r3
  400514:	4690      	mov	r8, r2
  400516:	4606      	mov	r6, r0
  400518:	1e4d      	subs	r5, r1, #1
  40051a:	b2ed      	uxtb	r5, r5
  40051c:	442c      	add	r4, r5
  40051e:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  400520:	f8df 9018 	ldr.w	r9, [pc, #24]	; 40053c <gfx_mono_generic_draw_filled_rect+0x34>
  400524:	463b      	mov	r3, r7
  400526:	4642      	mov	r2, r8
  400528:	4621      	mov	r1, r4
  40052a:	4630      	mov	r0, r6
  40052c:	47c8      	blx	r9
  40052e:	3c01      	subs	r4, #1
  400530:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  400532:	42ac      	cmp	r4, r5
  400534:	d1f6      	bne.n	400524 <gfx_mono_generic_draw_filled_rect+0x1c>
  400536:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40053a:	bf00      	nop
  40053c:	00400439 	.word	0x00400439

00400540 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  400540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400544:	b083      	sub	sp, #12
  400546:	4604      	mov	r4, r0
  400548:	4688      	mov	r8, r1
  40054a:	4691      	mov	r9, r2
  40054c:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  40054e:	7a5b      	ldrb	r3, [r3, #9]
  400550:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400554:	2100      	movs	r1, #0
  400556:	9100      	str	r1, [sp, #0]
  400558:	4649      	mov	r1, r9
  40055a:	4640      	mov	r0, r8
  40055c:	4d21      	ldr	r5, [pc, #132]	; (4005e4 <gfx_mono_draw_char+0xa4>)
  40055e:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400560:	f89b 3000 	ldrb.w	r3, [fp]
  400564:	b113      	cbz	r3, 40056c <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  400566:	b003      	add	sp, #12
  400568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  40056c:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400570:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  400572:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  400576:	bf18      	it	ne
  400578:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  40057a:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  40057e:	f89b 700a 	ldrb.w	r7, [fp, #10]
  400582:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400584:	fb17 f70a 	smulbb	r7, r7, sl
  400588:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  40058c:	f8db 3004 	ldr.w	r3, [fp, #4]
  400590:	fa13 f787 	uxtah	r7, r3, r7
  400594:	e01f      	b.n	4005d6 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  400596:	0064      	lsls	r4, r4, #1
  400598:	b2e4      	uxtb	r4, r4
  40059a:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  40059c:	b2eb      	uxtb	r3, r5
  40059e:	429e      	cmp	r6, r3
  4005a0:	d910      	bls.n	4005c4 <gfx_mono_draw_char+0x84>
  4005a2:	b2eb      	uxtb	r3, r5
  4005a4:	eb08 0003 	add.w	r0, r8, r3
  4005a8:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  4005aa:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  4005ae:	bf08      	it	eq
  4005b0:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  4005b4:	f014 0f80 	tst.w	r4, #128	; 0x80
  4005b8:	d0ed      	beq.n	400596 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  4005ba:	2201      	movs	r2, #1
  4005bc:	4649      	mov	r1, r9
  4005be:	4b0a      	ldr	r3, [pc, #40]	; (4005e8 <gfx_mono_draw_char+0xa8>)
  4005c0:	4798      	blx	r3
  4005c2:	e7e8      	b.n	400596 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  4005c4:	f109 0901 	add.w	r9, r9, #1
  4005c8:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  4005cc:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  4005d0:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  4005d4:	d0c7      	beq.n	400566 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  4005d6:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  4005da:	2e00      	cmp	r6, #0
  4005dc:	d0f2      	beq.n	4005c4 <gfx_mono_draw_char+0x84>
  4005de:	2500      	movs	r5, #0
  4005e0:	462c      	mov	r4, r5
  4005e2:	e7de      	b.n	4005a2 <gfx_mono_draw_char+0x62>
  4005e4:	00400509 	.word	0x00400509
  4005e8:	004006d5 	.word	0x004006d5

004005ec <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  4005ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4005f0:	4604      	mov	r4, r0
  4005f2:	4690      	mov	r8, r2
  4005f4:	461d      	mov	r5, r3
  4005f6:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4005f8:	4f0d      	ldr	r7, [pc, #52]	; (400630 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4005fa:	460e      	mov	r6, r1
  4005fc:	e008      	b.n	400610 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4005fe:	7a6a      	ldrb	r2, [r5, #9]
  400600:	3201      	adds	r2, #1
  400602:	4442      	add	r2, r8
  400604:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  400608:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  40060a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40060e:	b16b      	cbz	r3, 40062c <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  400610:	7820      	ldrb	r0, [r4, #0]
  400612:	280a      	cmp	r0, #10
  400614:	d0f3      	beq.n	4005fe <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  400616:	280d      	cmp	r0, #13
  400618:	d0f7      	beq.n	40060a <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  40061a:	462b      	mov	r3, r5
  40061c:	4642      	mov	r2, r8
  40061e:	4649      	mov	r1, r9
  400620:	47b8      	blx	r7
			x += font->width;
  400622:	7a2b      	ldrb	r3, [r5, #8]
  400624:	4499      	add	r9, r3
  400626:	fa5f f989 	uxtb.w	r9, r9
  40062a:	e7ee      	b.n	40060a <gfx_mono_draw_string+0x1e>
}
  40062c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400630:	00400541 	.word	0x00400541

00400634 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  400634:	b570      	push	{r4, r5, r6, lr}
  400636:	4604      	mov	r4, r0
  400638:	460d      	mov	r5, r1
  40063a:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  40063c:	b91b      	cbnz	r3, 400646 <gfx_mono_ssd1306_put_byte+0x12>
  40063e:	4b0d      	ldr	r3, [pc, #52]	; (400674 <gfx_mono_ssd1306_put_byte+0x40>)
  400640:	4798      	blx	r3
  400642:	42b0      	cmp	r0, r6
  400644:	d015      	beq.n	400672 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  400646:	4632      	mov	r2, r6
  400648:	4629      	mov	r1, r5
  40064a:	4620      	mov	r0, r4
  40064c:	4b0a      	ldr	r3, [pc, #40]	; (400678 <gfx_mono_ssd1306_put_byte+0x44>)
  40064e:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  400650:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400654:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400658:	4c08      	ldr	r4, [pc, #32]	; (40067c <gfx_mono_ssd1306_put_byte+0x48>)
  40065a:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  40065c:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400660:	f040 0010 	orr.w	r0, r0, #16
  400664:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400666:	f005 000f 	and.w	r0, r5, #15
  40066a:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  40066c:	4630      	mov	r0, r6
  40066e:	4b04      	ldr	r3, [pc, #16]	; (400680 <gfx_mono_ssd1306_put_byte+0x4c>)
  400670:	4798      	blx	r3
  400672:	bd70      	pop	{r4, r5, r6, pc}
  400674:	00400429 	.word	0x00400429
  400678:	00400419 	.word	0x00400419
  40067c:	00400745 	.word	0x00400745
  400680:	00400965 	.word	0x00400965

00400684 <gfx_mono_ssd1306_init>:
{
  400684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400688:	480d      	ldr	r0, [pc, #52]	; (4006c0 <gfx_mono_ssd1306_init+0x3c>)
  40068a:	4b0e      	ldr	r3, [pc, #56]	; (4006c4 <gfx_mono_ssd1306_init+0x40>)
  40068c:	4798      	blx	r3
	ssd1306_init();
  40068e:	4b0e      	ldr	r3, [pc, #56]	; (4006c8 <gfx_mono_ssd1306_init+0x44>)
  400690:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400692:	2040      	movs	r0, #64	; 0x40
  400694:	4b0d      	ldr	r3, [pc, #52]	; (4006cc <gfx_mono_ssd1306_init+0x48>)
  400696:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400698:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40069a:	f04f 0801 	mov.w	r8, #1
  40069e:	462f      	mov	r7, r5
  4006a0:	4e0b      	ldr	r6, [pc, #44]	; (4006d0 <gfx_mono_ssd1306_init+0x4c>)
{
  4006a2:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4006a4:	4643      	mov	r3, r8
  4006a6:	463a      	mov	r2, r7
  4006a8:	b2e1      	uxtb	r1, r4
  4006aa:	4628      	mov	r0, r5
  4006ac:	47b0      	blx	r6
  4006ae:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  4006b0:	2c80      	cmp	r4, #128	; 0x80
  4006b2:	d1f7      	bne.n	4006a4 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4006b4:	3501      	adds	r5, #1
  4006b6:	b2ed      	uxtb	r5, r5
  4006b8:	2d04      	cmp	r5, #4
  4006ba:	d1f2      	bne.n	4006a2 <gfx_mono_ssd1306_init+0x1e>
  4006bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4006c0:	204009f4 	.word	0x204009f4
  4006c4:	0040040d 	.word	0x0040040d
  4006c8:	00400785 	.word	0x00400785
  4006cc:	00400745 	.word	0x00400745
  4006d0:	00400635 	.word	0x00400635

004006d4 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  4006d4:	09c3      	lsrs	r3, r0, #7
  4006d6:	d12a      	bne.n	40072e <gfx_mono_ssd1306_draw_pixel+0x5a>
  4006d8:	291f      	cmp	r1, #31
  4006da:	d828      	bhi.n	40072e <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  4006dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4006e0:	4614      	mov	r4, r2
  4006e2:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  4006e4:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  4006e6:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  4006ea:	2201      	movs	r2, #1
  4006ec:	fa02 f701 	lsl.w	r7, r2, r1
  4006f0:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4006f4:	4601      	mov	r1, r0
  4006f6:	4630      	mov	r0, r6
  4006f8:	4b0d      	ldr	r3, [pc, #52]	; (400730 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4006fa:	4798      	blx	r3
  4006fc:	4602      	mov	r2, r0
	switch (color) {
  4006fe:	2c01      	cmp	r4, #1
  400700:	d009      	beq.n	400716 <gfx_mono_ssd1306_draw_pixel+0x42>
  400702:	b164      	cbz	r4, 40071e <gfx_mono_ssd1306_draw_pixel+0x4a>
  400704:	2c02      	cmp	r4, #2
  400706:	d00e      	beq.n	400726 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  400708:	2300      	movs	r3, #0
  40070a:	4629      	mov	r1, r5
  40070c:	4630      	mov	r0, r6
  40070e:	4c09      	ldr	r4, [pc, #36]	; (400734 <gfx_mono_ssd1306_draw_pixel+0x60>)
  400710:	47a0      	blx	r4
  400712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  400716:	ea48 0200 	orr.w	r2, r8, r0
  40071a:	b2d2      	uxtb	r2, r2
		break;
  40071c:	e7f4      	b.n	400708 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  40071e:	ea20 0207 	bic.w	r2, r0, r7
  400722:	b2d2      	uxtb	r2, r2
		break;
  400724:	e7f0      	b.n	400708 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  400726:	ea88 0200 	eor.w	r2, r8, r0
  40072a:	b2d2      	uxtb	r2, r2
		break;
  40072c:	e7ec      	b.n	400708 <gfx_mono_ssd1306_draw_pixel+0x34>
  40072e:	4770      	bx	lr
  400730:	00400429 	.word	0x00400429
  400734:	00400635 	.word	0x00400635

00400738 <gfx_mono_ssd1306_get_byte>:
{
  400738:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  40073a:	4b01      	ldr	r3, [pc, #4]	; (400740 <gfx_mono_ssd1306_get_byte+0x8>)
  40073c:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  40073e:	bd08      	pop	{r3, pc}
  400740:	00400429 	.word	0x00400429

00400744 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  400744:	b538      	push	{r3, r4, r5, lr}
  400746:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400748:	2208      	movs	r2, #8
  40074a:	4b09      	ldr	r3, [pc, #36]	; (400770 <ssd1306_write_command+0x2c>)
  40074c:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40074e:	4c09      	ldr	r4, [pc, #36]	; (400774 <ssd1306_write_command+0x30>)
  400750:	2101      	movs	r1, #1
  400752:	4620      	mov	r0, r4
  400754:	4b08      	ldr	r3, [pc, #32]	; (400778 <ssd1306_write_command+0x34>)
  400756:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400758:	2301      	movs	r3, #1
  40075a:	461a      	mov	r2, r3
  40075c:	4629      	mov	r1, r5
  40075e:	4620      	mov	r0, r4
  400760:	4c06      	ldr	r4, [pc, #24]	; (40077c <ssd1306_write_command+0x38>)
  400762:	47a0      	blx	r4
	delay_us(10);
  400764:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400768:	4b05      	ldr	r3, [pc, #20]	; (400780 <ssd1306_write_command+0x3c>)
  40076a:	4798      	blx	r3
  40076c:	bd38      	pop	{r3, r4, r5, pc}
  40076e:	bf00      	nop
  400770:	400e1000 	.word	0x400e1000
  400774:	40008000 	.word	0x40008000
  400778:	00400245 	.word	0x00400245
  40077c:	0040025b 	.word	0x0040025b
  400780:	20400001 	.word	0x20400001

00400784 <ssd1306_init>:
{
  400784:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400788:	4d66      	ldr	r5, [pc, #408]	; (400924 <ssd1306_init+0x1a0>)
  40078a:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  40078e:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400790:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400794:	4b64      	ldr	r3, [pc, #400]	; (400928 <ssd1306_init+0x1a4>)
  400796:	2708      	movs	r7, #8
  400798:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40079a:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40079e:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4007a0:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  4007a4:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  4007a6:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4007a8:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4007ac:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  4007ae:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4007b2:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4007b4:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  4007b6:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4007ba:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  4007bc:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4007be:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4007c2:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4007c4:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4007c6:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4007ca:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4007cc:	f022 0208 	bic.w	r2, r2, #8
  4007d0:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4007d2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4007d4:	f022 0208 	bic.w	r2, r2, #8
  4007d8:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  4007da:	601f      	str	r7, [r3, #0]
  4007dc:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4007de:	631f      	str	r7, [r3, #48]	; 0x30
  4007e0:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4007e2:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400960 <ssd1306_init+0x1dc>
  4007e6:	2300      	movs	r3, #0
  4007e8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4007ec:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007f0:	4640      	mov	r0, r8
  4007f2:	4c4e      	ldr	r4, [pc, #312]	; (40092c <ssd1306_init+0x1a8>)
  4007f4:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4007f6:	2300      	movs	r3, #0
  4007f8:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4007fc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400800:	4640      	mov	r0, r8
  400802:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400804:	2300      	movs	r3, #0
  400806:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  40080a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40080e:	4640      	mov	r0, r8
  400810:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400812:	2300      	movs	r3, #0
  400814:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400818:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40081c:	4640      	mov	r0, r8
  40081e:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400820:	2300      	movs	r3, #0
  400822:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400826:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40082a:	4640      	mov	r0, r8
  40082c:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  40082e:	2300      	movs	r3, #0
  400830:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400834:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400838:	4640      	mov	r0, r8
  40083a:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  40083c:	4c3c      	ldr	r4, [pc, #240]	; (400930 <ssd1306_init+0x1ac>)
  40083e:	f04f 0902 	mov.w	r9, #2
  400842:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400846:	f04f 0880 	mov.w	r8, #128	; 0x80
  40084a:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  40084e:	6863      	ldr	r3, [r4, #4]
  400850:	f043 0301 	orr.w	r3, r3, #1
  400854:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400856:	463a      	mov	r2, r7
  400858:	2101      	movs	r1, #1
  40085a:	4620      	mov	r0, r4
  40085c:	4b35      	ldr	r3, [pc, #212]	; (400934 <ssd1306_init+0x1b0>)
  40085e:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400860:	2200      	movs	r2, #0
  400862:	2101      	movs	r1, #1
  400864:	4620      	mov	r0, r4
  400866:	4b34      	ldr	r3, [pc, #208]	; (400938 <ssd1306_init+0x1b4>)
  400868:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  40086a:	2200      	movs	r2, #0
  40086c:	2101      	movs	r1, #1
  40086e:	4620      	mov	r0, r4
  400870:	4b32      	ldr	r3, [pc, #200]	; (40093c <ssd1306_init+0x1b8>)
  400872:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400874:	6863      	ldr	r3, [r4, #4]
  400876:	f023 0302 	bic.w	r3, r3, #2
  40087a:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  40087c:	2200      	movs	r2, #0
  40087e:	2101      	movs	r1, #1
  400880:	4620      	mov	r0, r4
  400882:	4b2f      	ldr	r3, [pc, #188]	; (400940 <ssd1306_init+0x1bc>)
  400884:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400886:	6863      	ldr	r3, [r4, #4]
  400888:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40088c:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40088e:	6863      	ldr	r3, [r4, #4]
  400890:	f043 0310 	orr.w	r3, r3, #16
  400894:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  400896:	492b      	ldr	r1, [pc, #172]	; (400944 <ssd1306_init+0x1c0>)
  400898:	482b      	ldr	r0, [pc, #172]	; (400948 <ssd1306_init+0x1c4>)
  40089a:	4b2c      	ldr	r3, [pc, #176]	; (40094c <ssd1306_init+0x1c8>)
  40089c:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  40089e:	b2c2      	uxtb	r2, r0
  4008a0:	2101      	movs	r1, #1
  4008a2:	4620      	mov	r0, r4
  4008a4:	4b2a      	ldr	r3, [pc, #168]	; (400950 <ssd1306_init+0x1cc>)
  4008a6:	4798      	blx	r3
		spi_enable_clock(SPI0);
  4008a8:	4620      	mov	r0, r4
  4008aa:	4b2a      	ldr	r3, [pc, #168]	; (400954 <ssd1306_init+0x1d0>)
  4008ac:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4008ae:	2301      	movs	r3, #1
  4008b0:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4008b2:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  4008b4:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4008b8:	4c27      	ldr	r4, [pc, #156]	; (400958 <ssd1306_init+0x1d4>)
  4008ba:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4008bc:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  4008be:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4008c2:	47a0      	blx	r4
  4008c4:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  4008c6:	20a8      	movs	r0, #168	; 0xa8
  4008c8:	4c24      	ldr	r4, [pc, #144]	; (40095c <ssd1306_init+0x1d8>)
  4008ca:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  4008cc:	201f      	movs	r0, #31
  4008ce:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  4008d0:	20d3      	movs	r0, #211	; 0xd3
  4008d2:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  4008d4:	2000      	movs	r0, #0
  4008d6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  4008d8:	2040      	movs	r0, #64	; 0x40
  4008da:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  4008dc:	20a1      	movs	r0, #161	; 0xa1
  4008de:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  4008e0:	20c8      	movs	r0, #200	; 0xc8
  4008e2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  4008e4:	20da      	movs	r0, #218	; 0xda
  4008e6:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  4008e8:	4648      	mov	r0, r9
  4008ea:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  4008ec:	2081      	movs	r0, #129	; 0x81
  4008ee:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  4008f0:	208f      	movs	r0, #143	; 0x8f
  4008f2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  4008f4:	20a4      	movs	r0, #164	; 0xa4
  4008f6:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  4008f8:	20a6      	movs	r0, #166	; 0xa6
  4008fa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  4008fc:	20d5      	movs	r0, #213	; 0xd5
  4008fe:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400900:	4640      	mov	r0, r8
  400902:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400904:	208d      	movs	r0, #141	; 0x8d
  400906:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400908:	2014      	movs	r0, #20
  40090a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  40090c:	20db      	movs	r0, #219	; 0xdb
  40090e:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400910:	2040      	movs	r0, #64	; 0x40
  400912:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400914:	20d9      	movs	r0, #217	; 0xd9
  400916:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400918:	20f1      	movs	r0, #241	; 0xf1
  40091a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  40091c:	20af      	movs	r0, #175	; 0xaf
  40091e:	47a0      	blx	r4
  400920:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400924:	400e1200 	.word	0x400e1200
  400928:	400e1000 	.word	0x400e1000
  40092c:	00400c81 	.word	0x00400c81
  400930:	40008000 	.word	0x40008000
  400934:	004002cb 	.word	0x004002cb
  400938:	0040028f 	.word	0x0040028f
  40093c:	004002ad 	.word	0x004002ad
  400940:	00400311 	.word	0x00400311
  400944:	08f0d180 	.word	0x08f0d180
  400948:	001e8480 	.word	0x001e8480
  40094c:	00400325 	.word	0x00400325
  400950:	0040033b 	.word	0x0040033b
  400954:	00400219 	.word	0x00400219
  400958:	20400001 	.word	0x20400001
  40095c:	00400745 	.word	0x00400745
  400960:	400e1400 	.word	0x400e1400

00400964 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400964:	b538      	push	{r3, r4, r5, lr}
  400966:	4605      	mov	r5, r0
  400968:	2208      	movs	r2, #8
  40096a:	4b09      	ldr	r3, [pc, #36]	; (400990 <ssd1306_write_data+0x2c>)
  40096c:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40096e:	4c09      	ldr	r4, [pc, #36]	; (400994 <ssd1306_write_data+0x30>)
  400970:	2101      	movs	r1, #1
  400972:	4620      	mov	r0, r4
  400974:	4b08      	ldr	r3, [pc, #32]	; (400998 <ssd1306_write_data+0x34>)
  400976:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400978:	2301      	movs	r3, #1
  40097a:	461a      	mov	r2, r3
  40097c:	4629      	mov	r1, r5
  40097e:	4620      	mov	r0, r4
  400980:	4c06      	ldr	r4, [pc, #24]	; (40099c <ssd1306_write_data+0x38>)
  400982:	47a0      	blx	r4
	delay_us(10);
  400984:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400988:	4b05      	ldr	r3, [pc, #20]	; (4009a0 <ssd1306_write_data+0x3c>)
  40098a:	4798      	blx	r3
  40098c:	bd38      	pop	{r3, r4, r5, pc}
  40098e:	bf00      	nop
  400990:	400e1000 	.word	0x400e1000
  400994:	40008000 	.word	0x40008000
  400998:	00400245 	.word	0x00400245
  40099c:	0040025b 	.word	0x0040025b
  4009a0:	20400001 	.word	0x20400001

004009a4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4009a4:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4009a6:	4810      	ldr	r0, [pc, #64]	; (4009e8 <sysclk_init+0x44>)
  4009a8:	4b10      	ldr	r3, [pc, #64]	; (4009ec <sysclk_init+0x48>)
  4009aa:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4009ac:	213e      	movs	r1, #62	; 0x3e
  4009ae:	2000      	movs	r0, #0
  4009b0:	4b0f      	ldr	r3, [pc, #60]	; (4009f0 <sysclk_init+0x4c>)
  4009b2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4009b4:	4c0f      	ldr	r4, [pc, #60]	; (4009f4 <sysclk_init+0x50>)
  4009b6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4009b8:	2800      	cmp	r0, #0
  4009ba:	d0fc      	beq.n	4009b6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4009bc:	4b0e      	ldr	r3, [pc, #56]	; (4009f8 <sysclk_init+0x54>)
  4009be:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4009c0:	4a0e      	ldr	r2, [pc, #56]	; (4009fc <sysclk_init+0x58>)
  4009c2:	4b0f      	ldr	r3, [pc, #60]	; (400a00 <sysclk_init+0x5c>)
  4009c4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  4009c6:	4c0f      	ldr	r4, [pc, #60]	; (400a04 <sysclk_init+0x60>)
  4009c8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4009ca:	2800      	cmp	r0, #0
  4009cc:	d0fc      	beq.n	4009c8 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  4009ce:	2002      	movs	r0, #2
  4009d0:	4b0d      	ldr	r3, [pc, #52]	; (400a08 <sysclk_init+0x64>)
  4009d2:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4009d4:	2000      	movs	r0, #0
  4009d6:	4b0d      	ldr	r3, [pc, #52]	; (400a0c <sysclk_init+0x68>)
  4009d8:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4009da:	4b0d      	ldr	r3, [pc, #52]	; (400a10 <sysclk_init+0x6c>)
  4009dc:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  4009de:	4802      	ldr	r0, [pc, #8]	; (4009e8 <sysclk_init+0x44>)
  4009e0:	4b02      	ldr	r3, [pc, #8]	; (4009ec <sysclk_init+0x48>)
  4009e2:	4798      	blx	r3
  4009e4:	bd10      	pop	{r4, pc}
  4009e6:	bf00      	nop
  4009e8:	11e1a300 	.word	0x11e1a300
  4009ec:	00401485 	.word	0x00401485
  4009f0:	00400f11 	.word	0x00400f11
  4009f4:	00400f65 	.word	0x00400f65
  4009f8:	00400f75 	.word	0x00400f75
  4009fc:	20183f01 	.word	0x20183f01
  400a00:	400e0600 	.word	0x400e0600
  400a04:	00400f85 	.word	0x00400f85
  400a08:	00400e75 	.word	0x00400e75
  400a0c:	00400ead 	.word	0x00400ead
  400a10:	00401379 	.word	0x00401379

00400a14 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400a16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400a1a:	4b48      	ldr	r3, [pc, #288]	; (400b3c <board_init+0x128>)
  400a1c:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400a1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a22:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400a26:	4b46      	ldr	r3, [pc, #280]	; (400b40 <board_init+0x12c>)
  400a28:	2200      	movs	r2, #0
  400a2a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400a2e:	695a      	ldr	r2, [r3, #20]
  400a30:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400a34:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400a36:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a3a:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400a3e:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400a42:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400a46:	f007 0007 	and.w	r0, r7, #7
  400a4a:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400a4c:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400a50:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400a54:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400a58:	f3bf 8f4f 	dsb	sy
  400a5c:	f04f 34ff 	mov.w	r4, #4294967295
  400a60:	fa04 fc00 	lsl.w	ip, r4, r0
  400a64:	fa06 f000 	lsl.w	r0, r6, r0
  400a68:	fa04 f40e 	lsl.w	r4, r4, lr
  400a6c:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400a70:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400a72:	463a      	mov	r2, r7
  400a74:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400a76:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400a7a:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400a7e:	3a01      	subs	r2, #1
  400a80:	4423      	add	r3, r4
  400a82:	f1b2 3fff 	cmp.w	r2, #4294967295
  400a86:	d1f6      	bne.n	400a76 <board_init+0x62>
        } while(sets--);
  400a88:	3e01      	subs	r6, #1
  400a8a:	4460      	add	r0, ip
  400a8c:	f1b6 3fff 	cmp.w	r6, #4294967295
  400a90:	d1ef      	bne.n	400a72 <board_init+0x5e>
  400a92:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400a96:	4b2a      	ldr	r3, [pc, #168]	; (400b40 <board_init+0x12c>)
  400a98:	695a      	ldr	r2, [r3, #20]
  400a9a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400a9e:	615a      	str	r2, [r3, #20]
  400aa0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400aa4:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400aa8:	4a26      	ldr	r2, [pc, #152]	; (400b44 <board_init+0x130>)
  400aaa:	4927      	ldr	r1, [pc, #156]	; (400b48 <board_init+0x134>)
  400aac:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400aae:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400ab2:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400ab4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ab8:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400abc:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400ac0:	f022 0201 	bic.w	r2, r2, #1
  400ac4:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400ac8:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400acc:	f022 0201 	bic.w	r2, r2, #1
  400ad0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400ad4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ad8:	f3bf 8f6f 	isb	sy
  400adc:	200a      	movs	r0, #10
  400ade:	4c1b      	ldr	r4, [pc, #108]	; (400b4c <board_init+0x138>)
  400ae0:	47a0      	blx	r4
  400ae2:	200b      	movs	r0, #11
  400ae4:	47a0      	blx	r4
  400ae6:	200c      	movs	r0, #12
  400ae8:	47a0      	blx	r4
  400aea:	2010      	movs	r0, #16
  400aec:	47a0      	blx	r4
  400aee:	2011      	movs	r0, #17
  400af0:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400af2:	4b17      	ldr	r3, [pc, #92]	; (400b50 <board_init+0x13c>)
  400af4:	f44f 7280 	mov.w	r2, #256	; 0x100
  400af8:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400afa:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400afe:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400b00:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400b04:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400b08:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400b0a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400b0e:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400b10:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b14:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400b16:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400b18:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400b1c:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400b1e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400b22:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400b24:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400b26:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400b2a:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400b2c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400b30:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400b34:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400b38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400b3a:	bf00      	nop
  400b3c:	400e1850 	.word	0x400e1850
  400b40:	e000ed00 	.word	0xe000ed00
  400b44:	400e0c00 	.word	0x400e0c00
  400b48:	5a00080c 	.word	0x5a00080c
  400b4c:	00400f95 	.word	0x00400f95
  400b50:	400e1200 	.word	0x400e1200

00400b54 <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  400b54:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  400b58:	0053      	lsls	r3, r2, #1
  400b5a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b5e:	fbb2 f2f3 	udiv	r2, r2, r3
  400b62:	3a01      	subs	r2, #1
  400b64:	f3c2 020d 	ubfx	r2, r2, #0, #14
  400b68:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  400b6c:	4770      	bx	lr

00400b6e <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400b6e:	6301      	str	r1, [r0, #48]	; 0x30
  400b70:	4770      	bx	lr

00400b72 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400b72:	6341      	str	r1, [r0, #52]	; 0x34
  400b74:	4770      	bx	lr

00400b76 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400b76:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400b7a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b7e:	d105      	bne.n	400b8c <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400b80:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400b82:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400b84:	bf14      	ite	ne
  400b86:	2001      	movne	r0, #1
  400b88:	2000      	moveq	r0, #0
  400b8a:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400b8c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400b8e:	e7f8      	b.n	400b82 <pio_get+0xc>

00400b90 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400b90:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400b92:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400b96:	d03a      	beq.n	400c0e <pio_set_peripheral+0x7e>
  400b98:	d813      	bhi.n	400bc2 <pio_set_peripheral+0x32>
  400b9a:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400b9e:	d025      	beq.n	400bec <pio_set_peripheral+0x5c>
  400ba0:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400ba4:	d10a      	bne.n	400bbc <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ba6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400ba8:	4313      	orrs	r3, r2
  400baa:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400bac:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400bae:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400bb0:	400b      	ands	r3, r1
  400bb2:	ea23 0302 	bic.w	r3, r3, r2
  400bb6:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400bb8:	6042      	str	r2, [r0, #4]
  400bba:	4770      	bx	lr
	switch (ul_type) {
  400bbc:	2900      	cmp	r1, #0
  400bbe:	d1fb      	bne.n	400bb8 <pio_set_peripheral+0x28>
  400bc0:	4770      	bx	lr
  400bc2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400bc6:	d021      	beq.n	400c0c <pio_set_peripheral+0x7c>
  400bc8:	d809      	bhi.n	400bde <pio_set_peripheral+0x4e>
  400bca:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400bce:	d1f3      	bne.n	400bb8 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400bd0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400bd2:	4313      	orrs	r3, r2
  400bd4:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400bd6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400bd8:	4313      	orrs	r3, r2
  400bda:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400bdc:	e7ec      	b.n	400bb8 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400bde:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400be2:	d013      	beq.n	400c0c <pio_set_peripheral+0x7c>
  400be4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400be8:	d010      	beq.n	400c0c <pio_set_peripheral+0x7c>
  400bea:	e7e5      	b.n	400bb8 <pio_set_peripheral+0x28>
{
  400bec:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400bee:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400bf0:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400bf2:	43d3      	mvns	r3, r2
  400bf4:	4021      	ands	r1, r4
  400bf6:	461c      	mov	r4, r3
  400bf8:	4019      	ands	r1, r3
  400bfa:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400bfc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400bfe:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c00:	400b      	ands	r3, r1
  400c02:	4023      	ands	r3, r4
  400c04:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400c06:	6042      	str	r2, [r0, #4]
}
  400c08:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c0c:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c0e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c10:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400c12:	400b      	ands	r3, r1
  400c14:	ea23 0302 	bic.w	r3, r3, r2
  400c18:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c1a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c1c:	4313      	orrs	r3, r2
  400c1e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c20:	e7ca      	b.n	400bb8 <pio_set_peripheral+0x28>

00400c22 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400c22:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c24:	f012 0f01 	tst.w	r2, #1
  400c28:	d10d      	bne.n	400c46 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400c2a:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400c2c:	f012 0f0a 	tst.w	r2, #10
  400c30:	d00b      	beq.n	400c4a <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400c32:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400c34:	f012 0f02 	tst.w	r2, #2
  400c38:	d109      	bne.n	400c4e <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400c3a:	f012 0f08 	tst.w	r2, #8
  400c3e:	d008      	beq.n	400c52 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400c40:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400c44:	e005      	b.n	400c52 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400c46:	6641      	str	r1, [r0, #100]	; 0x64
  400c48:	e7f0      	b.n	400c2c <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400c4a:	6241      	str	r1, [r0, #36]	; 0x24
  400c4c:	e7f2      	b.n	400c34 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400c4e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400c52:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400c54:	6001      	str	r1, [r0, #0]
  400c56:	4770      	bx	lr

00400c58 <pio_set_output>:
{
  400c58:	b410      	push	{r4}
  400c5a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400c5c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c5e:	b94c      	cbnz	r4, 400c74 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400c60:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400c62:	b14b      	cbz	r3, 400c78 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400c64:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400c66:	b94a      	cbnz	r2, 400c7c <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400c68:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400c6a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400c6c:	6001      	str	r1, [r0, #0]
}
  400c6e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c72:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400c74:	6641      	str	r1, [r0, #100]	; 0x64
  400c76:	e7f4      	b.n	400c62 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400c78:	6541      	str	r1, [r0, #84]	; 0x54
  400c7a:	e7f4      	b.n	400c66 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400c7c:	6301      	str	r1, [r0, #48]	; 0x30
  400c7e:	e7f4      	b.n	400c6a <pio_set_output+0x12>

00400c80 <pio_configure>:
{
  400c80:	b570      	push	{r4, r5, r6, lr}
  400c82:	b082      	sub	sp, #8
  400c84:	4605      	mov	r5, r0
  400c86:	4616      	mov	r6, r2
  400c88:	461c      	mov	r4, r3
	switch (ul_type) {
  400c8a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c8e:	d014      	beq.n	400cba <pio_configure+0x3a>
  400c90:	d90a      	bls.n	400ca8 <pio_configure+0x28>
  400c92:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c96:	d024      	beq.n	400ce2 <pio_configure+0x62>
  400c98:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c9c:	d021      	beq.n	400ce2 <pio_configure+0x62>
  400c9e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400ca2:	d017      	beq.n	400cd4 <pio_configure+0x54>
		return 0;
  400ca4:	2000      	movs	r0, #0
  400ca6:	e01a      	b.n	400cde <pio_configure+0x5e>
	switch (ul_type) {
  400ca8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400cac:	d005      	beq.n	400cba <pio_configure+0x3a>
  400cae:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400cb2:	d002      	beq.n	400cba <pio_configure+0x3a>
  400cb4:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400cb8:	d1f4      	bne.n	400ca4 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400cba:	4632      	mov	r2, r6
  400cbc:	4628      	mov	r0, r5
  400cbe:	4b11      	ldr	r3, [pc, #68]	; (400d04 <pio_configure+0x84>)
  400cc0:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400cc2:	f014 0f01 	tst.w	r4, #1
  400cc6:	d102      	bne.n	400cce <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400cc8:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400cca:	2001      	movs	r0, #1
  400ccc:	e007      	b.n	400cde <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400cce:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400cd0:	2001      	movs	r0, #1
  400cd2:	e004      	b.n	400cde <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400cd4:	461a      	mov	r2, r3
  400cd6:	4631      	mov	r1, r6
  400cd8:	4b0b      	ldr	r3, [pc, #44]	; (400d08 <pio_configure+0x88>)
  400cda:	4798      	blx	r3
	return 1;
  400cdc:	2001      	movs	r0, #1
}
  400cde:	b002      	add	sp, #8
  400ce0:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400ce2:	f004 0301 	and.w	r3, r4, #1
  400ce6:	9300      	str	r3, [sp, #0]
  400ce8:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400cec:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400cf0:	bf14      	ite	ne
  400cf2:	2200      	movne	r2, #0
  400cf4:	2201      	moveq	r2, #1
  400cf6:	4631      	mov	r1, r6
  400cf8:	4628      	mov	r0, r5
  400cfa:	4c04      	ldr	r4, [pc, #16]	; (400d0c <pio_configure+0x8c>)
  400cfc:	47a0      	blx	r4
	return 1;
  400cfe:	2001      	movs	r0, #1
		break;
  400d00:	e7ed      	b.n	400cde <pio_configure+0x5e>
  400d02:	bf00      	nop
  400d04:	00400b91 	.word	0x00400b91
  400d08:	00400c23 	.word	0x00400c23
  400d0c:	00400c59 	.word	0x00400c59

00400d10 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400d10:	f012 0f10 	tst.w	r2, #16
  400d14:	d012      	beq.n	400d3c <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400d16:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400d1a:	f012 0f20 	tst.w	r2, #32
  400d1e:	d007      	beq.n	400d30 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400d20:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400d24:	f012 0f40 	tst.w	r2, #64	; 0x40
  400d28:	d005      	beq.n	400d36 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400d2a:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400d2e:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400d30:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400d34:	e7f6      	b.n	400d24 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400d36:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400d3a:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400d3c:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400d40:	4770      	bx	lr

00400d42 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400d42:	6401      	str	r1, [r0, #64]	; 0x40
  400d44:	4770      	bx	lr

00400d46 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400d46:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400d48:	4770      	bx	lr

00400d4a <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400d4a:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400d4c:	4770      	bx	lr
	...

00400d50 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400d50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400d54:	4604      	mov	r4, r0
  400d56:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400d58:	4b0e      	ldr	r3, [pc, #56]	; (400d94 <pio_handler_process+0x44>)
  400d5a:	4798      	blx	r3
  400d5c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400d5e:	4620      	mov	r0, r4
  400d60:	4b0d      	ldr	r3, [pc, #52]	; (400d98 <pio_handler_process+0x48>)
  400d62:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400d64:	4005      	ands	r5, r0
  400d66:	d013      	beq.n	400d90 <pio_handler_process+0x40>
  400d68:	4c0c      	ldr	r4, [pc, #48]	; (400d9c <pio_handler_process+0x4c>)
  400d6a:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400d6e:	e003      	b.n	400d78 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400d70:	42b4      	cmp	r4, r6
  400d72:	d00d      	beq.n	400d90 <pio_handler_process+0x40>
  400d74:	3410      	adds	r4, #16
		while (status != 0) {
  400d76:	b15d      	cbz	r5, 400d90 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400d78:	6820      	ldr	r0, [r4, #0]
  400d7a:	4540      	cmp	r0, r8
  400d7c:	d1f8      	bne.n	400d70 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400d7e:	6861      	ldr	r1, [r4, #4]
  400d80:	4229      	tst	r1, r5
  400d82:	d0f5      	beq.n	400d70 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400d84:	68e3      	ldr	r3, [r4, #12]
  400d86:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400d88:	6863      	ldr	r3, [r4, #4]
  400d8a:	ea25 0503 	bic.w	r5, r5, r3
  400d8e:	e7ef      	b.n	400d70 <pio_handler_process+0x20>
  400d90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400d94:	00400d47 	.word	0x00400d47
  400d98:	00400d4b 	.word	0x00400d4b
  400d9c:	20400bf4 	.word	0x20400bf4

00400da0 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400da2:	4c18      	ldr	r4, [pc, #96]	; (400e04 <pio_handler_set+0x64>)
  400da4:	6826      	ldr	r6, [r4, #0]
  400da6:	2e06      	cmp	r6, #6
  400da8:	d82a      	bhi.n	400e00 <pio_handler_set+0x60>
  400daa:	f04f 0c00 	mov.w	ip, #0
  400dae:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400db0:	4f15      	ldr	r7, [pc, #84]	; (400e08 <pio_handler_set+0x68>)
  400db2:	e004      	b.n	400dbe <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400db4:	3401      	adds	r4, #1
  400db6:	b2e4      	uxtb	r4, r4
  400db8:	46a4      	mov	ip, r4
  400dba:	42a6      	cmp	r6, r4
  400dbc:	d309      	bcc.n	400dd2 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400dbe:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400dc0:	0125      	lsls	r5, r4, #4
  400dc2:	597d      	ldr	r5, [r7, r5]
  400dc4:	428d      	cmp	r5, r1
  400dc6:	d1f5      	bne.n	400db4 <pio_handler_set+0x14>
  400dc8:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400dcc:	686d      	ldr	r5, [r5, #4]
  400dce:	4295      	cmp	r5, r2
  400dd0:	d1f0      	bne.n	400db4 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400dd2:	4d0d      	ldr	r5, [pc, #52]	; (400e08 <pio_handler_set+0x68>)
  400dd4:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400dd8:	eb05 040e 	add.w	r4, r5, lr
  400ddc:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400de0:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400de2:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400de4:	9906      	ldr	r1, [sp, #24]
  400de6:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400de8:	3601      	adds	r6, #1
  400dea:	4566      	cmp	r6, ip
  400dec:	d005      	beq.n	400dfa <pio_handler_set+0x5a>
  400dee:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400df0:	461a      	mov	r2, r3
  400df2:	4b06      	ldr	r3, [pc, #24]	; (400e0c <pio_handler_set+0x6c>)
  400df4:	4798      	blx	r3

	return 0;
  400df6:	2000      	movs	r0, #0
  400df8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400dfa:	4902      	ldr	r1, [pc, #8]	; (400e04 <pio_handler_set+0x64>)
  400dfc:	600e      	str	r6, [r1, #0]
  400dfe:	e7f6      	b.n	400dee <pio_handler_set+0x4e>
		return 1;
  400e00:	2001      	movs	r0, #1
}
  400e02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400e04:	20400c64 	.word	0x20400c64
  400e08:	20400bf4 	.word	0x20400bf4
  400e0c:	00400d11 	.word	0x00400d11

00400e10 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400e10:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400e12:	210a      	movs	r1, #10
  400e14:	4801      	ldr	r0, [pc, #4]	; (400e1c <PIOA_Handler+0xc>)
  400e16:	4b02      	ldr	r3, [pc, #8]	; (400e20 <PIOA_Handler+0x10>)
  400e18:	4798      	blx	r3
  400e1a:	bd08      	pop	{r3, pc}
  400e1c:	400e0e00 	.word	0x400e0e00
  400e20:	00400d51 	.word	0x00400d51

00400e24 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400e24:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400e26:	210b      	movs	r1, #11
  400e28:	4801      	ldr	r0, [pc, #4]	; (400e30 <PIOB_Handler+0xc>)
  400e2a:	4b02      	ldr	r3, [pc, #8]	; (400e34 <PIOB_Handler+0x10>)
  400e2c:	4798      	blx	r3
  400e2e:	bd08      	pop	{r3, pc}
  400e30:	400e1000 	.word	0x400e1000
  400e34:	00400d51 	.word	0x00400d51

00400e38 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400e38:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400e3a:	210c      	movs	r1, #12
  400e3c:	4801      	ldr	r0, [pc, #4]	; (400e44 <PIOC_Handler+0xc>)
  400e3e:	4b02      	ldr	r3, [pc, #8]	; (400e48 <PIOC_Handler+0x10>)
  400e40:	4798      	blx	r3
  400e42:	bd08      	pop	{r3, pc}
  400e44:	400e1200 	.word	0x400e1200
  400e48:	00400d51 	.word	0x00400d51

00400e4c <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400e4c:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400e4e:	2110      	movs	r1, #16
  400e50:	4801      	ldr	r0, [pc, #4]	; (400e58 <PIOD_Handler+0xc>)
  400e52:	4b02      	ldr	r3, [pc, #8]	; (400e5c <PIOD_Handler+0x10>)
  400e54:	4798      	blx	r3
  400e56:	bd08      	pop	{r3, pc}
  400e58:	400e1400 	.word	0x400e1400
  400e5c:	00400d51 	.word	0x00400d51

00400e60 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400e60:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400e62:	2111      	movs	r1, #17
  400e64:	4801      	ldr	r0, [pc, #4]	; (400e6c <PIOE_Handler+0xc>)
  400e66:	4b02      	ldr	r3, [pc, #8]	; (400e70 <PIOE_Handler+0x10>)
  400e68:	4798      	blx	r3
  400e6a:	bd08      	pop	{r3, pc}
  400e6c:	400e1600 	.word	0x400e1600
  400e70:	00400d51 	.word	0x00400d51

00400e74 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400e74:	2803      	cmp	r0, #3
  400e76:	d011      	beq.n	400e9c <pmc_mck_set_division+0x28>
  400e78:	2804      	cmp	r0, #4
  400e7a:	d012      	beq.n	400ea2 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400e7c:	2802      	cmp	r0, #2
  400e7e:	bf0c      	ite	eq
  400e80:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400e84:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400e86:	4a08      	ldr	r2, [pc, #32]	; (400ea8 <pmc_mck_set_division+0x34>)
  400e88:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e8a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400e8e:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400e90:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400e92:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e94:	f013 0f08 	tst.w	r3, #8
  400e98:	d0fb      	beq.n	400e92 <pmc_mck_set_division+0x1e>
}
  400e9a:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400e9c:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400ea0:	e7f1      	b.n	400e86 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400ea2:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400ea6:	e7ee      	b.n	400e86 <pmc_mck_set_division+0x12>
  400ea8:	400e0600 	.word	0x400e0600

00400eac <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400eac:	4a17      	ldr	r2, [pc, #92]	; (400f0c <pmc_switch_mck_to_pllack+0x60>)
  400eae:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400eb0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400eb4:	4318      	orrs	r0, r3
  400eb6:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400eb8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400eba:	f013 0f08 	tst.w	r3, #8
  400ebe:	d10a      	bne.n	400ed6 <pmc_switch_mck_to_pllack+0x2a>
  400ec0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400ec4:	4911      	ldr	r1, [pc, #68]	; (400f0c <pmc_switch_mck_to_pllack+0x60>)
  400ec6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400ec8:	f012 0f08 	tst.w	r2, #8
  400ecc:	d103      	bne.n	400ed6 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400ece:	3b01      	subs	r3, #1
  400ed0:	d1f9      	bne.n	400ec6 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400ed2:	2001      	movs	r0, #1
  400ed4:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400ed6:	4a0d      	ldr	r2, [pc, #52]	; (400f0c <pmc_switch_mck_to_pllack+0x60>)
  400ed8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400eda:	f023 0303 	bic.w	r3, r3, #3
  400ede:	f043 0302 	orr.w	r3, r3, #2
  400ee2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400ee4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400ee6:	f013 0f08 	tst.w	r3, #8
  400eea:	d10a      	bne.n	400f02 <pmc_switch_mck_to_pllack+0x56>
  400eec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400ef0:	4906      	ldr	r1, [pc, #24]	; (400f0c <pmc_switch_mck_to_pllack+0x60>)
  400ef2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400ef4:	f012 0f08 	tst.w	r2, #8
  400ef8:	d105      	bne.n	400f06 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400efa:	3b01      	subs	r3, #1
  400efc:	d1f9      	bne.n	400ef2 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400efe:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400f00:	4770      	bx	lr
	return 0;
  400f02:	2000      	movs	r0, #0
  400f04:	4770      	bx	lr
  400f06:	2000      	movs	r0, #0
  400f08:	4770      	bx	lr
  400f0a:	bf00      	nop
  400f0c:	400e0600 	.word	0x400e0600

00400f10 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400f10:	b9a0      	cbnz	r0, 400f3c <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400f12:	480e      	ldr	r0, [pc, #56]	; (400f4c <pmc_switch_mainck_to_xtal+0x3c>)
  400f14:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400f16:	0209      	lsls	r1, r1, #8
  400f18:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400f1a:	4a0d      	ldr	r2, [pc, #52]	; (400f50 <pmc_switch_mainck_to_xtal+0x40>)
  400f1c:	401a      	ands	r2, r3
  400f1e:	4b0d      	ldr	r3, [pc, #52]	; (400f54 <pmc_switch_mainck_to_xtal+0x44>)
  400f20:	4313      	orrs	r3, r2
  400f22:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400f24:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400f26:	4602      	mov	r2, r0
  400f28:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f2a:	f013 0f01 	tst.w	r3, #1
  400f2e:	d0fb      	beq.n	400f28 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400f30:	4a06      	ldr	r2, [pc, #24]	; (400f4c <pmc_switch_mainck_to_xtal+0x3c>)
  400f32:	6a11      	ldr	r1, [r2, #32]
  400f34:	4b08      	ldr	r3, [pc, #32]	; (400f58 <pmc_switch_mainck_to_xtal+0x48>)
  400f36:	430b      	orrs	r3, r1
  400f38:	6213      	str	r3, [r2, #32]
  400f3a:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400f3c:	4903      	ldr	r1, [pc, #12]	; (400f4c <pmc_switch_mainck_to_xtal+0x3c>)
  400f3e:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400f40:	4a06      	ldr	r2, [pc, #24]	; (400f5c <pmc_switch_mainck_to_xtal+0x4c>)
  400f42:	401a      	ands	r2, r3
  400f44:	4b06      	ldr	r3, [pc, #24]	; (400f60 <pmc_switch_mainck_to_xtal+0x50>)
  400f46:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400f48:	620b      	str	r3, [r1, #32]
  400f4a:	4770      	bx	lr
  400f4c:	400e0600 	.word	0x400e0600
  400f50:	ffc8fffc 	.word	0xffc8fffc
  400f54:	00370001 	.word	0x00370001
  400f58:	01370000 	.word	0x01370000
  400f5c:	fec8fffc 	.word	0xfec8fffc
  400f60:	01370002 	.word	0x01370002

00400f64 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400f64:	4b02      	ldr	r3, [pc, #8]	; (400f70 <pmc_osc_is_ready_mainck+0xc>)
  400f66:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f68:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400f6c:	4770      	bx	lr
  400f6e:	bf00      	nop
  400f70:	400e0600 	.word	0x400e0600

00400f74 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400f74:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400f78:	4b01      	ldr	r3, [pc, #4]	; (400f80 <pmc_disable_pllack+0xc>)
  400f7a:	629a      	str	r2, [r3, #40]	; 0x28
  400f7c:	4770      	bx	lr
  400f7e:	bf00      	nop
  400f80:	400e0600 	.word	0x400e0600

00400f84 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400f84:	4b02      	ldr	r3, [pc, #8]	; (400f90 <pmc_is_locked_pllack+0xc>)
  400f86:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f88:	f000 0002 	and.w	r0, r0, #2
  400f8c:	4770      	bx	lr
  400f8e:	bf00      	nop
  400f90:	400e0600 	.word	0x400e0600

00400f94 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400f94:	283f      	cmp	r0, #63	; 0x3f
  400f96:	d81e      	bhi.n	400fd6 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400f98:	281f      	cmp	r0, #31
  400f9a:	d80c      	bhi.n	400fb6 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400f9c:	4b11      	ldr	r3, [pc, #68]	; (400fe4 <pmc_enable_periph_clk+0x50>)
  400f9e:	699a      	ldr	r2, [r3, #24]
  400fa0:	2301      	movs	r3, #1
  400fa2:	4083      	lsls	r3, r0
  400fa4:	4393      	bics	r3, r2
  400fa6:	d018      	beq.n	400fda <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400fa8:	2301      	movs	r3, #1
  400faa:	fa03 f000 	lsl.w	r0, r3, r0
  400fae:	4b0d      	ldr	r3, [pc, #52]	; (400fe4 <pmc_enable_periph_clk+0x50>)
  400fb0:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400fb2:	2000      	movs	r0, #0
  400fb4:	4770      	bx	lr
		ul_id -= 32;
  400fb6:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400fb8:	4b0a      	ldr	r3, [pc, #40]	; (400fe4 <pmc_enable_periph_clk+0x50>)
  400fba:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400fbe:	2301      	movs	r3, #1
  400fc0:	4083      	lsls	r3, r0
  400fc2:	4393      	bics	r3, r2
  400fc4:	d00b      	beq.n	400fde <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400fc6:	2301      	movs	r3, #1
  400fc8:	fa03 f000 	lsl.w	r0, r3, r0
  400fcc:	4b05      	ldr	r3, [pc, #20]	; (400fe4 <pmc_enable_periph_clk+0x50>)
  400fce:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400fd2:	2000      	movs	r0, #0
  400fd4:	4770      	bx	lr
		return 1;
  400fd6:	2001      	movs	r0, #1
  400fd8:	4770      	bx	lr
	return 0;
  400fda:	2000      	movs	r0, #0
  400fdc:	4770      	bx	lr
  400fde:	2000      	movs	r0, #0
}
  400fe0:	4770      	bx	lr
  400fe2:	bf00      	nop
  400fe4:	400e0600 	.word	0x400e0600

00400fe8 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  400fe8:	4770      	bx	lr
	...

00400fec <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  400fec:	4a10      	ldr	r2, [pc, #64]	; (401030 <pmc_enable_waitmode+0x44>)
  400fee:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400ff0:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400ff4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  400ff8:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  400ffa:	6a11      	ldr	r1, [r2, #32]
  400ffc:	4b0d      	ldr	r3, [pc, #52]	; (401034 <pmc_enable_waitmode+0x48>)
  400ffe:	430b      	orrs	r3, r1
  401000:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401002:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401004:	f013 0f08 	tst.w	r3, #8
  401008:	d0fb      	beq.n	401002 <pmc_enable_waitmode+0x16>
  40100a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  40100e:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  401010:	3b01      	subs	r3, #1
  401012:	d1fc      	bne.n	40100e <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  401014:	4a06      	ldr	r2, [pc, #24]	; (401030 <pmc_enable_waitmode+0x44>)
  401016:	6a13      	ldr	r3, [r2, #32]
  401018:	f013 0f08 	tst.w	r3, #8
  40101c:	d0fb      	beq.n	401016 <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  40101e:	4a04      	ldr	r2, [pc, #16]	; (401030 <pmc_enable_waitmode+0x44>)
  401020:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401022:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401026:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  40102a:	6713      	str	r3, [r2, #112]	; 0x70
  40102c:	4770      	bx	lr
  40102e:	bf00      	nop
  401030:	400e0600 	.word	0x400e0600
  401034:	00370004 	.word	0x00370004

00401038 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  401038:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  40103c:	1e43      	subs	r3, r0, #1
  40103e:	2b04      	cmp	r3, #4
  401040:	f200 8107 	bhi.w	401252 <pmc_sleep+0x21a>
  401044:	e8df f013 	tbh	[pc, r3, lsl #1]
  401048:	00050005 	.word	0x00050005
  40104c:	00150015 	.word	0x00150015
  401050:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  401052:	4a81      	ldr	r2, [pc, #516]	; (401258 <pmc_sleep+0x220>)
  401054:	6913      	ldr	r3, [r2, #16]
  401056:	f023 0304 	bic.w	r3, r3, #4
  40105a:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  40105c:	2201      	movs	r2, #1
  40105e:	4b7f      	ldr	r3, [pc, #508]	; (40125c <pmc_sleep+0x224>)
  401060:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401062:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  401066:	b662      	cpsie	i
  __ASM volatile ("dsb");
  401068:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  40106c:	bf30      	wfi
  40106e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401072:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  401074:	2803      	cmp	r0, #3
  401076:	bf0c      	ite	eq
  401078:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  40107a:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  40107e:	4b78      	ldr	r3, [pc, #480]	; (401260 <pmc_sleep+0x228>)
  401080:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  401082:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401084:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  401088:	2200      	movs	r2, #0
  40108a:	4b74      	ldr	r3, [pc, #464]	; (40125c <pmc_sleep+0x224>)
  40108c:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  40108e:	2201      	movs	r2, #1
  401090:	4b74      	ldr	r3, [pc, #464]	; (401264 <pmc_sleep+0x22c>)
  401092:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  401094:	4b74      	ldr	r3, [pc, #464]	; (401268 <pmc_sleep+0x230>)
  401096:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  401098:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  40109a:	4a74      	ldr	r2, [pc, #464]	; (40126c <pmc_sleep+0x234>)
  40109c:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  4010a0:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  4010a2:	4a73      	ldr	r2, [pc, #460]	; (401270 <pmc_sleep+0x238>)
  4010a4:	433a      	orrs	r2, r7
  4010a6:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  4010a8:	f005 0903 	and.w	r9, r5, #3
  4010ac:	f1b9 0f01 	cmp.w	r9, #1
  4010b0:	f240 8089 	bls.w	4011c6 <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  4010b4:	f025 0103 	bic.w	r1, r5, #3
  4010b8:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  4010bc:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010be:	461a      	mov	r2, r3
  4010c0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010c2:	f013 0f08 	tst.w	r3, #8
  4010c6:	d0fb      	beq.n	4010c0 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  4010c8:	f011 0f70 	tst.w	r1, #112	; 0x70
  4010cc:	d008      	beq.n	4010e0 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  4010ce:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  4010d2:	4b65      	ldr	r3, [pc, #404]	; (401268 <pmc_sleep+0x230>)
  4010d4:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010d6:	461a      	mov	r2, r3
  4010d8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010da:	f013 0f08 	tst.w	r3, #8
  4010de:	d0fb      	beq.n	4010d8 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  4010e0:	4b64      	ldr	r3, [pc, #400]	; (401274 <pmc_sleep+0x23c>)
  4010e2:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4010e4:	4a60      	ldr	r2, [pc, #384]	; (401268 <pmc_sleep+0x230>)
  4010e6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010e8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  4010ec:	d0fb      	beq.n	4010e6 <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  4010ee:	4a5e      	ldr	r2, [pc, #376]	; (401268 <pmc_sleep+0x230>)
  4010f0:	6a11      	ldr	r1, [r2, #32]
  4010f2:	4b61      	ldr	r3, [pc, #388]	; (401278 <pmc_sleep+0x240>)
  4010f4:	400b      	ands	r3, r1
  4010f6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4010fa:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4010fc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010fe:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401102:	d0fb      	beq.n	4010fc <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  401104:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401108:	4a58      	ldr	r2, [pc, #352]	; (40126c <pmc_sleep+0x234>)
  40110a:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  40110c:	2c04      	cmp	r4, #4
  40110e:	d05c      	beq.n	4011ca <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  401110:	4c52      	ldr	r4, [pc, #328]	; (40125c <pmc_sleep+0x224>)
  401112:	2301      	movs	r3, #1
  401114:	7023      	strb	r3, [r4, #0]
  401116:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40111a:	b662      	cpsie	i

		pmc_enable_waitmode();
  40111c:	4b57      	ldr	r3, [pc, #348]	; (40127c <pmc_sleep+0x244>)
  40111e:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  401120:	b672      	cpsid	i
  401122:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  401126:	2300      	movs	r3, #0
  401128:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  40112a:	f017 0f02 	tst.w	r7, #2
  40112e:	d055      	beq.n	4011dc <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401130:	4a4d      	ldr	r2, [pc, #308]	; (401268 <pmc_sleep+0x230>)
  401132:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401134:	4952      	ldr	r1, [pc, #328]	; (401280 <pmc_sleep+0x248>)
  401136:	4019      	ands	r1, r3
  401138:	4b52      	ldr	r3, [pc, #328]	; (401284 <pmc_sleep+0x24c>)
  40113a:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40113c:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40113e:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  401140:	4b51      	ldr	r3, [pc, #324]	; (401288 <pmc_sleep+0x250>)
  401142:	400b      	ands	r3, r1
  401144:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401148:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  40114a:	4b50      	ldr	r3, [pc, #320]	; (40128c <pmc_sleep+0x254>)
  40114c:	4033      	ands	r3, r6
  40114e:	2b00      	cmp	r3, #0
  401150:	d06e      	beq.n	401230 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  401152:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  401156:	4b44      	ldr	r3, [pc, #272]	; (401268 <pmc_sleep+0x230>)
  401158:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  40115a:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  40115c:	f1b9 0f02 	cmp.w	r9, #2
  401160:	d104      	bne.n	40116c <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  401162:	4a41      	ldr	r2, [pc, #260]	; (401268 <pmc_sleep+0x230>)
  401164:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401166:	f013 0f02 	tst.w	r3, #2
  40116a:	d0fb      	beq.n	401164 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  40116c:	4a3e      	ldr	r2, [pc, #248]	; (401268 <pmc_sleep+0x230>)
  40116e:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401170:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  401174:	f005 0070 	and.w	r0, r5, #112	; 0x70
  401178:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  40117a:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40117c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40117e:	f013 0f08 	tst.w	r3, #8
  401182:	d0fb      	beq.n	40117c <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  401184:	4b39      	ldr	r3, [pc, #228]	; (40126c <pmc_sleep+0x234>)
  401186:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  40118a:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  40118e:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401190:	461a      	mov	r2, r3
  401192:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401194:	f013 0f08 	tst.w	r3, #8
  401198:	d0fb      	beq.n	401192 <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  40119a:	4a33      	ldr	r2, [pc, #204]	; (401268 <pmc_sleep+0x230>)
  40119c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40119e:	420b      	tst	r3, r1
  4011a0:	d0fc      	beq.n	40119c <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  4011a2:	2200      	movs	r2, #0
  4011a4:	4b2f      	ldr	r3, [pc, #188]	; (401264 <pmc_sleep+0x22c>)
  4011a6:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  4011a8:	4b39      	ldr	r3, [pc, #228]	; (401290 <pmc_sleep+0x258>)
  4011aa:	681b      	ldr	r3, [r3, #0]
  4011ac:	b11b      	cbz	r3, 4011b6 <pmc_sleep+0x17e>
			callback_clocks_restored();
  4011ae:	4798      	blx	r3
			callback_clocks_restored = NULL;
  4011b0:	2200      	movs	r2, #0
  4011b2:	4b37      	ldr	r3, [pc, #220]	; (401290 <pmc_sleep+0x258>)
  4011b4:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  4011b6:	2201      	movs	r2, #1
  4011b8:	4b28      	ldr	r3, [pc, #160]	; (40125c <pmc_sleep+0x224>)
  4011ba:	701a      	strb	r2, [r3, #0]
  4011bc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4011c0:	b662      	cpsie	i
  4011c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  4011c6:	4629      	mov	r1, r5
  4011c8:	e77e      	b.n	4010c8 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4011ca:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  4011ce:	6a11      	ldr	r1, [r2, #32]
  4011d0:	4b30      	ldr	r3, [pc, #192]	; (401294 <pmc_sleep+0x25c>)
  4011d2:	400b      	ands	r3, r1
  4011d4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4011d8:	6213      	str	r3, [r2, #32]
  4011da:	e799      	b.n	401110 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  4011dc:	f017 0f01 	tst.w	r7, #1
  4011e0:	d0b3      	beq.n	40114a <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  4011e2:	4b21      	ldr	r3, [pc, #132]	; (401268 <pmc_sleep+0x230>)
  4011e4:	6a1b      	ldr	r3, [r3, #32]
  4011e6:	f013 0f01 	tst.w	r3, #1
  4011ea:	d10b      	bne.n	401204 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4011ec:	491e      	ldr	r1, [pc, #120]	; (401268 <pmc_sleep+0x230>)
  4011ee:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  4011f0:	4a29      	ldr	r2, [pc, #164]	; (401298 <pmc_sleep+0x260>)
  4011f2:	401a      	ands	r2, r3
  4011f4:	4b29      	ldr	r3, [pc, #164]	; (40129c <pmc_sleep+0x264>)
  4011f6:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4011f8:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4011fa:	460a      	mov	r2, r1
  4011fc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011fe:	f013 0f01 	tst.w	r3, #1
  401202:	d0fb      	beq.n	4011fc <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  401204:	4b18      	ldr	r3, [pc, #96]	; (401268 <pmc_sleep+0x230>)
  401206:	6a1b      	ldr	r3, [r3, #32]
  401208:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40120c:	d108      	bne.n	401220 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40120e:	4a16      	ldr	r2, [pc, #88]	; (401268 <pmc_sleep+0x230>)
  401210:	6a11      	ldr	r1, [r2, #32]
  401212:	4b23      	ldr	r3, [pc, #140]	; (4012a0 <pmc_sleep+0x268>)
  401214:	430b      	orrs	r3, r1
  401216:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401218:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40121a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40121e:	d0fb      	beq.n	401218 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401220:	4a11      	ldr	r2, [pc, #68]	; (401268 <pmc_sleep+0x230>)
  401222:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  401224:	4b18      	ldr	r3, [pc, #96]	; (401288 <pmc_sleep+0x250>)
  401226:	400b      	ands	r3, r1
  401228:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40122c:	6213      	str	r3, [r2, #32]
  40122e:	e78c      	b.n	40114a <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  401230:	2100      	movs	r1, #0
  401232:	e793      	b.n	40115c <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  401234:	4a08      	ldr	r2, [pc, #32]	; (401258 <pmc_sleep+0x220>)
  401236:	6913      	ldr	r3, [r2, #16]
  401238:	f043 0304 	orr.w	r3, r3, #4
  40123c:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  40123e:	4a19      	ldr	r2, [pc, #100]	; (4012a4 <pmc_sleep+0x26c>)
  401240:	4b19      	ldr	r3, [pc, #100]	; (4012a8 <pmc_sleep+0x270>)
  401242:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  401244:	2201      	movs	r2, #1
  401246:	4b05      	ldr	r3, [pc, #20]	; (40125c <pmc_sleep+0x224>)
  401248:	701a      	strb	r2, [r3, #0]
  40124a:	f3bf 8f5f 	dmb	sy
  40124e:	b662      	cpsie	i
  __ASM volatile ("wfi");
  401250:	bf30      	wfi
  401252:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401256:	bf00      	nop
  401258:	e000ed00 	.word	0xe000ed00
  40125c:	20400018 	.word	0x20400018
  401260:	00400fe9 	.word	0x00400fe9
  401264:	20400c68 	.word	0x20400c68
  401268:	400e0600 	.word	0x400e0600
  40126c:	400e0c00 	.word	0x400e0c00
  401270:	00370008 	.word	0x00370008
  401274:	00400f75 	.word	0x00400f75
  401278:	fec8ffff 	.word	0xfec8ffff
  40127c:	00400fed 	.word	0x00400fed
  401280:	fec8fffc 	.word	0xfec8fffc
  401284:	01370002 	.word	0x01370002
  401288:	ffc8ff87 	.word	0xffc8ff87
  40128c:	07ff0000 	.word	0x07ff0000
  401290:	20400c6c 	.word	0x20400c6c
  401294:	ffc8fffe 	.word	0xffc8fffe
  401298:	ffc8fffc 	.word	0xffc8fffc
  40129c:	00370001 	.word	0x00370001
  4012a0:	01370000 	.word	0x01370000
  4012a4:	a5000004 	.word	0xa5000004
  4012a8:	400e1810 	.word	0x400e1810

004012ac <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4012ac:	e7fe      	b.n	4012ac <Dummy_Handler>
	...

004012b0 <Reset_Handler>:
{
  4012b0:	b500      	push	{lr}
  4012b2:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4012b4:	4b25      	ldr	r3, [pc, #148]	; (40134c <Reset_Handler+0x9c>)
  4012b6:	4a26      	ldr	r2, [pc, #152]	; (401350 <Reset_Handler+0xa0>)
  4012b8:	429a      	cmp	r2, r3
  4012ba:	d010      	beq.n	4012de <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4012bc:	4b25      	ldr	r3, [pc, #148]	; (401354 <Reset_Handler+0xa4>)
  4012be:	4a23      	ldr	r2, [pc, #140]	; (40134c <Reset_Handler+0x9c>)
  4012c0:	429a      	cmp	r2, r3
  4012c2:	d20c      	bcs.n	4012de <Reset_Handler+0x2e>
  4012c4:	3b01      	subs	r3, #1
  4012c6:	1a9b      	subs	r3, r3, r2
  4012c8:	f023 0303 	bic.w	r3, r3, #3
  4012cc:	3304      	adds	r3, #4
  4012ce:	4413      	add	r3, r2
  4012d0:	491f      	ldr	r1, [pc, #124]	; (401350 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4012d2:	f851 0b04 	ldr.w	r0, [r1], #4
  4012d6:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4012da:	429a      	cmp	r2, r3
  4012dc:	d1f9      	bne.n	4012d2 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4012de:	4b1e      	ldr	r3, [pc, #120]	; (401358 <Reset_Handler+0xa8>)
  4012e0:	4a1e      	ldr	r2, [pc, #120]	; (40135c <Reset_Handler+0xac>)
  4012e2:	429a      	cmp	r2, r3
  4012e4:	d20a      	bcs.n	4012fc <Reset_Handler+0x4c>
  4012e6:	3b01      	subs	r3, #1
  4012e8:	1a9b      	subs	r3, r3, r2
  4012ea:	f023 0303 	bic.w	r3, r3, #3
  4012ee:	3304      	adds	r3, #4
  4012f0:	4413      	add	r3, r2
                *pDest++ = 0;
  4012f2:	2100      	movs	r1, #0
  4012f4:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4012f8:	4293      	cmp	r3, r2
  4012fa:	d1fb      	bne.n	4012f4 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4012fc:	4a18      	ldr	r2, [pc, #96]	; (401360 <Reset_Handler+0xb0>)
  4012fe:	4b19      	ldr	r3, [pc, #100]	; (401364 <Reset_Handler+0xb4>)
  401300:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401304:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401306:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40130a:	fab3 f383 	clz	r3, r3
  40130e:	095b      	lsrs	r3, r3, #5
  401310:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401312:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401314:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401318:	2200      	movs	r2, #0
  40131a:	4b13      	ldr	r3, [pc, #76]	; (401368 <Reset_Handler+0xb8>)
  40131c:	701a      	strb	r2, [r3, #0]
	return flags;
  40131e:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401320:	4a12      	ldr	r2, [pc, #72]	; (40136c <Reset_Handler+0xbc>)
  401322:	6813      	ldr	r3, [r2, #0]
  401324:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401328:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  40132a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40132e:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401332:	b129      	cbz	r1, 401340 <Reset_Handler+0x90>
		cpu_irq_enable();
  401334:	2201      	movs	r2, #1
  401336:	4b0c      	ldr	r3, [pc, #48]	; (401368 <Reset_Handler+0xb8>)
  401338:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40133a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40133e:	b662      	cpsie	i
        __libc_init_array();
  401340:	4b0b      	ldr	r3, [pc, #44]	; (401370 <Reset_Handler+0xc0>)
  401342:	4798      	blx	r3
        main();
  401344:	4b0b      	ldr	r3, [pc, #44]	; (401374 <Reset_Handler+0xc4>)
  401346:	4798      	blx	r3
  401348:	e7fe      	b.n	401348 <Reset_Handler+0x98>
  40134a:	bf00      	nop
  40134c:	20400000 	.word	0x20400000
  401350:	00406fcc 	.word	0x00406fcc
  401354:	204009d0 	.word	0x204009d0
  401358:	20400cd8 	.word	0x20400cd8
  40135c:	204009d0 	.word	0x204009d0
  401360:	e000ed00 	.word	0xe000ed00
  401364:	00400000 	.word	0x00400000
  401368:	20400018 	.word	0x20400018
  40136c:	e000ed88 	.word	0xe000ed88
  401370:	00402231 	.word	0x00402231
  401374:	004017a1 	.word	0x004017a1

00401378 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401378:	4b3b      	ldr	r3, [pc, #236]	; (401468 <SystemCoreClockUpdate+0xf0>)
  40137a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40137c:	f003 0303 	and.w	r3, r3, #3
  401380:	2b01      	cmp	r3, #1
  401382:	d01d      	beq.n	4013c0 <SystemCoreClockUpdate+0x48>
  401384:	b183      	cbz	r3, 4013a8 <SystemCoreClockUpdate+0x30>
  401386:	2b02      	cmp	r3, #2
  401388:	d036      	beq.n	4013f8 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40138a:	4b37      	ldr	r3, [pc, #220]	; (401468 <SystemCoreClockUpdate+0xf0>)
  40138c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40138e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401392:	2b70      	cmp	r3, #112	; 0x70
  401394:	d05f      	beq.n	401456 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401396:	4b34      	ldr	r3, [pc, #208]	; (401468 <SystemCoreClockUpdate+0xf0>)
  401398:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40139a:	4934      	ldr	r1, [pc, #208]	; (40146c <SystemCoreClockUpdate+0xf4>)
  40139c:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4013a0:	680b      	ldr	r3, [r1, #0]
  4013a2:	40d3      	lsrs	r3, r2
  4013a4:	600b      	str	r3, [r1, #0]
  4013a6:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4013a8:	4b31      	ldr	r3, [pc, #196]	; (401470 <SystemCoreClockUpdate+0xf8>)
  4013aa:	695b      	ldr	r3, [r3, #20]
  4013ac:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4013b0:	bf14      	ite	ne
  4013b2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4013b6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4013ba:	4b2c      	ldr	r3, [pc, #176]	; (40146c <SystemCoreClockUpdate+0xf4>)
  4013bc:	601a      	str	r2, [r3, #0]
  4013be:	e7e4      	b.n	40138a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4013c0:	4b29      	ldr	r3, [pc, #164]	; (401468 <SystemCoreClockUpdate+0xf0>)
  4013c2:	6a1b      	ldr	r3, [r3, #32]
  4013c4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4013c8:	d003      	beq.n	4013d2 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4013ca:	4a2a      	ldr	r2, [pc, #168]	; (401474 <SystemCoreClockUpdate+0xfc>)
  4013cc:	4b27      	ldr	r3, [pc, #156]	; (40146c <SystemCoreClockUpdate+0xf4>)
  4013ce:	601a      	str	r2, [r3, #0]
  4013d0:	e7db      	b.n	40138a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4013d2:	4a29      	ldr	r2, [pc, #164]	; (401478 <SystemCoreClockUpdate+0x100>)
  4013d4:	4b25      	ldr	r3, [pc, #148]	; (40146c <SystemCoreClockUpdate+0xf4>)
  4013d6:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4013d8:	4b23      	ldr	r3, [pc, #140]	; (401468 <SystemCoreClockUpdate+0xf0>)
  4013da:	6a1b      	ldr	r3, [r3, #32]
  4013dc:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4013e0:	2b10      	cmp	r3, #16
  4013e2:	d005      	beq.n	4013f0 <SystemCoreClockUpdate+0x78>
  4013e4:	2b20      	cmp	r3, #32
  4013e6:	d1d0      	bne.n	40138a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4013e8:	4a22      	ldr	r2, [pc, #136]	; (401474 <SystemCoreClockUpdate+0xfc>)
  4013ea:	4b20      	ldr	r3, [pc, #128]	; (40146c <SystemCoreClockUpdate+0xf4>)
  4013ec:	601a      	str	r2, [r3, #0]
          break;
  4013ee:	e7cc      	b.n	40138a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4013f0:	4a22      	ldr	r2, [pc, #136]	; (40147c <SystemCoreClockUpdate+0x104>)
  4013f2:	4b1e      	ldr	r3, [pc, #120]	; (40146c <SystemCoreClockUpdate+0xf4>)
  4013f4:	601a      	str	r2, [r3, #0]
          break;
  4013f6:	e7c8      	b.n	40138a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4013f8:	4b1b      	ldr	r3, [pc, #108]	; (401468 <SystemCoreClockUpdate+0xf0>)
  4013fa:	6a1b      	ldr	r3, [r3, #32]
  4013fc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401400:	d016      	beq.n	401430 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  401402:	4a1c      	ldr	r2, [pc, #112]	; (401474 <SystemCoreClockUpdate+0xfc>)
  401404:	4b19      	ldr	r3, [pc, #100]	; (40146c <SystemCoreClockUpdate+0xf4>)
  401406:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401408:	4b17      	ldr	r3, [pc, #92]	; (401468 <SystemCoreClockUpdate+0xf0>)
  40140a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40140c:	f003 0303 	and.w	r3, r3, #3
  401410:	2b02      	cmp	r3, #2
  401412:	d1ba      	bne.n	40138a <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401414:	4a14      	ldr	r2, [pc, #80]	; (401468 <SystemCoreClockUpdate+0xf0>)
  401416:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401418:	6a92      	ldr	r2, [r2, #40]	; 0x28
  40141a:	4814      	ldr	r0, [pc, #80]	; (40146c <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40141c:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401420:	6803      	ldr	r3, [r0, #0]
  401422:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401426:	b2d2      	uxtb	r2, r2
  401428:	fbb3 f3f2 	udiv	r3, r3, r2
  40142c:	6003      	str	r3, [r0, #0]
  40142e:	e7ac      	b.n	40138a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401430:	4a11      	ldr	r2, [pc, #68]	; (401478 <SystemCoreClockUpdate+0x100>)
  401432:	4b0e      	ldr	r3, [pc, #56]	; (40146c <SystemCoreClockUpdate+0xf4>)
  401434:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401436:	4b0c      	ldr	r3, [pc, #48]	; (401468 <SystemCoreClockUpdate+0xf0>)
  401438:	6a1b      	ldr	r3, [r3, #32]
  40143a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40143e:	2b10      	cmp	r3, #16
  401440:	d005      	beq.n	40144e <SystemCoreClockUpdate+0xd6>
  401442:	2b20      	cmp	r3, #32
  401444:	d1e0      	bne.n	401408 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401446:	4a0b      	ldr	r2, [pc, #44]	; (401474 <SystemCoreClockUpdate+0xfc>)
  401448:	4b08      	ldr	r3, [pc, #32]	; (40146c <SystemCoreClockUpdate+0xf4>)
  40144a:	601a      	str	r2, [r3, #0]
          break;
  40144c:	e7dc      	b.n	401408 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40144e:	4a0b      	ldr	r2, [pc, #44]	; (40147c <SystemCoreClockUpdate+0x104>)
  401450:	4b06      	ldr	r3, [pc, #24]	; (40146c <SystemCoreClockUpdate+0xf4>)
  401452:	601a      	str	r2, [r3, #0]
          break;
  401454:	e7d8      	b.n	401408 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401456:	4a05      	ldr	r2, [pc, #20]	; (40146c <SystemCoreClockUpdate+0xf4>)
  401458:	6813      	ldr	r3, [r2, #0]
  40145a:	4909      	ldr	r1, [pc, #36]	; (401480 <SystemCoreClockUpdate+0x108>)
  40145c:	fba1 1303 	umull	r1, r3, r1, r3
  401460:	085b      	lsrs	r3, r3, #1
  401462:	6013      	str	r3, [r2, #0]
  401464:	4770      	bx	lr
  401466:	bf00      	nop
  401468:	400e0600 	.word	0x400e0600
  40146c:	2040001c 	.word	0x2040001c
  401470:	400e1810 	.word	0x400e1810
  401474:	00b71b00 	.word	0x00b71b00
  401478:	003d0900 	.word	0x003d0900
  40147c:	007a1200 	.word	0x007a1200
  401480:	aaaaaaab 	.word	0xaaaaaaab

00401484 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401484:	4b16      	ldr	r3, [pc, #88]	; (4014e0 <system_init_flash+0x5c>)
  401486:	4298      	cmp	r0, r3
  401488:	d913      	bls.n	4014b2 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40148a:	4b16      	ldr	r3, [pc, #88]	; (4014e4 <system_init_flash+0x60>)
  40148c:	4298      	cmp	r0, r3
  40148e:	d915      	bls.n	4014bc <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401490:	4b15      	ldr	r3, [pc, #84]	; (4014e8 <system_init_flash+0x64>)
  401492:	4298      	cmp	r0, r3
  401494:	d916      	bls.n	4014c4 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401496:	4b15      	ldr	r3, [pc, #84]	; (4014ec <system_init_flash+0x68>)
  401498:	4298      	cmp	r0, r3
  40149a:	d917      	bls.n	4014cc <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  40149c:	4b14      	ldr	r3, [pc, #80]	; (4014f0 <system_init_flash+0x6c>)
  40149e:	4298      	cmp	r0, r3
  4014a0:	d918      	bls.n	4014d4 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4014a2:	4b14      	ldr	r3, [pc, #80]	; (4014f4 <system_init_flash+0x70>)
  4014a4:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4014a6:	bf94      	ite	ls
  4014a8:	4a13      	ldrls	r2, [pc, #76]	; (4014f8 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4014aa:	4a14      	ldrhi	r2, [pc, #80]	; (4014fc <system_init_flash+0x78>)
  4014ac:	4b14      	ldr	r3, [pc, #80]	; (401500 <system_init_flash+0x7c>)
  4014ae:	601a      	str	r2, [r3, #0]
  4014b0:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4014b2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4014b6:	4b12      	ldr	r3, [pc, #72]	; (401500 <system_init_flash+0x7c>)
  4014b8:	601a      	str	r2, [r3, #0]
  4014ba:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4014bc:	4a11      	ldr	r2, [pc, #68]	; (401504 <system_init_flash+0x80>)
  4014be:	4b10      	ldr	r3, [pc, #64]	; (401500 <system_init_flash+0x7c>)
  4014c0:	601a      	str	r2, [r3, #0]
  4014c2:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4014c4:	4a10      	ldr	r2, [pc, #64]	; (401508 <system_init_flash+0x84>)
  4014c6:	4b0e      	ldr	r3, [pc, #56]	; (401500 <system_init_flash+0x7c>)
  4014c8:	601a      	str	r2, [r3, #0]
  4014ca:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4014cc:	4a0f      	ldr	r2, [pc, #60]	; (40150c <system_init_flash+0x88>)
  4014ce:	4b0c      	ldr	r3, [pc, #48]	; (401500 <system_init_flash+0x7c>)
  4014d0:	601a      	str	r2, [r3, #0]
  4014d2:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4014d4:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4014d8:	4b09      	ldr	r3, [pc, #36]	; (401500 <system_init_flash+0x7c>)
  4014da:	601a      	str	r2, [r3, #0]
  4014dc:	4770      	bx	lr
  4014de:	bf00      	nop
  4014e0:	015ef3bf 	.word	0x015ef3bf
  4014e4:	02bde77f 	.word	0x02bde77f
  4014e8:	041cdb3f 	.word	0x041cdb3f
  4014ec:	057bceff 	.word	0x057bceff
  4014f0:	06dac2bf 	.word	0x06dac2bf
  4014f4:	0839b67f 	.word	0x0839b67f
  4014f8:	04000500 	.word	0x04000500
  4014fc:	04000600 	.word	0x04000600
  401500:	400e0c00 	.word	0x400e0c00
  401504:	04000100 	.word	0x04000100
  401508:	04000200 	.word	0x04000200
  40150c:	04000300 	.word	0x04000300

00401510 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401510:	4b0a      	ldr	r3, [pc, #40]	; (40153c <_sbrk+0x2c>)
  401512:	681b      	ldr	r3, [r3, #0]
  401514:	b153      	cbz	r3, 40152c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401516:	4b09      	ldr	r3, [pc, #36]	; (40153c <_sbrk+0x2c>)
  401518:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40151a:	181a      	adds	r2, r3, r0
  40151c:	4908      	ldr	r1, [pc, #32]	; (401540 <_sbrk+0x30>)
  40151e:	4291      	cmp	r1, r2
  401520:	db08      	blt.n	401534 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401522:	4610      	mov	r0, r2
  401524:	4a05      	ldr	r2, [pc, #20]	; (40153c <_sbrk+0x2c>)
  401526:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401528:	4618      	mov	r0, r3
  40152a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  40152c:	4a05      	ldr	r2, [pc, #20]	; (401544 <_sbrk+0x34>)
  40152e:	4b03      	ldr	r3, [pc, #12]	; (40153c <_sbrk+0x2c>)
  401530:	601a      	str	r2, [r3, #0]
  401532:	e7f0      	b.n	401516 <_sbrk+0x6>
		return (caddr_t) -1;	
  401534:	f04f 30ff 	mov.w	r0, #4294967295
}
  401538:	4770      	bx	lr
  40153a:	bf00      	nop
  40153c:	20400c70 	.word	0x20400c70
  401540:	2045fffc 	.word	0x2045fffc
  401544:	20402ed8 	.word	0x20402ed8

00401548 <but1_callback>:
	
}


void but1_callback(void) {
	but1_flag = 1;
  401548:	2201      	movs	r2, #1
  40154a:	4b01      	ldr	r3, [pc, #4]	; (401550 <but1_callback+0x8>)
  40154c:	701a      	strb	r2, [r3, #0]
  40154e:	4770      	bx	lr
  401550:	20400c74 	.word	0x20400c74

00401554 <echo_callback>:
}

void echo_callback(void) {
  401554:	b508      	push	{r3, lr}
	if (!pio_get(ECHO_PIO, PIO_INPUT, ECHO_PIO_IDX_MASK)) {
  401556:	2208      	movs	r2, #8
  401558:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40155c:	480c      	ldr	r0, [pc, #48]	; (401590 <echo_callback+0x3c>)
  40155e:	4b0d      	ldr	r3, [pc, #52]	; (401594 <echo_callback+0x40>)
  401560:	4798      	blx	r3
  401562:	b930      	cbnz	r0, 401572 <echo_callback+0x1e>
		echo_fall_flag = 1;
  401564:	2201      	movs	r2, #1
  401566:	4b0c      	ldr	r3, [pc, #48]	; (401598 <echo_callback+0x44>)
  401568:	701a      	strb	r2, [r3, #0]
		echo_rise_flag = 0;
  40156a:	2200      	movs	r2, #0
  40156c:	4b0b      	ldr	r3, [pc, #44]	; (40159c <echo_callback+0x48>)
  40156e:	701a      	strb	r2, [r3, #0]
  401570:	bd08      	pop	{r3, pc}
		} else if (pio_get(ECHO_PIO, PIO_INPUT, ECHO_PIO_IDX_MASK)) {
  401572:	2208      	movs	r2, #8
  401574:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401578:	4805      	ldr	r0, [pc, #20]	; (401590 <echo_callback+0x3c>)
  40157a:	4b06      	ldr	r3, [pc, #24]	; (401594 <echo_callback+0x40>)
  40157c:	4798      	blx	r3
  40157e:	b128      	cbz	r0, 40158c <echo_callback+0x38>
		echo_fall_flag = 0;
  401580:	2200      	movs	r2, #0
  401582:	4b05      	ldr	r3, [pc, #20]	; (401598 <echo_callback+0x44>)
  401584:	701a      	strb	r2, [r3, #0]
		echo_rise_flag = 1;
  401586:	2201      	movs	r2, #1
  401588:	4b04      	ldr	r3, [pc, #16]	; (40159c <echo_callback+0x48>)
  40158a:	701a      	strb	r2, [r3, #0]
  40158c:	bd08      	pop	{r3, pc}
  40158e:	bf00      	nop
  401590:	400e0e00 	.word	0x400e0e00
  401594:	00400b77 	.word	0x00400b77
  401598:	20400c75 	.word	0x20400c75
  40159c:	20400c76 	.word	0x20400c76

004015a0 <TC1_Handler>:
void TC1_Handler(void) {
  4015a0:	b500      	push	{lr}
  4015a2:	b083      	sub	sp, #12
	volatile uint32_t status = tc_get_status(TC0, 1);
  4015a4:	2101      	movs	r1, #1
  4015a6:	4807      	ldr	r0, [pc, #28]	; (4015c4 <TC1_Handler+0x24>)
  4015a8:	4b07      	ldr	r3, [pc, #28]	; (4015c8 <TC1_Handler+0x28>)
  4015aa:	4798      	blx	r3
  4015ac:	9001      	str	r0, [sp, #4]
	start_measure = 1;
  4015ae:	2201      	movs	r2, #1
  4015b0:	4b06      	ldr	r3, [pc, #24]	; (4015cc <TC1_Handler+0x2c>)
  4015b2:	701a      	strb	r2, [r3, #0]
	timeout_counter++;
  4015b4:	4a06      	ldr	r2, [pc, #24]	; (4015d0 <TC1_Handler+0x30>)
  4015b6:	7813      	ldrb	r3, [r2, #0]
  4015b8:	3301      	adds	r3, #1
  4015ba:	b2db      	uxtb	r3, r3
  4015bc:	7013      	strb	r3, [r2, #0]
}
  4015be:	b003      	add	sp, #12
  4015c0:	f85d fb04 	ldr.w	pc, [sp], #4
  4015c4:	4000c000 	.word	0x4000c000
  4015c8:	00400395 	.word	0x00400395
  4015cc:	20400c77 	.word	0x20400c77
  4015d0:	20400c78 	.word	0x20400c78

004015d4 <TC_init>:
void TC_init(Tc * TC, int ID_TC, int TC_CHANNEL, int freq){
  4015d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4015d8:	b085      	sub	sp, #20
  4015da:	4606      	mov	r6, r0
  4015dc:	460c      	mov	r4, r1
  4015de:	4617      	mov	r7, r2
  4015e0:	4698      	mov	r8, r3
	pmc_enable_periph_clk(ID_TC);
  4015e2:	4608      	mov	r0, r1
  4015e4:	4b1c      	ldr	r3, [pc, #112]	; (401658 <TC_init+0x84>)
  4015e6:	4798      	blx	r3
	tc_find_mck_divisor(freq, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  4015e8:	4d1c      	ldr	r5, [pc, #112]	; (40165c <TC_init+0x88>)
  4015ea:	9500      	str	r5, [sp, #0]
  4015ec:	ab02      	add	r3, sp, #8
  4015ee:	aa03      	add	r2, sp, #12
  4015f0:	4629      	mov	r1, r5
  4015f2:	4640      	mov	r0, r8
  4015f4:	f8df 9080 	ldr.w	r9, [pc, #128]	; 401678 <TC_init+0xa4>
  4015f8:	47c8      	blx	r9
	tc_init(TC, TC_CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  4015fa:	9a02      	ldr	r2, [sp, #8]
  4015fc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  401600:	4639      	mov	r1, r7
  401602:	4630      	mov	r0, r6
  401604:	4b16      	ldr	r3, [pc, #88]	; (401660 <TC_init+0x8c>)
  401606:	4798      	blx	r3
	tc_write_rc(TC, TC_CHANNEL, (ul_sysclk / ul_div) / freq);
  401608:	9a03      	ldr	r2, [sp, #12]
  40160a:	fbb5 f2f2 	udiv	r2, r5, r2
  40160e:	fbb2 f2f8 	udiv	r2, r2, r8
  401612:	4639      	mov	r1, r7
  401614:	4630      	mov	r0, r6
  401616:	4b13      	ldr	r3, [pc, #76]	; (401664 <TC_init+0x90>)
  401618:	4798      	blx	r3
	NVIC_SetPriority(ID_TC, 4);
  40161a:	b263      	sxtb	r3, r4
    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
  40161c:	2b00      	cmp	r3, #0
  40161e:	db13      	blt.n	401648 <TC_init+0x74>
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401620:	4a11      	ldr	r2, [pc, #68]	; (401668 <TC_init+0x94>)
  401622:	2180      	movs	r1, #128	; 0x80
  401624:	54d1      	strb	r1, [r2, r3]
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401626:	095b      	lsrs	r3, r3, #5
  401628:	f004 041f 	and.w	r4, r4, #31
  40162c:	2201      	movs	r2, #1
  40162e:	fa02 f404 	lsl.w	r4, r2, r4
  401632:	4a0e      	ldr	r2, [pc, #56]	; (40166c <TC_init+0x98>)
  401634:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
	tc_enable_interrupt(TC, TC_CHANNEL, TC_IER_CPCS);
  401638:	2210      	movs	r2, #16
  40163a:	4639      	mov	r1, r7
  40163c:	4630      	mov	r0, r6
  40163e:	4b0c      	ldr	r3, [pc, #48]	; (401670 <TC_init+0x9c>)
  401640:	4798      	blx	r3
}
  401642:	b005      	add	sp, #20
  401644:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  401648:	f004 010f 	and.w	r1, r4, #15
  40164c:	4a09      	ldr	r2, [pc, #36]	; (401674 <TC_init+0xa0>)
  40164e:	440a      	add	r2, r1
  401650:	2180      	movs	r1, #128	; 0x80
  401652:	7611      	strb	r1, [r2, #24]
  401654:	e7e7      	b.n	401626 <TC_init+0x52>
  401656:	bf00      	nop
  401658:	00400f95 	.word	0x00400f95
  40165c:	11e1a300 	.word	0x11e1a300
  401660:	00400363 	.word	0x00400363
  401664:	00400385 	.word	0x00400385
  401668:	e000e400 	.word	0xe000e400
  40166c:	e000e100 	.word	0xe000e100
  401670:	0040038d 	.word	0x0040038d
  401674:	e000ecfc 	.word	0xe000ecfc
  401678:	0040039d 	.word	0x0040039d

0040167c <RTT_Handler>:
void RTT_Handler(void) {
  40167c:	b508      	push	{r3, lr}
	ul_status = rtt_get_status(RTT);
  40167e:	4802      	ldr	r0, [pc, #8]	; (401688 <RTT_Handler+0xc>)
  401680:	4b02      	ldr	r3, [pc, #8]	; (40168c <RTT_Handler+0x10>)
  401682:	4798      	blx	r3
  401684:	bd08      	pop	{r3, pc}
  401686:	bf00      	nop
  401688:	400e1830 	.word	0x400e1830
  40168c:	00400215 	.word	0x00400215

00401690 <io_init>:
	}
}

void io_init(void) {
  401690:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401694:	b082      	sub	sp, #8
	pmc_enable_periph_clk(BUT1_PIO_ID);
  401696:	2010      	movs	r0, #16
  401698:	4f29      	ldr	r7, [pc, #164]	; (401740 <io_init+0xb0>)
  40169a:	47b8      	blx	r7
	pio_configure(BUT1_PIO, PIO_INPUT, BUT1_PIO_IDX_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  40169c:	4c29      	ldr	r4, [pc, #164]	; (401744 <io_init+0xb4>)
  40169e:	2309      	movs	r3, #9
  4016a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4016a4:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4016a8:	4620      	mov	r0, r4
  4016aa:	4e27      	ldr	r6, [pc, #156]	; (401748 <io_init+0xb8>)
  4016ac:	47b0      	blx	r6
	pio_set_debounce_filter(BUT1_PIO, BUT1_PIO_IDX_MASK, 60);
  4016ae:	223c      	movs	r2, #60	; 0x3c
  4016b0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4016b4:	4620      	mov	r0, r4
  4016b6:	4b25      	ldr	r3, [pc, #148]	; (40174c <io_init+0xbc>)
  4016b8:	4798      	blx	r3
	
	pio_handler_set(BUT1_PIO,
  4016ba:	4b25      	ldr	r3, [pc, #148]	; (401750 <io_init+0xc0>)
  4016bc:	9300      	str	r3, [sp, #0]
  4016be:	2370      	movs	r3, #112	; 0x70
  4016c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4016c4:	2110      	movs	r1, #16
  4016c6:	4620      	mov	r0, r4
  4016c8:	f8df a090 	ldr.w	sl, [pc, #144]	; 40175c <io_init+0xcc>
  4016cc:	47d0      	blx	sl
	BUT1_PIO_ID,
	BUT1_PIO_IDX_MASK,
	PIO_IT_RISE_EDGE,
	but1_callback);
	
	pio_enable_interrupt(BUT1_PIO, BUT1_PIO_IDX_MASK);
  4016ce:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4016d2:	4620      	mov	r0, r4
  4016d4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 401760 <io_init+0xd0>
  4016d8:	47c8      	blx	r9
	pio_get_interrupt_status(BUT1_PIO);
  4016da:	4620      	mov	r0, r4
  4016dc:	f8df 8084 	ldr.w	r8, [pc, #132]	; 401764 <io_init+0xd4>
  4016e0:	47c0      	blx	r8
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4016e2:	4d1c      	ldr	r5, [pc, #112]	; (401754 <io_init+0xc4>)
  4016e4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  4016e8:	602b      	str	r3, [r5, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4016ea:	2360      	movs	r3, #96	; 0x60
  4016ec:	f885 3310 	strb.w	r3, [r5, #784]	; 0x310
	
	NVIC_EnableIRQ(BUT1_PIO_ID);
	NVIC_SetPriority(BUT1_PIO_ID, 3);
	
	//X (Trig):
	pmc_enable_periph_clk(X_PIO_ID);
  4016f0:	2010      	movs	r0, #16
  4016f2:	47b8      	blx	r7
	pio_configure(X_PIO, PIO_OUTPUT_0, X_PIO_IDX_MASK, PIO_DEFAULT);
  4016f4:	2300      	movs	r3, #0
  4016f6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  4016fa:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4016fe:	4620      	mov	r0, r4
  401700:	47b0      	blx	r6
	
	//Y (Echo):
	pmc_enable_periph_clk(ECHO_PIO_ID);
  401702:	200a      	movs	r0, #10
  401704:	47b8      	blx	r7
	pio_configure(ECHO_PIO, PIO_INPUT, ECHO_PIO_IDX_MASK, PIO_DEFAULT);
  401706:	f5a4 64c0 	sub.w	r4, r4, #1536	; 0x600
  40170a:	2300      	movs	r3, #0
  40170c:	2208      	movs	r2, #8
  40170e:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401712:	4620      	mov	r0, r4
  401714:	47b0      	blx	r6
	//pio_set_debounce_filter(ECHO_PIO, ECHO_PIO_IDX_MASK, 60);
	pio_handler_set(ECHO_PIO,ECHO_PIO_ID,ECHO_PIO_IDX_MASK,PIO_IT_EDGE, echo_callback);
  401716:	4b10      	ldr	r3, [pc, #64]	; (401758 <io_init+0xc8>)
  401718:	9300      	str	r3, [sp, #0]
  40171a:	2340      	movs	r3, #64	; 0x40
  40171c:	2208      	movs	r2, #8
  40171e:	210a      	movs	r1, #10
  401720:	4620      	mov	r0, r4
  401722:	47d0      	blx	sl
	pio_enable_interrupt(ECHO_PIO, ECHO_PIO_IDX_MASK);
  401724:	2108      	movs	r1, #8
  401726:	4620      	mov	r0, r4
  401728:	47c8      	blx	r9
	pio_get_interrupt_status(ECHO_PIO);
  40172a:	4620      	mov	r0, r4
  40172c:	47c0      	blx	r8
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40172e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401732:	602b      	str	r3, [r5, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401734:	2380      	movs	r3, #128	; 0x80
  401736:	f885 330a 	strb.w	r3, [r5, #778]	; 0x30a
	NVIC_EnableIRQ(ECHO_PIO_ID);
	NVIC_SetPriority(ECHO_PIO_ID, 4); // Prioridade 4
}	
  40173a:	b002      	add	sp, #8
  40173c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401740:	00400f95 	.word	0x00400f95
  401744:	400e1400 	.word	0x400e1400
  401748:	00400c81 	.word	0x00400c81
  40174c:	00400b55 	.word	0x00400b55
  401750:	00401549 	.word	0x00401549
  401754:	e000e100 	.word	0xe000e100
  401758:	00401555 	.word	0x00401555
  40175c:	00400da1 	.word	0x00400da1
  401760:	00400d43 	.word	0x00400d43
  401764:	00400d47 	.word	0x00400d47

00401768 <trig_x>:

void trig_x(void) {
  401768:	b510      	push	{r4, lr}
	pio_set(X_PIO, X_PIO_IDX_MASK);
  40176a:	4c08      	ldr	r4, [pc, #32]	; (40178c <trig_x+0x24>)
  40176c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401770:	4620      	mov	r0, r4
  401772:	4b07      	ldr	r3, [pc, #28]	; (401790 <trig_x+0x28>)
  401774:	4798      	blx	r3
	delay_us(10);
  401776:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  40177a:	4b06      	ldr	r3, [pc, #24]	; (401794 <trig_x+0x2c>)
  40177c:	4798      	blx	r3
	pio_clear(X_PIO, X_PIO_IDX_MASK);
  40177e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401782:	4620      	mov	r0, r4
  401784:	4b04      	ldr	r3, [pc, #16]	; (401798 <trig_x+0x30>)
  401786:	4798      	blx	r3
  401788:	bd10      	pop	{r4, pc}
  40178a:	bf00      	nop
  40178c:	400e1400 	.word	0x400e1400
  401790:	00400b6f 	.word	0x00400b6f
  401794:	20400001 	.word	0x20400001
  401798:	00400b73 	.word	0x00400b73
  40179c:	00000000 	.word	0x00000000

004017a0 <main>:
}
int main (void)
{
  4017a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4017a4:	b0a1      	sub	sp, #132	; 0x84
	board_init();
  4017a6:	4b56      	ldr	r3, [pc, #344]	; (401900 <main+0x160>)
  4017a8:	4798      	blx	r3
	sysclk_init();
  4017aa:	4b56      	ldr	r3, [pc, #344]	; (401904 <main+0x164>)
  4017ac:	4798      	blx	r3
	io_init();
  4017ae:	4b56      	ldr	r3, [pc, #344]	; (401908 <main+0x168>)
  4017b0:	4798      	blx	r3
	
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4017b2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4017b6:	4b55      	ldr	r3, [pc, #340]	; (40190c <main+0x16c>)
  4017b8:	605a      	str	r2, [r3, #4]
	delay_init();

  // Init OLED
	gfx_mono_ssd1306_init();
  4017ba:	4b55      	ldr	r3, [pc, #340]	; (401910 <main+0x170>)
  4017bc:	4798      	blx	r3
	
	//RTT
	//RTT_init(1, 2, RTT_MR_ALMIEN); 
	TC_init(TC0, ID_TC1, 1, 2);
  4017be:	4c55      	ldr	r4, [pc, #340]	; (401914 <main+0x174>)
  4017c0:	2302      	movs	r3, #2
  4017c2:	2201      	movs	r2, #1
  4017c4:	2118      	movs	r1, #24
  4017c6:	4620      	mov	r0, r4
  4017c8:	4d53      	ldr	r5, [pc, #332]	; (401918 <main+0x178>)
  4017ca:	47a8      	blx	r5
	tc_start(TC0, 1);
  4017cc:	2101      	movs	r1, #1
  4017ce:	4620      	mov	r0, r4
  4017d0:	4b52      	ldr	r3, [pc, #328]	; (40191c <main+0x17c>)
  4017d2:	4798      	blx	r3
	char str[128];
	int rtt_counter = 0;

  /* Insert application code here, after the board has been initialized. */
	while(1) {
		if (start_measure) {
  4017d4:	4c52      	ldr	r4, [pc, #328]	; (401920 <main+0x180>)
	rtt_sel_source(RTT, false);
  4017d6:	4d53      	ldr	r5, [pc, #332]	; (401924 <main+0x184>)
			RTT_init(1.0/(2*MIN_TEMPO), 0, 0);
			echo_rise_flag = 0;
		}
		if (echo_fall_flag && !start_measure) {
			rtt_counter = rtt_read_timer_value(RTT);
			double seconds = rtt_counter*MIN_TEMPO;
  4017d8:	f20f 191c 	addw	r9, pc, #284	; 0x11c
  4017dc:	e9d9 8900 	ldrd	r8, r9, [r9]
  4017e0:	e04d      	b.n	40187e <main+0xde>
			trig_x();
  4017e2:	4b51      	ldr	r3, [pc, #324]	; (401928 <main+0x188>)
  4017e4:	4798      	blx	r3
			start_measure = 0;
  4017e6:	2300      	movs	r3, #0
  4017e8:	7023      	strb	r3, [r4, #0]
  4017ea:	e04b      	b.n	401884 <main+0xe4>
			gfx_mono_draw_string("             ", 0, 0, &sysfont);
  4017ec:	4f4f      	ldr	r7, [pc, #316]	; (40192c <main+0x18c>)
  4017ee:	463b      	mov	r3, r7
  4017f0:	2200      	movs	r2, #0
  4017f2:	4611      	mov	r1, r2
  4017f4:	484e      	ldr	r0, [pc, #312]	; (401930 <main+0x190>)
  4017f6:	4e4f      	ldr	r6, [pc, #316]	; (401934 <main+0x194>)
  4017f8:	47b0      	blx	r6
			gfx_mono_draw_string("CHECK SENSOR", 0,0, &sysfont);
  4017fa:	463b      	mov	r3, r7
  4017fc:	2200      	movs	r2, #0
  4017fe:	4611      	mov	r1, r2
  401800:	484d      	ldr	r0, [pc, #308]	; (401938 <main+0x198>)
  401802:	47b0      	blx	r6
  401804:	e043      	b.n	40188e <main+0xee>
			timeout_counter = 0;
  401806:	2600      	movs	r6, #0
  401808:	4b4c      	ldr	r3, [pc, #304]	; (40193c <main+0x19c>)
  40180a:	701e      	strb	r6, [r3, #0]
	rtt_sel_source(RTT, false);
  40180c:	4631      	mov	r1, r6
  40180e:	4628      	mov	r0, r5
  401810:	4b4b      	ldr	r3, [pc, #300]	; (401940 <main+0x1a0>)
  401812:	4798      	blx	r3
	rtt_init(RTT, pllPreScale);
  401814:	2103      	movs	r1, #3
  401816:	4628      	mov	r0, r5
  401818:	4b4a      	ldr	r3, [pc, #296]	; (401944 <main+0x1a4>)
  40181a:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  40181c:	4b4a      	ldr	r3, [pc, #296]	; (401948 <main+0x1a8>)
  40181e:	2208      	movs	r2, #8
  401820:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401824:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401828:	2180      	movs	r1, #128	; 0x80
  40182a:	f883 1303 	strb.w	r1, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40182e:	601a      	str	r2, [r3, #0]
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN | RTT_MR_ALMIEN);
  401830:	f44f 3140 	mov.w	r1, #196608	; 0x30000
  401834:	4628      	mov	r0, r5
  401836:	4b45      	ldr	r3, [pc, #276]	; (40194c <main+0x1ac>)
  401838:	4798      	blx	r3
			echo_rise_flag = 0;
  40183a:	4b45      	ldr	r3, [pc, #276]	; (401950 <main+0x1b0>)
  40183c:	701e      	strb	r6, [r3, #0]
  40183e:	e02c      	b.n	40189a <main+0xfa>
			double distance = SOUND*seconds*100;
			if (distance > 400 ) {
				gfx_mono_draw_string("             ", 0, 0, &sysfont);
				gfx_mono_draw_string("TOO FAR", 0,0, &sysfont);
			} else {
				gfx_mono_draw_string("           ", 0, 0, &sysfont);
  401840:	4f3a      	ldr	r7, [pc, #232]	; (40192c <main+0x18c>)
  401842:	463b      	mov	r3, r7
  401844:	2200      	movs	r2, #0
  401846:	4611      	mov	r1, r2
  401848:	4842      	ldr	r0, [pc, #264]	; (401954 <main+0x1b4>)
  40184a:	4e3a      	ldr	r6, [pc, #232]	; (401934 <main+0x194>)
  40184c:	47b0      	blx	r6
				sprintf(str, " %0.2lf cm", distance);
  40184e:	4652      	mov	r2, sl
  401850:	465b      	mov	r3, fp
  401852:	4941      	ldr	r1, [pc, #260]	; (401958 <main+0x1b8>)
  401854:	4668      	mov	r0, sp
  401856:	f8df a130 	ldr.w	sl, [pc, #304]	; 401988 <main+0x1e8>
  40185a:	47d0      	blx	sl
				gfx_mono_draw_string(str, 0,0, &sysfont);
  40185c:	463b      	mov	r3, r7
  40185e:	2200      	movs	r2, #0
  401860:	4611      	mov	r1, r2
  401862:	4668      	mov	r0, sp
  401864:	47b0      	blx	r6
			}
			
			but1_flag = 0;
  401866:	2300      	movs	r3, #0
  401868:	4a3c      	ldr	r2, [pc, #240]	; (40195c <main+0x1bc>)
  40186a:	7013      	strb	r3, [r2, #0]
			echo_fall_flag = 0;
  40186c:	4a3c      	ldr	r2, [pc, #240]	; (401960 <main+0x1c0>)
  40186e:	7013      	strb	r3, [r2, #0]
			start_measure = 1;
  401870:	2201      	movs	r2, #1
  401872:	7022      	strb	r2, [r4, #0]
			timeout_counter = 0;
  401874:	4a31      	ldr	r2, [pc, #196]	; (40193c <main+0x19c>)
  401876:	7013      	strb	r3, [r2, #0]
		}
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401878:	2002      	movs	r0, #2
  40187a:	4b3a      	ldr	r3, [pc, #232]	; (401964 <main+0x1c4>)
  40187c:	4798      	blx	r3
		if (start_measure) {
  40187e:	7823      	ldrb	r3, [r4, #0]
  401880:	2b00      	cmp	r3, #0
  401882:	d1ae      	bne.n	4017e2 <main+0x42>
		if (timeout_counter > 2) {
  401884:	4b2d      	ldr	r3, [pc, #180]	; (40193c <main+0x19c>)
  401886:	781b      	ldrb	r3, [r3, #0]
  401888:	b2db      	uxtb	r3, r3
  40188a:	2b02      	cmp	r3, #2
  40188c:	d8ae      	bhi.n	4017ec <main+0x4c>
		if (echo_rise_flag && !start_measure) {
  40188e:	4b30      	ldr	r3, [pc, #192]	; (401950 <main+0x1b0>)
  401890:	781b      	ldrb	r3, [r3, #0]
  401892:	b113      	cbz	r3, 40189a <main+0xfa>
  401894:	7823      	ldrb	r3, [r4, #0]
  401896:	2b00      	cmp	r3, #0
  401898:	d0b5      	beq.n	401806 <main+0x66>
		if (echo_fall_flag && !start_measure) {
  40189a:	4b31      	ldr	r3, [pc, #196]	; (401960 <main+0x1c0>)
  40189c:	781b      	ldrb	r3, [r3, #0]
  40189e:	2b00      	cmp	r3, #0
  4018a0:	d0ea      	beq.n	401878 <main+0xd8>
  4018a2:	7823      	ldrb	r3, [r4, #0]
  4018a4:	2b00      	cmp	r3, #0
  4018a6:	d1e7      	bne.n	401878 <main+0xd8>
			rtt_counter = rtt_read_timer_value(RTT);
  4018a8:	4628      	mov	r0, r5
  4018aa:	4b2f      	ldr	r3, [pc, #188]	; (401968 <main+0x1c8>)
  4018ac:	4798      	blx	r3
			double seconds = rtt_counter*MIN_TEMPO;
  4018ae:	233a      	movs	r3, #58	; 0x3a
  4018b0:	fb03 f000 	mul.w	r0, r3, r0
  4018b4:	4b2d      	ldr	r3, [pc, #180]	; (40196c <main+0x1cc>)
  4018b6:	4798      	blx	r3
  4018b8:	4e2d      	ldr	r6, [pc, #180]	; (401970 <main+0x1d0>)
  4018ba:	4642      	mov	r2, r8
  4018bc:	464b      	mov	r3, r9
  4018be:	47b0      	blx	r6
			double distance = SOUND*seconds*100;
  4018c0:	2200      	movs	r2, #0
  4018c2:	4b2c      	ldr	r3, [pc, #176]	; (401974 <main+0x1d4>)
  4018c4:	47b0      	blx	r6
  4018c6:	2200      	movs	r2, #0
  4018c8:	4b2b      	ldr	r3, [pc, #172]	; (401978 <main+0x1d8>)
  4018ca:	47b0      	blx	r6
  4018cc:	4682      	mov	sl, r0
  4018ce:	468b      	mov	fp, r1
			if (distance > 400 ) {
  4018d0:	2200      	movs	r2, #0
  4018d2:	4b2a      	ldr	r3, [pc, #168]	; (40197c <main+0x1dc>)
  4018d4:	4e2a      	ldr	r6, [pc, #168]	; (401980 <main+0x1e0>)
  4018d6:	47b0      	blx	r6
  4018d8:	2800      	cmp	r0, #0
  4018da:	d0b1      	beq.n	401840 <main+0xa0>
				gfx_mono_draw_string("             ", 0, 0, &sysfont);
  4018dc:	4f13      	ldr	r7, [pc, #76]	; (40192c <main+0x18c>)
  4018de:	463b      	mov	r3, r7
  4018e0:	2200      	movs	r2, #0
  4018e2:	4611      	mov	r1, r2
  4018e4:	4812      	ldr	r0, [pc, #72]	; (401930 <main+0x190>)
  4018e6:	4e13      	ldr	r6, [pc, #76]	; (401934 <main+0x194>)
  4018e8:	47b0      	blx	r6
				gfx_mono_draw_string("TOO FAR", 0,0, &sysfont);
  4018ea:	463b      	mov	r3, r7
  4018ec:	2200      	movs	r2, #0
  4018ee:	4611      	mov	r1, r2
  4018f0:	4824      	ldr	r0, [pc, #144]	; (401984 <main+0x1e4>)
  4018f2:	47b0      	blx	r6
  4018f4:	e7b7      	b.n	401866 <main+0xc6>
  4018f6:	bf00      	nop
  4018f8:	a0b5ed8d 	.word	0xa0b5ed8d
  4018fc:	3eb0c6f7 	.word	0x3eb0c6f7
  401900:	00400a15 	.word	0x00400a15
  401904:	004009a5 	.word	0x004009a5
  401908:	00401691 	.word	0x00401691
  40190c:	400e1850 	.word	0x400e1850
  401910:	00400685 	.word	0x00400685
  401914:	4000c000 	.word	0x4000c000
  401918:	004015d5 	.word	0x004015d5
  40191c:	0040037d 	.word	0x0040037d
  401920:	20400c77 	.word	0x20400c77
  401924:	400e1830 	.word	0x400e1830
  401928:	00401769 	.word	0x00401769
  40192c:	2040000c 	.word	0x2040000c
  401930:	00406cd8 	.word	0x00406cd8
  401934:	004005ed 	.word	0x004005ed
  401938:	00406ce8 	.word	0x00406ce8
  40193c:	20400c78 	.word	0x20400c78
  401940:	004001c1 	.word	0x004001c1
  401944:	004001ad 	.word	0x004001ad
  401948:	e000e100 	.word	0xe000e100
  40194c:	004001ed 	.word	0x004001ed
  401950:	20400c76 	.word	0x20400c76
  401954:	00406d00 	.word	0x00406d00
  401958:	00406d0c 	.word	0x00406d0c
  40195c:	20400c74 	.word	0x20400c74
  401960:	20400c75 	.word	0x20400c75
  401964:	00401039 	.word	0x00401039
  401968:	00400201 	.word	0x00400201
  40196c:	00401c31 	.word	0x00401c31
  401970:	00401cfd 	.word	0x00401cfd
  401974:	40754000 	.word	0x40754000
  401978:	40590000 	.word	0x40590000
  40197c:	40790000 	.word	0x40790000
  401980:	0040221d 	.word	0x0040221d
  401984:	00406cf8 	.word	0x00406cf8
  401988:	0040231d 	.word	0x0040231d

0040198c <__aeabi_drsub>:
  40198c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401990:	e002      	b.n	401998 <__adddf3>
  401992:	bf00      	nop

00401994 <__aeabi_dsub>:
  401994:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401998 <__adddf3>:
  401998:	b530      	push	{r4, r5, lr}
  40199a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40199e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4019a2:	ea94 0f05 	teq	r4, r5
  4019a6:	bf08      	it	eq
  4019a8:	ea90 0f02 	teqeq	r0, r2
  4019ac:	bf1f      	itttt	ne
  4019ae:	ea54 0c00 	orrsne.w	ip, r4, r0
  4019b2:	ea55 0c02 	orrsne.w	ip, r5, r2
  4019b6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4019ba:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4019be:	f000 80e2 	beq.w	401b86 <__adddf3+0x1ee>
  4019c2:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4019c6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4019ca:	bfb8      	it	lt
  4019cc:	426d      	neglt	r5, r5
  4019ce:	dd0c      	ble.n	4019ea <__adddf3+0x52>
  4019d0:	442c      	add	r4, r5
  4019d2:	ea80 0202 	eor.w	r2, r0, r2
  4019d6:	ea81 0303 	eor.w	r3, r1, r3
  4019da:	ea82 0000 	eor.w	r0, r2, r0
  4019de:	ea83 0101 	eor.w	r1, r3, r1
  4019e2:	ea80 0202 	eor.w	r2, r0, r2
  4019e6:	ea81 0303 	eor.w	r3, r1, r3
  4019ea:	2d36      	cmp	r5, #54	; 0x36
  4019ec:	bf88      	it	hi
  4019ee:	bd30      	pophi	{r4, r5, pc}
  4019f0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4019f4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4019f8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4019fc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401a00:	d002      	beq.n	401a08 <__adddf3+0x70>
  401a02:	4240      	negs	r0, r0
  401a04:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401a08:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401a0c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401a10:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401a14:	d002      	beq.n	401a1c <__adddf3+0x84>
  401a16:	4252      	negs	r2, r2
  401a18:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401a1c:	ea94 0f05 	teq	r4, r5
  401a20:	f000 80a7 	beq.w	401b72 <__adddf3+0x1da>
  401a24:	f1a4 0401 	sub.w	r4, r4, #1
  401a28:	f1d5 0e20 	rsbs	lr, r5, #32
  401a2c:	db0d      	blt.n	401a4a <__adddf3+0xb2>
  401a2e:	fa02 fc0e 	lsl.w	ip, r2, lr
  401a32:	fa22 f205 	lsr.w	r2, r2, r5
  401a36:	1880      	adds	r0, r0, r2
  401a38:	f141 0100 	adc.w	r1, r1, #0
  401a3c:	fa03 f20e 	lsl.w	r2, r3, lr
  401a40:	1880      	adds	r0, r0, r2
  401a42:	fa43 f305 	asr.w	r3, r3, r5
  401a46:	4159      	adcs	r1, r3
  401a48:	e00e      	b.n	401a68 <__adddf3+0xd0>
  401a4a:	f1a5 0520 	sub.w	r5, r5, #32
  401a4e:	f10e 0e20 	add.w	lr, lr, #32
  401a52:	2a01      	cmp	r2, #1
  401a54:	fa03 fc0e 	lsl.w	ip, r3, lr
  401a58:	bf28      	it	cs
  401a5a:	f04c 0c02 	orrcs.w	ip, ip, #2
  401a5e:	fa43 f305 	asr.w	r3, r3, r5
  401a62:	18c0      	adds	r0, r0, r3
  401a64:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401a68:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401a6c:	d507      	bpl.n	401a7e <__adddf3+0xe6>
  401a6e:	f04f 0e00 	mov.w	lr, #0
  401a72:	f1dc 0c00 	rsbs	ip, ip, #0
  401a76:	eb7e 0000 	sbcs.w	r0, lr, r0
  401a7a:	eb6e 0101 	sbc.w	r1, lr, r1
  401a7e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401a82:	d31b      	bcc.n	401abc <__adddf3+0x124>
  401a84:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401a88:	d30c      	bcc.n	401aa4 <__adddf3+0x10c>
  401a8a:	0849      	lsrs	r1, r1, #1
  401a8c:	ea5f 0030 	movs.w	r0, r0, rrx
  401a90:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401a94:	f104 0401 	add.w	r4, r4, #1
  401a98:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401a9c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401aa0:	f080 809a 	bcs.w	401bd8 <__adddf3+0x240>
  401aa4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401aa8:	bf08      	it	eq
  401aaa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401aae:	f150 0000 	adcs.w	r0, r0, #0
  401ab2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401ab6:	ea41 0105 	orr.w	r1, r1, r5
  401aba:	bd30      	pop	{r4, r5, pc}
  401abc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401ac0:	4140      	adcs	r0, r0
  401ac2:	eb41 0101 	adc.w	r1, r1, r1
  401ac6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401aca:	f1a4 0401 	sub.w	r4, r4, #1
  401ace:	d1e9      	bne.n	401aa4 <__adddf3+0x10c>
  401ad0:	f091 0f00 	teq	r1, #0
  401ad4:	bf04      	itt	eq
  401ad6:	4601      	moveq	r1, r0
  401ad8:	2000      	moveq	r0, #0
  401ada:	fab1 f381 	clz	r3, r1
  401ade:	bf08      	it	eq
  401ae0:	3320      	addeq	r3, #32
  401ae2:	f1a3 030b 	sub.w	r3, r3, #11
  401ae6:	f1b3 0220 	subs.w	r2, r3, #32
  401aea:	da0c      	bge.n	401b06 <__adddf3+0x16e>
  401aec:	320c      	adds	r2, #12
  401aee:	dd08      	ble.n	401b02 <__adddf3+0x16a>
  401af0:	f102 0c14 	add.w	ip, r2, #20
  401af4:	f1c2 020c 	rsb	r2, r2, #12
  401af8:	fa01 f00c 	lsl.w	r0, r1, ip
  401afc:	fa21 f102 	lsr.w	r1, r1, r2
  401b00:	e00c      	b.n	401b1c <__adddf3+0x184>
  401b02:	f102 0214 	add.w	r2, r2, #20
  401b06:	bfd8      	it	le
  401b08:	f1c2 0c20 	rsble	ip, r2, #32
  401b0c:	fa01 f102 	lsl.w	r1, r1, r2
  401b10:	fa20 fc0c 	lsr.w	ip, r0, ip
  401b14:	bfdc      	itt	le
  401b16:	ea41 010c 	orrle.w	r1, r1, ip
  401b1a:	4090      	lslle	r0, r2
  401b1c:	1ae4      	subs	r4, r4, r3
  401b1e:	bfa2      	ittt	ge
  401b20:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401b24:	4329      	orrge	r1, r5
  401b26:	bd30      	popge	{r4, r5, pc}
  401b28:	ea6f 0404 	mvn.w	r4, r4
  401b2c:	3c1f      	subs	r4, #31
  401b2e:	da1c      	bge.n	401b6a <__adddf3+0x1d2>
  401b30:	340c      	adds	r4, #12
  401b32:	dc0e      	bgt.n	401b52 <__adddf3+0x1ba>
  401b34:	f104 0414 	add.w	r4, r4, #20
  401b38:	f1c4 0220 	rsb	r2, r4, #32
  401b3c:	fa20 f004 	lsr.w	r0, r0, r4
  401b40:	fa01 f302 	lsl.w	r3, r1, r2
  401b44:	ea40 0003 	orr.w	r0, r0, r3
  401b48:	fa21 f304 	lsr.w	r3, r1, r4
  401b4c:	ea45 0103 	orr.w	r1, r5, r3
  401b50:	bd30      	pop	{r4, r5, pc}
  401b52:	f1c4 040c 	rsb	r4, r4, #12
  401b56:	f1c4 0220 	rsb	r2, r4, #32
  401b5a:	fa20 f002 	lsr.w	r0, r0, r2
  401b5e:	fa01 f304 	lsl.w	r3, r1, r4
  401b62:	ea40 0003 	orr.w	r0, r0, r3
  401b66:	4629      	mov	r1, r5
  401b68:	bd30      	pop	{r4, r5, pc}
  401b6a:	fa21 f004 	lsr.w	r0, r1, r4
  401b6e:	4629      	mov	r1, r5
  401b70:	bd30      	pop	{r4, r5, pc}
  401b72:	f094 0f00 	teq	r4, #0
  401b76:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401b7a:	bf06      	itte	eq
  401b7c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401b80:	3401      	addeq	r4, #1
  401b82:	3d01      	subne	r5, #1
  401b84:	e74e      	b.n	401a24 <__adddf3+0x8c>
  401b86:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401b8a:	bf18      	it	ne
  401b8c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401b90:	d029      	beq.n	401be6 <__adddf3+0x24e>
  401b92:	ea94 0f05 	teq	r4, r5
  401b96:	bf08      	it	eq
  401b98:	ea90 0f02 	teqeq	r0, r2
  401b9c:	d005      	beq.n	401baa <__adddf3+0x212>
  401b9e:	ea54 0c00 	orrs.w	ip, r4, r0
  401ba2:	bf04      	itt	eq
  401ba4:	4619      	moveq	r1, r3
  401ba6:	4610      	moveq	r0, r2
  401ba8:	bd30      	pop	{r4, r5, pc}
  401baa:	ea91 0f03 	teq	r1, r3
  401bae:	bf1e      	ittt	ne
  401bb0:	2100      	movne	r1, #0
  401bb2:	2000      	movne	r0, #0
  401bb4:	bd30      	popne	{r4, r5, pc}
  401bb6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401bba:	d105      	bne.n	401bc8 <__adddf3+0x230>
  401bbc:	0040      	lsls	r0, r0, #1
  401bbe:	4149      	adcs	r1, r1
  401bc0:	bf28      	it	cs
  401bc2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401bc6:	bd30      	pop	{r4, r5, pc}
  401bc8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401bcc:	bf3c      	itt	cc
  401bce:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401bd2:	bd30      	popcc	{r4, r5, pc}
  401bd4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401bd8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401bdc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401be0:	f04f 0000 	mov.w	r0, #0
  401be4:	bd30      	pop	{r4, r5, pc}
  401be6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401bea:	bf1a      	itte	ne
  401bec:	4619      	movne	r1, r3
  401bee:	4610      	movne	r0, r2
  401bf0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401bf4:	bf1c      	itt	ne
  401bf6:	460b      	movne	r3, r1
  401bf8:	4602      	movne	r2, r0
  401bfa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401bfe:	bf06      	itte	eq
  401c00:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401c04:	ea91 0f03 	teqeq	r1, r3
  401c08:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401c0c:	bd30      	pop	{r4, r5, pc}
  401c0e:	bf00      	nop

00401c10 <__aeabi_ui2d>:
  401c10:	f090 0f00 	teq	r0, #0
  401c14:	bf04      	itt	eq
  401c16:	2100      	moveq	r1, #0
  401c18:	4770      	bxeq	lr
  401c1a:	b530      	push	{r4, r5, lr}
  401c1c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401c20:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401c24:	f04f 0500 	mov.w	r5, #0
  401c28:	f04f 0100 	mov.w	r1, #0
  401c2c:	e750      	b.n	401ad0 <__adddf3+0x138>
  401c2e:	bf00      	nop

00401c30 <__aeabi_i2d>:
  401c30:	f090 0f00 	teq	r0, #0
  401c34:	bf04      	itt	eq
  401c36:	2100      	moveq	r1, #0
  401c38:	4770      	bxeq	lr
  401c3a:	b530      	push	{r4, r5, lr}
  401c3c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401c40:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401c44:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401c48:	bf48      	it	mi
  401c4a:	4240      	negmi	r0, r0
  401c4c:	f04f 0100 	mov.w	r1, #0
  401c50:	e73e      	b.n	401ad0 <__adddf3+0x138>
  401c52:	bf00      	nop

00401c54 <__aeabi_f2d>:
  401c54:	0042      	lsls	r2, r0, #1
  401c56:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401c5a:	ea4f 0131 	mov.w	r1, r1, rrx
  401c5e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401c62:	bf1f      	itttt	ne
  401c64:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401c68:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401c6c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401c70:	4770      	bxne	lr
  401c72:	f092 0f00 	teq	r2, #0
  401c76:	bf14      	ite	ne
  401c78:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401c7c:	4770      	bxeq	lr
  401c7e:	b530      	push	{r4, r5, lr}
  401c80:	f44f 7460 	mov.w	r4, #896	; 0x380
  401c84:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401c88:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401c8c:	e720      	b.n	401ad0 <__adddf3+0x138>
  401c8e:	bf00      	nop

00401c90 <__aeabi_ul2d>:
  401c90:	ea50 0201 	orrs.w	r2, r0, r1
  401c94:	bf08      	it	eq
  401c96:	4770      	bxeq	lr
  401c98:	b530      	push	{r4, r5, lr}
  401c9a:	f04f 0500 	mov.w	r5, #0
  401c9e:	e00a      	b.n	401cb6 <__aeabi_l2d+0x16>

00401ca0 <__aeabi_l2d>:
  401ca0:	ea50 0201 	orrs.w	r2, r0, r1
  401ca4:	bf08      	it	eq
  401ca6:	4770      	bxeq	lr
  401ca8:	b530      	push	{r4, r5, lr}
  401caa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401cae:	d502      	bpl.n	401cb6 <__aeabi_l2d+0x16>
  401cb0:	4240      	negs	r0, r0
  401cb2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401cb6:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401cba:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401cbe:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401cc2:	f43f aedc 	beq.w	401a7e <__adddf3+0xe6>
  401cc6:	f04f 0203 	mov.w	r2, #3
  401cca:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401cce:	bf18      	it	ne
  401cd0:	3203      	addne	r2, #3
  401cd2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401cd6:	bf18      	it	ne
  401cd8:	3203      	addne	r2, #3
  401cda:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401cde:	f1c2 0320 	rsb	r3, r2, #32
  401ce2:	fa00 fc03 	lsl.w	ip, r0, r3
  401ce6:	fa20 f002 	lsr.w	r0, r0, r2
  401cea:	fa01 fe03 	lsl.w	lr, r1, r3
  401cee:	ea40 000e 	orr.w	r0, r0, lr
  401cf2:	fa21 f102 	lsr.w	r1, r1, r2
  401cf6:	4414      	add	r4, r2
  401cf8:	e6c1      	b.n	401a7e <__adddf3+0xe6>
  401cfa:	bf00      	nop

00401cfc <__aeabi_dmul>:
  401cfc:	b570      	push	{r4, r5, r6, lr}
  401cfe:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401d02:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401d06:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401d0a:	bf1d      	ittte	ne
  401d0c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401d10:	ea94 0f0c 	teqne	r4, ip
  401d14:	ea95 0f0c 	teqne	r5, ip
  401d18:	f000 f8de 	bleq	401ed8 <__aeabi_dmul+0x1dc>
  401d1c:	442c      	add	r4, r5
  401d1e:	ea81 0603 	eor.w	r6, r1, r3
  401d22:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401d26:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401d2a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401d2e:	bf18      	it	ne
  401d30:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401d34:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401d38:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401d3c:	d038      	beq.n	401db0 <__aeabi_dmul+0xb4>
  401d3e:	fba0 ce02 	umull	ip, lr, r0, r2
  401d42:	f04f 0500 	mov.w	r5, #0
  401d46:	fbe1 e502 	umlal	lr, r5, r1, r2
  401d4a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401d4e:	fbe0 e503 	umlal	lr, r5, r0, r3
  401d52:	f04f 0600 	mov.w	r6, #0
  401d56:	fbe1 5603 	umlal	r5, r6, r1, r3
  401d5a:	f09c 0f00 	teq	ip, #0
  401d5e:	bf18      	it	ne
  401d60:	f04e 0e01 	orrne.w	lr, lr, #1
  401d64:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401d68:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401d6c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401d70:	d204      	bcs.n	401d7c <__aeabi_dmul+0x80>
  401d72:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401d76:	416d      	adcs	r5, r5
  401d78:	eb46 0606 	adc.w	r6, r6, r6
  401d7c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401d80:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401d84:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401d88:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401d8c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401d90:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401d94:	bf88      	it	hi
  401d96:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401d9a:	d81e      	bhi.n	401dda <__aeabi_dmul+0xde>
  401d9c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401da0:	bf08      	it	eq
  401da2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401da6:	f150 0000 	adcs.w	r0, r0, #0
  401daa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401dae:	bd70      	pop	{r4, r5, r6, pc}
  401db0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401db4:	ea46 0101 	orr.w	r1, r6, r1
  401db8:	ea40 0002 	orr.w	r0, r0, r2
  401dbc:	ea81 0103 	eor.w	r1, r1, r3
  401dc0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401dc4:	bfc2      	ittt	gt
  401dc6:	ebd4 050c 	rsbsgt	r5, r4, ip
  401dca:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401dce:	bd70      	popgt	{r4, r5, r6, pc}
  401dd0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401dd4:	f04f 0e00 	mov.w	lr, #0
  401dd8:	3c01      	subs	r4, #1
  401dda:	f300 80ab 	bgt.w	401f34 <__aeabi_dmul+0x238>
  401dde:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401de2:	bfde      	ittt	le
  401de4:	2000      	movle	r0, #0
  401de6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401dea:	bd70      	pople	{r4, r5, r6, pc}
  401dec:	f1c4 0400 	rsb	r4, r4, #0
  401df0:	3c20      	subs	r4, #32
  401df2:	da35      	bge.n	401e60 <__aeabi_dmul+0x164>
  401df4:	340c      	adds	r4, #12
  401df6:	dc1b      	bgt.n	401e30 <__aeabi_dmul+0x134>
  401df8:	f104 0414 	add.w	r4, r4, #20
  401dfc:	f1c4 0520 	rsb	r5, r4, #32
  401e00:	fa00 f305 	lsl.w	r3, r0, r5
  401e04:	fa20 f004 	lsr.w	r0, r0, r4
  401e08:	fa01 f205 	lsl.w	r2, r1, r5
  401e0c:	ea40 0002 	orr.w	r0, r0, r2
  401e10:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401e14:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401e18:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401e1c:	fa21 f604 	lsr.w	r6, r1, r4
  401e20:	eb42 0106 	adc.w	r1, r2, r6
  401e24:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401e28:	bf08      	it	eq
  401e2a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401e2e:	bd70      	pop	{r4, r5, r6, pc}
  401e30:	f1c4 040c 	rsb	r4, r4, #12
  401e34:	f1c4 0520 	rsb	r5, r4, #32
  401e38:	fa00 f304 	lsl.w	r3, r0, r4
  401e3c:	fa20 f005 	lsr.w	r0, r0, r5
  401e40:	fa01 f204 	lsl.w	r2, r1, r4
  401e44:	ea40 0002 	orr.w	r0, r0, r2
  401e48:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401e4c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401e50:	f141 0100 	adc.w	r1, r1, #0
  401e54:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401e58:	bf08      	it	eq
  401e5a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401e5e:	bd70      	pop	{r4, r5, r6, pc}
  401e60:	f1c4 0520 	rsb	r5, r4, #32
  401e64:	fa00 f205 	lsl.w	r2, r0, r5
  401e68:	ea4e 0e02 	orr.w	lr, lr, r2
  401e6c:	fa20 f304 	lsr.w	r3, r0, r4
  401e70:	fa01 f205 	lsl.w	r2, r1, r5
  401e74:	ea43 0302 	orr.w	r3, r3, r2
  401e78:	fa21 f004 	lsr.w	r0, r1, r4
  401e7c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401e80:	fa21 f204 	lsr.w	r2, r1, r4
  401e84:	ea20 0002 	bic.w	r0, r0, r2
  401e88:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401e8c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401e90:	bf08      	it	eq
  401e92:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401e96:	bd70      	pop	{r4, r5, r6, pc}
  401e98:	f094 0f00 	teq	r4, #0
  401e9c:	d10f      	bne.n	401ebe <__aeabi_dmul+0x1c2>
  401e9e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401ea2:	0040      	lsls	r0, r0, #1
  401ea4:	eb41 0101 	adc.w	r1, r1, r1
  401ea8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401eac:	bf08      	it	eq
  401eae:	3c01      	subeq	r4, #1
  401eb0:	d0f7      	beq.n	401ea2 <__aeabi_dmul+0x1a6>
  401eb2:	ea41 0106 	orr.w	r1, r1, r6
  401eb6:	f095 0f00 	teq	r5, #0
  401eba:	bf18      	it	ne
  401ebc:	4770      	bxne	lr
  401ebe:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401ec2:	0052      	lsls	r2, r2, #1
  401ec4:	eb43 0303 	adc.w	r3, r3, r3
  401ec8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401ecc:	bf08      	it	eq
  401ece:	3d01      	subeq	r5, #1
  401ed0:	d0f7      	beq.n	401ec2 <__aeabi_dmul+0x1c6>
  401ed2:	ea43 0306 	orr.w	r3, r3, r6
  401ed6:	4770      	bx	lr
  401ed8:	ea94 0f0c 	teq	r4, ip
  401edc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401ee0:	bf18      	it	ne
  401ee2:	ea95 0f0c 	teqne	r5, ip
  401ee6:	d00c      	beq.n	401f02 <__aeabi_dmul+0x206>
  401ee8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401eec:	bf18      	it	ne
  401eee:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401ef2:	d1d1      	bne.n	401e98 <__aeabi_dmul+0x19c>
  401ef4:	ea81 0103 	eor.w	r1, r1, r3
  401ef8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401efc:	f04f 0000 	mov.w	r0, #0
  401f00:	bd70      	pop	{r4, r5, r6, pc}
  401f02:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401f06:	bf06      	itte	eq
  401f08:	4610      	moveq	r0, r2
  401f0a:	4619      	moveq	r1, r3
  401f0c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401f10:	d019      	beq.n	401f46 <__aeabi_dmul+0x24a>
  401f12:	ea94 0f0c 	teq	r4, ip
  401f16:	d102      	bne.n	401f1e <__aeabi_dmul+0x222>
  401f18:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401f1c:	d113      	bne.n	401f46 <__aeabi_dmul+0x24a>
  401f1e:	ea95 0f0c 	teq	r5, ip
  401f22:	d105      	bne.n	401f30 <__aeabi_dmul+0x234>
  401f24:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401f28:	bf1c      	itt	ne
  401f2a:	4610      	movne	r0, r2
  401f2c:	4619      	movne	r1, r3
  401f2e:	d10a      	bne.n	401f46 <__aeabi_dmul+0x24a>
  401f30:	ea81 0103 	eor.w	r1, r1, r3
  401f34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401f38:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401f3c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401f40:	f04f 0000 	mov.w	r0, #0
  401f44:	bd70      	pop	{r4, r5, r6, pc}
  401f46:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401f4a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401f4e:	bd70      	pop	{r4, r5, r6, pc}

00401f50 <__aeabi_ddiv>:
  401f50:	b570      	push	{r4, r5, r6, lr}
  401f52:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401f56:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401f5a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401f5e:	bf1d      	ittte	ne
  401f60:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401f64:	ea94 0f0c 	teqne	r4, ip
  401f68:	ea95 0f0c 	teqne	r5, ip
  401f6c:	f000 f8a7 	bleq	4020be <__aeabi_ddiv+0x16e>
  401f70:	eba4 0405 	sub.w	r4, r4, r5
  401f74:	ea81 0e03 	eor.w	lr, r1, r3
  401f78:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401f7c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401f80:	f000 8088 	beq.w	402094 <__aeabi_ddiv+0x144>
  401f84:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401f88:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401f8c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401f90:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401f94:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401f98:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401f9c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401fa0:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401fa4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401fa8:	429d      	cmp	r5, r3
  401faa:	bf08      	it	eq
  401fac:	4296      	cmpeq	r6, r2
  401fae:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401fb2:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401fb6:	d202      	bcs.n	401fbe <__aeabi_ddiv+0x6e>
  401fb8:	085b      	lsrs	r3, r3, #1
  401fba:	ea4f 0232 	mov.w	r2, r2, rrx
  401fbe:	1ab6      	subs	r6, r6, r2
  401fc0:	eb65 0503 	sbc.w	r5, r5, r3
  401fc4:	085b      	lsrs	r3, r3, #1
  401fc6:	ea4f 0232 	mov.w	r2, r2, rrx
  401fca:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401fce:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401fd2:	ebb6 0e02 	subs.w	lr, r6, r2
  401fd6:	eb75 0e03 	sbcs.w	lr, r5, r3
  401fda:	bf22      	ittt	cs
  401fdc:	1ab6      	subcs	r6, r6, r2
  401fde:	4675      	movcs	r5, lr
  401fe0:	ea40 000c 	orrcs.w	r0, r0, ip
  401fe4:	085b      	lsrs	r3, r3, #1
  401fe6:	ea4f 0232 	mov.w	r2, r2, rrx
  401fea:	ebb6 0e02 	subs.w	lr, r6, r2
  401fee:	eb75 0e03 	sbcs.w	lr, r5, r3
  401ff2:	bf22      	ittt	cs
  401ff4:	1ab6      	subcs	r6, r6, r2
  401ff6:	4675      	movcs	r5, lr
  401ff8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401ffc:	085b      	lsrs	r3, r3, #1
  401ffe:	ea4f 0232 	mov.w	r2, r2, rrx
  402002:	ebb6 0e02 	subs.w	lr, r6, r2
  402006:	eb75 0e03 	sbcs.w	lr, r5, r3
  40200a:	bf22      	ittt	cs
  40200c:	1ab6      	subcs	r6, r6, r2
  40200e:	4675      	movcs	r5, lr
  402010:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402014:	085b      	lsrs	r3, r3, #1
  402016:	ea4f 0232 	mov.w	r2, r2, rrx
  40201a:	ebb6 0e02 	subs.w	lr, r6, r2
  40201e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402022:	bf22      	ittt	cs
  402024:	1ab6      	subcs	r6, r6, r2
  402026:	4675      	movcs	r5, lr
  402028:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40202c:	ea55 0e06 	orrs.w	lr, r5, r6
  402030:	d018      	beq.n	402064 <__aeabi_ddiv+0x114>
  402032:	ea4f 1505 	mov.w	r5, r5, lsl #4
  402036:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40203a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40203e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  402042:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  402046:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40204a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40204e:	d1c0      	bne.n	401fd2 <__aeabi_ddiv+0x82>
  402050:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402054:	d10b      	bne.n	40206e <__aeabi_ddiv+0x11e>
  402056:	ea41 0100 	orr.w	r1, r1, r0
  40205a:	f04f 0000 	mov.w	r0, #0
  40205e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  402062:	e7b6      	b.n	401fd2 <__aeabi_ddiv+0x82>
  402064:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402068:	bf04      	itt	eq
  40206a:	4301      	orreq	r1, r0
  40206c:	2000      	moveq	r0, #0
  40206e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402072:	bf88      	it	hi
  402074:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402078:	f63f aeaf 	bhi.w	401dda <__aeabi_dmul+0xde>
  40207c:	ebb5 0c03 	subs.w	ip, r5, r3
  402080:	bf04      	itt	eq
  402082:	ebb6 0c02 	subseq.w	ip, r6, r2
  402086:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40208a:	f150 0000 	adcs.w	r0, r0, #0
  40208e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402092:	bd70      	pop	{r4, r5, r6, pc}
  402094:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  402098:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  40209c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4020a0:	bfc2      	ittt	gt
  4020a2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4020a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4020aa:	bd70      	popgt	{r4, r5, r6, pc}
  4020ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4020b0:	f04f 0e00 	mov.w	lr, #0
  4020b4:	3c01      	subs	r4, #1
  4020b6:	e690      	b.n	401dda <__aeabi_dmul+0xde>
  4020b8:	ea45 0e06 	orr.w	lr, r5, r6
  4020bc:	e68d      	b.n	401dda <__aeabi_dmul+0xde>
  4020be:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4020c2:	ea94 0f0c 	teq	r4, ip
  4020c6:	bf08      	it	eq
  4020c8:	ea95 0f0c 	teqeq	r5, ip
  4020cc:	f43f af3b 	beq.w	401f46 <__aeabi_dmul+0x24a>
  4020d0:	ea94 0f0c 	teq	r4, ip
  4020d4:	d10a      	bne.n	4020ec <__aeabi_ddiv+0x19c>
  4020d6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4020da:	f47f af34 	bne.w	401f46 <__aeabi_dmul+0x24a>
  4020de:	ea95 0f0c 	teq	r5, ip
  4020e2:	f47f af25 	bne.w	401f30 <__aeabi_dmul+0x234>
  4020e6:	4610      	mov	r0, r2
  4020e8:	4619      	mov	r1, r3
  4020ea:	e72c      	b.n	401f46 <__aeabi_dmul+0x24a>
  4020ec:	ea95 0f0c 	teq	r5, ip
  4020f0:	d106      	bne.n	402100 <__aeabi_ddiv+0x1b0>
  4020f2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4020f6:	f43f aefd 	beq.w	401ef4 <__aeabi_dmul+0x1f8>
  4020fa:	4610      	mov	r0, r2
  4020fc:	4619      	mov	r1, r3
  4020fe:	e722      	b.n	401f46 <__aeabi_dmul+0x24a>
  402100:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402104:	bf18      	it	ne
  402106:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40210a:	f47f aec5 	bne.w	401e98 <__aeabi_dmul+0x19c>
  40210e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  402112:	f47f af0d 	bne.w	401f30 <__aeabi_dmul+0x234>
  402116:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40211a:	f47f aeeb 	bne.w	401ef4 <__aeabi_dmul+0x1f8>
  40211e:	e712      	b.n	401f46 <__aeabi_dmul+0x24a>

00402120 <__gedf2>:
  402120:	f04f 3cff 	mov.w	ip, #4294967295
  402124:	e006      	b.n	402134 <__cmpdf2+0x4>
  402126:	bf00      	nop

00402128 <__ledf2>:
  402128:	f04f 0c01 	mov.w	ip, #1
  40212c:	e002      	b.n	402134 <__cmpdf2+0x4>
  40212e:	bf00      	nop

00402130 <__cmpdf2>:
  402130:	f04f 0c01 	mov.w	ip, #1
  402134:	f84d cd04 	str.w	ip, [sp, #-4]!
  402138:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40213c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  402140:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  402144:	bf18      	it	ne
  402146:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40214a:	d01b      	beq.n	402184 <__cmpdf2+0x54>
  40214c:	b001      	add	sp, #4
  40214e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  402152:	bf0c      	ite	eq
  402154:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  402158:	ea91 0f03 	teqne	r1, r3
  40215c:	bf02      	ittt	eq
  40215e:	ea90 0f02 	teqeq	r0, r2
  402162:	2000      	moveq	r0, #0
  402164:	4770      	bxeq	lr
  402166:	f110 0f00 	cmn.w	r0, #0
  40216a:	ea91 0f03 	teq	r1, r3
  40216e:	bf58      	it	pl
  402170:	4299      	cmppl	r1, r3
  402172:	bf08      	it	eq
  402174:	4290      	cmpeq	r0, r2
  402176:	bf2c      	ite	cs
  402178:	17d8      	asrcs	r0, r3, #31
  40217a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  40217e:	f040 0001 	orr.w	r0, r0, #1
  402182:	4770      	bx	lr
  402184:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  402188:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40218c:	d102      	bne.n	402194 <__cmpdf2+0x64>
  40218e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  402192:	d107      	bne.n	4021a4 <__cmpdf2+0x74>
  402194:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  402198:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40219c:	d1d6      	bne.n	40214c <__cmpdf2+0x1c>
  40219e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4021a2:	d0d3      	beq.n	40214c <__cmpdf2+0x1c>
  4021a4:	f85d 0b04 	ldr.w	r0, [sp], #4
  4021a8:	4770      	bx	lr
  4021aa:	bf00      	nop

004021ac <__aeabi_cdrcmple>:
  4021ac:	4684      	mov	ip, r0
  4021ae:	4610      	mov	r0, r2
  4021b0:	4662      	mov	r2, ip
  4021b2:	468c      	mov	ip, r1
  4021b4:	4619      	mov	r1, r3
  4021b6:	4663      	mov	r3, ip
  4021b8:	e000      	b.n	4021bc <__aeabi_cdcmpeq>
  4021ba:	bf00      	nop

004021bc <__aeabi_cdcmpeq>:
  4021bc:	b501      	push	{r0, lr}
  4021be:	f7ff ffb7 	bl	402130 <__cmpdf2>
  4021c2:	2800      	cmp	r0, #0
  4021c4:	bf48      	it	mi
  4021c6:	f110 0f00 	cmnmi.w	r0, #0
  4021ca:	bd01      	pop	{r0, pc}

004021cc <__aeabi_dcmpeq>:
  4021cc:	f84d ed08 	str.w	lr, [sp, #-8]!
  4021d0:	f7ff fff4 	bl	4021bc <__aeabi_cdcmpeq>
  4021d4:	bf0c      	ite	eq
  4021d6:	2001      	moveq	r0, #1
  4021d8:	2000      	movne	r0, #0
  4021da:	f85d fb08 	ldr.w	pc, [sp], #8
  4021de:	bf00      	nop

004021e0 <__aeabi_dcmplt>:
  4021e0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4021e4:	f7ff ffea 	bl	4021bc <__aeabi_cdcmpeq>
  4021e8:	bf34      	ite	cc
  4021ea:	2001      	movcc	r0, #1
  4021ec:	2000      	movcs	r0, #0
  4021ee:	f85d fb08 	ldr.w	pc, [sp], #8
  4021f2:	bf00      	nop

004021f4 <__aeabi_dcmple>:
  4021f4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4021f8:	f7ff ffe0 	bl	4021bc <__aeabi_cdcmpeq>
  4021fc:	bf94      	ite	ls
  4021fe:	2001      	movls	r0, #1
  402200:	2000      	movhi	r0, #0
  402202:	f85d fb08 	ldr.w	pc, [sp], #8
  402206:	bf00      	nop

00402208 <__aeabi_dcmpge>:
  402208:	f84d ed08 	str.w	lr, [sp, #-8]!
  40220c:	f7ff ffce 	bl	4021ac <__aeabi_cdrcmple>
  402210:	bf94      	ite	ls
  402212:	2001      	movls	r0, #1
  402214:	2000      	movhi	r0, #0
  402216:	f85d fb08 	ldr.w	pc, [sp], #8
  40221a:	bf00      	nop

0040221c <__aeabi_dcmpgt>:
  40221c:	f84d ed08 	str.w	lr, [sp, #-8]!
  402220:	f7ff ffc4 	bl	4021ac <__aeabi_cdrcmple>
  402224:	bf34      	ite	cc
  402226:	2001      	movcc	r0, #1
  402228:	2000      	movcs	r0, #0
  40222a:	f85d fb08 	ldr.w	pc, [sp], #8
  40222e:	bf00      	nop

00402230 <__libc_init_array>:
  402230:	b570      	push	{r4, r5, r6, lr}
  402232:	4e0f      	ldr	r6, [pc, #60]	; (402270 <__libc_init_array+0x40>)
  402234:	4d0f      	ldr	r5, [pc, #60]	; (402274 <__libc_init_array+0x44>)
  402236:	1b76      	subs	r6, r6, r5
  402238:	10b6      	asrs	r6, r6, #2
  40223a:	bf18      	it	ne
  40223c:	2400      	movne	r4, #0
  40223e:	d005      	beq.n	40224c <__libc_init_array+0x1c>
  402240:	3401      	adds	r4, #1
  402242:	f855 3b04 	ldr.w	r3, [r5], #4
  402246:	4798      	blx	r3
  402248:	42a6      	cmp	r6, r4
  40224a:	d1f9      	bne.n	402240 <__libc_init_array+0x10>
  40224c:	4e0a      	ldr	r6, [pc, #40]	; (402278 <__libc_init_array+0x48>)
  40224e:	4d0b      	ldr	r5, [pc, #44]	; (40227c <__libc_init_array+0x4c>)
  402250:	1b76      	subs	r6, r6, r5
  402252:	f004 fea5 	bl	406fa0 <_init>
  402256:	10b6      	asrs	r6, r6, #2
  402258:	bf18      	it	ne
  40225a:	2400      	movne	r4, #0
  40225c:	d006      	beq.n	40226c <__libc_init_array+0x3c>
  40225e:	3401      	adds	r4, #1
  402260:	f855 3b04 	ldr.w	r3, [r5], #4
  402264:	4798      	blx	r3
  402266:	42a6      	cmp	r6, r4
  402268:	d1f9      	bne.n	40225e <__libc_init_array+0x2e>
  40226a:	bd70      	pop	{r4, r5, r6, pc}
  40226c:	bd70      	pop	{r4, r5, r6, pc}
  40226e:	bf00      	nop
  402270:	00406fac 	.word	0x00406fac
  402274:	00406fac 	.word	0x00406fac
  402278:	00406fb4 	.word	0x00406fb4
  40227c:	00406fac 	.word	0x00406fac

00402280 <memset>:
  402280:	b470      	push	{r4, r5, r6}
  402282:	0786      	lsls	r6, r0, #30
  402284:	d046      	beq.n	402314 <memset+0x94>
  402286:	1e54      	subs	r4, r2, #1
  402288:	2a00      	cmp	r2, #0
  40228a:	d041      	beq.n	402310 <memset+0x90>
  40228c:	b2ca      	uxtb	r2, r1
  40228e:	4603      	mov	r3, r0
  402290:	e002      	b.n	402298 <memset+0x18>
  402292:	f114 34ff 	adds.w	r4, r4, #4294967295
  402296:	d33b      	bcc.n	402310 <memset+0x90>
  402298:	f803 2b01 	strb.w	r2, [r3], #1
  40229c:	079d      	lsls	r5, r3, #30
  40229e:	d1f8      	bne.n	402292 <memset+0x12>
  4022a0:	2c03      	cmp	r4, #3
  4022a2:	d92e      	bls.n	402302 <memset+0x82>
  4022a4:	b2cd      	uxtb	r5, r1
  4022a6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4022aa:	2c0f      	cmp	r4, #15
  4022ac:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4022b0:	d919      	bls.n	4022e6 <memset+0x66>
  4022b2:	f103 0210 	add.w	r2, r3, #16
  4022b6:	4626      	mov	r6, r4
  4022b8:	3e10      	subs	r6, #16
  4022ba:	2e0f      	cmp	r6, #15
  4022bc:	f842 5c10 	str.w	r5, [r2, #-16]
  4022c0:	f842 5c0c 	str.w	r5, [r2, #-12]
  4022c4:	f842 5c08 	str.w	r5, [r2, #-8]
  4022c8:	f842 5c04 	str.w	r5, [r2, #-4]
  4022cc:	f102 0210 	add.w	r2, r2, #16
  4022d0:	d8f2      	bhi.n	4022b8 <memset+0x38>
  4022d2:	f1a4 0210 	sub.w	r2, r4, #16
  4022d6:	f022 020f 	bic.w	r2, r2, #15
  4022da:	f004 040f 	and.w	r4, r4, #15
  4022de:	3210      	adds	r2, #16
  4022e0:	2c03      	cmp	r4, #3
  4022e2:	4413      	add	r3, r2
  4022e4:	d90d      	bls.n	402302 <memset+0x82>
  4022e6:	461e      	mov	r6, r3
  4022e8:	4622      	mov	r2, r4
  4022ea:	3a04      	subs	r2, #4
  4022ec:	2a03      	cmp	r2, #3
  4022ee:	f846 5b04 	str.w	r5, [r6], #4
  4022f2:	d8fa      	bhi.n	4022ea <memset+0x6a>
  4022f4:	1f22      	subs	r2, r4, #4
  4022f6:	f022 0203 	bic.w	r2, r2, #3
  4022fa:	3204      	adds	r2, #4
  4022fc:	4413      	add	r3, r2
  4022fe:	f004 0403 	and.w	r4, r4, #3
  402302:	b12c      	cbz	r4, 402310 <memset+0x90>
  402304:	b2c9      	uxtb	r1, r1
  402306:	441c      	add	r4, r3
  402308:	f803 1b01 	strb.w	r1, [r3], #1
  40230c:	429c      	cmp	r4, r3
  40230e:	d1fb      	bne.n	402308 <memset+0x88>
  402310:	bc70      	pop	{r4, r5, r6}
  402312:	4770      	bx	lr
  402314:	4614      	mov	r4, r2
  402316:	4603      	mov	r3, r0
  402318:	e7c2      	b.n	4022a0 <memset+0x20>
  40231a:	bf00      	nop

0040231c <sprintf>:
  40231c:	b40e      	push	{r1, r2, r3}
  40231e:	b5f0      	push	{r4, r5, r6, r7, lr}
  402320:	b09c      	sub	sp, #112	; 0x70
  402322:	ab21      	add	r3, sp, #132	; 0x84
  402324:	490f      	ldr	r1, [pc, #60]	; (402364 <sprintf+0x48>)
  402326:	f853 2b04 	ldr.w	r2, [r3], #4
  40232a:	9301      	str	r3, [sp, #4]
  40232c:	4605      	mov	r5, r0
  40232e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  402332:	6808      	ldr	r0, [r1, #0]
  402334:	9502      	str	r5, [sp, #8]
  402336:	f44f 7702 	mov.w	r7, #520	; 0x208
  40233a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40233e:	a902      	add	r1, sp, #8
  402340:	9506      	str	r5, [sp, #24]
  402342:	f8ad 7014 	strh.w	r7, [sp, #20]
  402346:	9404      	str	r4, [sp, #16]
  402348:	9407      	str	r4, [sp, #28]
  40234a:	f8ad 6016 	strh.w	r6, [sp, #22]
  40234e:	f000 f80b 	bl	402368 <_svfprintf_r>
  402352:	9b02      	ldr	r3, [sp, #8]
  402354:	2200      	movs	r2, #0
  402356:	701a      	strb	r2, [r3, #0]
  402358:	b01c      	add	sp, #112	; 0x70
  40235a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40235e:	b003      	add	sp, #12
  402360:	4770      	bx	lr
  402362:	bf00      	nop
  402364:	20400020 	.word	0x20400020

00402368 <_svfprintf_r>:
  402368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40236c:	b0c3      	sub	sp, #268	; 0x10c
  40236e:	460c      	mov	r4, r1
  402370:	910b      	str	r1, [sp, #44]	; 0x2c
  402372:	4692      	mov	sl, r2
  402374:	930f      	str	r3, [sp, #60]	; 0x3c
  402376:	900c      	str	r0, [sp, #48]	; 0x30
  402378:	f002 fa0e 	bl	404798 <_localeconv_r>
  40237c:	6803      	ldr	r3, [r0, #0]
  40237e:	931a      	str	r3, [sp, #104]	; 0x68
  402380:	4618      	mov	r0, r3
  402382:	f003 f8dd 	bl	405540 <strlen>
  402386:	89a3      	ldrh	r3, [r4, #12]
  402388:	9019      	str	r0, [sp, #100]	; 0x64
  40238a:	0619      	lsls	r1, r3, #24
  40238c:	d503      	bpl.n	402396 <_svfprintf_r+0x2e>
  40238e:	6923      	ldr	r3, [r4, #16]
  402390:	2b00      	cmp	r3, #0
  402392:	f001 8003 	beq.w	40339c <_svfprintf_r+0x1034>
  402396:	2300      	movs	r3, #0
  402398:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  40239c:	9313      	str	r3, [sp, #76]	; 0x4c
  40239e:	9315      	str	r3, [sp, #84]	; 0x54
  4023a0:	9314      	str	r3, [sp, #80]	; 0x50
  4023a2:	9327      	str	r3, [sp, #156]	; 0x9c
  4023a4:	9326      	str	r3, [sp, #152]	; 0x98
  4023a6:	9318      	str	r3, [sp, #96]	; 0x60
  4023a8:	931b      	str	r3, [sp, #108]	; 0x6c
  4023aa:	9309      	str	r3, [sp, #36]	; 0x24
  4023ac:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4023b0:	46c8      	mov	r8, r9
  4023b2:	9316      	str	r3, [sp, #88]	; 0x58
  4023b4:	9317      	str	r3, [sp, #92]	; 0x5c
  4023b6:	f89a 3000 	ldrb.w	r3, [sl]
  4023ba:	4654      	mov	r4, sl
  4023bc:	b1e3      	cbz	r3, 4023f8 <_svfprintf_r+0x90>
  4023be:	2b25      	cmp	r3, #37	; 0x25
  4023c0:	d102      	bne.n	4023c8 <_svfprintf_r+0x60>
  4023c2:	e019      	b.n	4023f8 <_svfprintf_r+0x90>
  4023c4:	2b25      	cmp	r3, #37	; 0x25
  4023c6:	d003      	beq.n	4023d0 <_svfprintf_r+0x68>
  4023c8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4023cc:	2b00      	cmp	r3, #0
  4023ce:	d1f9      	bne.n	4023c4 <_svfprintf_r+0x5c>
  4023d0:	eba4 050a 	sub.w	r5, r4, sl
  4023d4:	b185      	cbz	r5, 4023f8 <_svfprintf_r+0x90>
  4023d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023d8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4023da:	f8c8 a000 	str.w	sl, [r8]
  4023de:	3301      	adds	r3, #1
  4023e0:	442a      	add	r2, r5
  4023e2:	2b07      	cmp	r3, #7
  4023e4:	f8c8 5004 	str.w	r5, [r8, #4]
  4023e8:	9227      	str	r2, [sp, #156]	; 0x9c
  4023ea:	9326      	str	r3, [sp, #152]	; 0x98
  4023ec:	dc7f      	bgt.n	4024ee <_svfprintf_r+0x186>
  4023ee:	f108 0808 	add.w	r8, r8, #8
  4023f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4023f4:	442b      	add	r3, r5
  4023f6:	9309      	str	r3, [sp, #36]	; 0x24
  4023f8:	7823      	ldrb	r3, [r4, #0]
  4023fa:	2b00      	cmp	r3, #0
  4023fc:	d07f      	beq.n	4024fe <_svfprintf_r+0x196>
  4023fe:	2300      	movs	r3, #0
  402400:	461a      	mov	r2, r3
  402402:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402406:	4619      	mov	r1, r3
  402408:	930d      	str	r3, [sp, #52]	; 0x34
  40240a:	469b      	mov	fp, r3
  40240c:	f04f 30ff 	mov.w	r0, #4294967295
  402410:	7863      	ldrb	r3, [r4, #1]
  402412:	900a      	str	r0, [sp, #40]	; 0x28
  402414:	f104 0a01 	add.w	sl, r4, #1
  402418:	f10a 0a01 	add.w	sl, sl, #1
  40241c:	f1a3 0020 	sub.w	r0, r3, #32
  402420:	2858      	cmp	r0, #88	; 0x58
  402422:	f200 83c1 	bhi.w	402ba8 <_svfprintf_r+0x840>
  402426:	e8df f010 	tbh	[pc, r0, lsl #1]
  40242a:	0238      	.short	0x0238
  40242c:	03bf03bf 	.word	0x03bf03bf
  402430:	03bf0240 	.word	0x03bf0240
  402434:	03bf03bf 	.word	0x03bf03bf
  402438:	03bf03bf 	.word	0x03bf03bf
  40243c:	024503bf 	.word	0x024503bf
  402440:	03bf0203 	.word	0x03bf0203
  402444:	026b005d 	.word	0x026b005d
  402448:	028603bf 	.word	0x028603bf
  40244c:	039d039d 	.word	0x039d039d
  402450:	039d039d 	.word	0x039d039d
  402454:	039d039d 	.word	0x039d039d
  402458:	039d039d 	.word	0x039d039d
  40245c:	03bf039d 	.word	0x03bf039d
  402460:	03bf03bf 	.word	0x03bf03bf
  402464:	03bf03bf 	.word	0x03bf03bf
  402468:	03bf03bf 	.word	0x03bf03bf
  40246c:	03bf03bf 	.word	0x03bf03bf
  402470:	033703bf 	.word	0x033703bf
  402474:	03bf0357 	.word	0x03bf0357
  402478:	03bf0357 	.word	0x03bf0357
  40247c:	03bf03bf 	.word	0x03bf03bf
  402480:	039803bf 	.word	0x039803bf
  402484:	03bf03bf 	.word	0x03bf03bf
  402488:	03bf03ad 	.word	0x03bf03ad
  40248c:	03bf03bf 	.word	0x03bf03bf
  402490:	03bf03bf 	.word	0x03bf03bf
  402494:	03bf0259 	.word	0x03bf0259
  402498:	031e03bf 	.word	0x031e03bf
  40249c:	03bf03bf 	.word	0x03bf03bf
  4024a0:	03bf03bf 	.word	0x03bf03bf
  4024a4:	03bf03bf 	.word	0x03bf03bf
  4024a8:	03bf03bf 	.word	0x03bf03bf
  4024ac:	03bf03bf 	.word	0x03bf03bf
  4024b0:	02db02c6 	.word	0x02db02c6
  4024b4:	03570357 	.word	0x03570357
  4024b8:	028b0357 	.word	0x028b0357
  4024bc:	03bf02db 	.word	0x03bf02db
  4024c0:	029003bf 	.word	0x029003bf
  4024c4:	029d03bf 	.word	0x029d03bf
  4024c8:	02b401cc 	.word	0x02b401cc
  4024cc:	03bf0208 	.word	0x03bf0208
  4024d0:	03bf01e1 	.word	0x03bf01e1
  4024d4:	03bf007e 	.word	0x03bf007e
  4024d8:	020d03bf 	.word	0x020d03bf
  4024dc:	980d      	ldr	r0, [sp, #52]	; 0x34
  4024de:	930f      	str	r3, [sp, #60]	; 0x3c
  4024e0:	4240      	negs	r0, r0
  4024e2:	900d      	str	r0, [sp, #52]	; 0x34
  4024e4:	f04b 0b04 	orr.w	fp, fp, #4
  4024e8:	f89a 3000 	ldrb.w	r3, [sl]
  4024ec:	e794      	b.n	402418 <_svfprintf_r+0xb0>
  4024ee:	aa25      	add	r2, sp, #148	; 0x94
  4024f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024f2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024f4:	f003 f892 	bl	40561c <__ssprint_r>
  4024f8:	b940      	cbnz	r0, 40250c <_svfprintf_r+0x1a4>
  4024fa:	46c8      	mov	r8, r9
  4024fc:	e779      	b.n	4023f2 <_svfprintf_r+0x8a>
  4024fe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402500:	b123      	cbz	r3, 40250c <_svfprintf_r+0x1a4>
  402502:	980c      	ldr	r0, [sp, #48]	; 0x30
  402504:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402506:	aa25      	add	r2, sp, #148	; 0x94
  402508:	f003 f888 	bl	40561c <__ssprint_r>
  40250c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40250e:	899b      	ldrh	r3, [r3, #12]
  402510:	f013 0f40 	tst.w	r3, #64	; 0x40
  402514:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402516:	bf18      	it	ne
  402518:	f04f 33ff 	movne.w	r3, #4294967295
  40251c:	9309      	str	r3, [sp, #36]	; 0x24
  40251e:	9809      	ldr	r0, [sp, #36]	; 0x24
  402520:	b043      	add	sp, #268	; 0x10c
  402522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402526:	f01b 0f20 	tst.w	fp, #32
  40252a:	9311      	str	r3, [sp, #68]	; 0x44
  40252c:	f040 81dd 	bne.w	4028ea <_svfprintf_r+0x582>
  402530:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402532:	f01b 0f10 	tst.w	fp, #16
  402536:	4613      	mov	r3, r2
  402538:	f040 856e 	bne.w	403018 <_svfprintf_r+0xcb0>
  40253c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402540:	f000 856a 	beq.w	403018 <_svfprintf_r+0xcb0>
  402544:	8814      	ldrh	r4, [r2, #0]
  402546:	3204      	adds	r2, #4
  402548:	2500      	movs	r5, #0
  40254a:	2301      	movs	r3, #1
  40254c:	920f      	str	r2, [sp, #60]	; 0x3c
  40254e:	2700      	movs	r7, #0
  402550:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402554:	990a      	ldr	r1, [sp, #40]	; 0x28
  402556:	1c4a      	adds	r2, r1, #1
  402558:	f000 8265 	beq.w	402a26 <_svfprintf_r+0x6be>
  40255c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402560:	9207      	str	r2, [sp, #28]
  402562:	ea54 0205 	orrs.w	r2, r4, r5
  402566:	f040 8264 	bne.w	402a32 <_svfprintf_r+0x6ca>
  40256a:	2900      	cmp	r1, #0
  40256c:	f040 843c 	bne.w	402de8 <_svfprintf_r+0xa80>
  402570:	2b00      	cmp	r3, #0
  402572:	f040 84d7 	bne.w	402f24 <_svfprintf_r+0xbbc>
  402576:	f01b 0301 	ands.w	r3, fp, #1
  40257a:	930e      	str	r3, [sp, #56]	; 0x38
  40257c:	f000 8604 	beq.w	403188 <_svfprintf_r+0xe20>
  402580:	ae42      	add	r6, sp, #264	; 0x108
  402582:	2330      	movs	r3, #48	; 0x30
  402584:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402588:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40258a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40258c:	4293      	cmp	r3, r2
  40258e:	bfb8      	it	lt
  402590:	4613      	movlt	r3, r2
  402592:	9308      	str	r3, [sp, #32]
  402594:	2300      	movs	r3, #0
  402596:	9312      	str	r3, [sp, #72]	; 0x48
  402598:	b117      	cbz	r7, 4025a0 <_svfprintf_r+0x238>
  40259a:	9b08      	ldr	r3, [sp, #32]
  40259c:	3301      	adds	r3, #1
  40259e:	9308      	str	r3, [sp, #32]
  4025a0:	9b07      	ldr	r3, [sp, #28]
  4025a2:	f013 0302 	ands.w	r3, r3, #2
  4025a6:	9310      	str	r3, [sp, #64]	; 0x40
  4025a8:	d002      	beq.n	4025b0 <_svfprintf_r+0x248>
  4025aa:	9b08      	ldr	r3, [sp, #32]
  4025ac:	3302      	adds	r3, #2
  4025ae:	9308      	str	r3, [sp, #32]
  4025b0:	9b07      	ldr	r3, [sp, #28]
  4025b2:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4025b6:	f040 830e 	bne.w	402bd6 <_svfprintf_r+0x86e>
  4025ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4025bc:	9a08      	ldr	r2, [sp, #32]
  4025be:	eba3 0b02 	sub.w	fp, r3, r2
  4025c2:	f1bb 0f00 	cmp.w	fp, #0
  4025c6:	f340 8306 	ble.w	402bd6 <_svfprintf_r+0x86e>
  4025ca:	f1bb 0f10 	cmp.w	fp, #16
  4025ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025d0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4025d2:	dd29      	ble.n	402628 <_svfprintf_r+0x2c0>
  4025d4:	4643      	mov	r3, r8
  4025d6:	4621      	mov	r1, r4
  4025d8:	46a8      	mov	r8, r5
  4025da:	2710      	movs	r7, #16
  4025dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4025de:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4025e0:	e006      	b.n	4025f0 <_svfprintf_r+0x288>
  4025e2:	f1ab 0b10 	sub.w	fp, fp, #16
  4025e6:	f1bb 0f10 	cmp.w	fp, #16
  4025ea:	f103 0308 	add.w	r3, r3, #8
  4025ee:	dd18      	ble.n	402622 <_svfprintf_r+0x2ba>
  4025f0:	3201      	adds	r2, #1
  4025f2:	48b7      	ldr	r0, [pc, #732]	; (4028d0 <_svfprintf_r+0x568>)
  4025f4:	9226      	str	r2, [sp, #152]	; 0x98
  4025f6:	3110      	adds	r1, #16
  4025f8:	2a07      	cmp	r2, #7
  4025fa:	9127      	str	r1, [sp, #156]	; 0x9c
  4025fc:	e883 0081 	stmia.w	r3, {r0, r7}
  402600:	ddef      	ble.n	4025e2 <_svfprintf_r+0x27a>
  402602:	aa25      	add	r2, sp, #148	; 0x94
  402604:	4629      	mov	r1, r5
  402606:	4620      	mov	r0, r4
  402608:	f003 f808 	bl	40561c <__ssprint_r>
  40260c:	2800      	cmp	r0, #0
  40260e:	f47f af7d 	bne.w	40250c <_svfprintf_r+0x1a4>
  402612:	f1ab 0b10 	sub.w	fp, fp, #16
  402616:	f1bb 0f10 	cmp.w	fp, #16
  40261a:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40261c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40261e:	464b      	mov	r3, r9
  402620:	dce6      	bgt.n	4025f0 <_svfprintf_r+0x288>
  402622:	4645      	mov	r5, r8
  402624:	460c      	mov	r4, r1
  402626:	4698      	mov	r8, r3
  402628:	3201      	adds	r2, #1
  40262a:	4ba9      	ldr	r3, [pc, #676]	; (4028d0 <_svfprintf_r+0x568>)
  40262c:	9226      	str	r2, [sp, #152]	; 0x98
  40262e:	445c      	add	r4, fp
  402630:	2a07      	cmp	r2, #7
  402632:	9427      	str	r4, [sp, #156]	; 0x9c
  402634:	e888 0808 	stmia.w	r8, {r3, fp}
  402638:	f300 8498 	bgt.w	402f6c <_svfprintf_r+0xc04>
  40263c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402640:	f108 0808 	add.w	r8, r8, #8
  402644:	b177      	cbz	r7, 402664 <_svfprintf_r+0x2fc>
  402646:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402648:	3301      	adds	r3, #1
  40264a:	3401      	adds	r4, #1
  40264c:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402650:	2201      	movs	r2, #1
  402652:	2b07      	cmp	r3, #7
  402654:	9427      	str	r4, [sp, #156]	; 0x9c
  402656:	9326      	str	r3, [sp, #152]	; 0x98
  402658:	e888 0006 	stmia.w	r8, {r1, r2}
  40265c:	f300 83db 	bgt.w	402e16 <_svfprintf_r+0xaae>
  402660:	f108 0808 	add.w	r8, r8, #8
  402664:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402666:	b16b      	cbz	r3, 402684 <_svfprintf_r+0x31c>
  402668:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40266a:	3301      	adds	r3, #1
  40266c:	3402      	adds	r4, #2
  40266e:	a91e      	add	r1, sp, #120	; 0x78
  402670:	2202      	movs	r2, #2
  402672:	2b07      	cmp	r3, #7
  402674:	9427      	str	r4, [sp, #156]	; 0x9c
  402676:	9326      	str	r3, [sp, #152]	; 0x98
  402678:	e888 0006 	stmia.w	r8, {r1, r2}
  40267c:	f300 83d6 	bgt.w	402e2c <_svfprintf_r+0xac4>
  402680:	f108 0808 	add.w	r8, r8, #8
  402684:	2d80      	cmp	r5, #128	; 0x80
  402686:	f000 8315 	beq.w	402cb4 <_svfprintf_r+0x94c>
  40268a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40268c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40268e:	1a9f      	subs	r7, r3, r2
  402690:	2f00      	cmp	r7, #0
  402692:	dd36      	ble.n	402702 <_svfprintf_r+0x39a>
  402694:	2f10      	cmp	r7, #16
  402696:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402698:	4d8e      	ldr	r5, [pc, #568]	; (4028d4 <_svfprintf_r+0x56c>)
  40269a:	dd27      	ble.n	4026ec <_svfprintf_r+0x384>
  40269c:	4642      	mov	r2, r8
  40269e:	4621      	mov	r1, r4
  4026a0:	46b0      	mov	r8, r6
  4026a2:	f04f 0b10 	mov.w	fp, #16
  4026a6:	462e      	mov	r6, r5
  4026a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4026aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4026ac:	e004      	b.n	4026b8 <_svfprintf_r+0x350>
  4026ae:	3f10      	subs	r7, #16
  4026b0:	2f10      	cmp	r7, #16
  4026b2:	f102 0208 	add.w	r2, r2, #8
  4026b6:	dd15      	ble.n	4026e4 <_svfprintf_r+0x37c>
  4026b8:	3301      	adds	r3, #1
  4026ba:	3110      	adds	r1, #16
  4026bc:	2b07      	cmp	r3, #7
  4026be:	9127      	str	r1, [sp, #156]	; 0x9c
  4026c0:	9326      	str	r3, [sp, #152]	; 0x98
  4026c2:	e882 0840 	stmia.w	r2, {r6, fp}
  4026c6:	ddf2      	ble.n	4026ae <_svfprintf_r+0x346>
  4026c8:	aa25      	add	r2, sp, #148	; 0x94
  4026ca:	4629      	mov	r1, r5
  4026cc:	4620      	mov	r0, r4
  4026ce:	f002 ffa5 	bl	40561c <__ssprint_r>
  4026d2:	2800      	cmp	r0, #0
  4026d4:	f47f af1a 	bne.w	40250c <_svfprintf_r+0x1a4>
  4026d8:	3f10      	subs	r7, #16
  4026da:	2f10      	cmp	r7, #16
  4026dc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4026de:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026e0:	464a      	mov	r2, r9
  4026e2:	dce9      	bgt.n	4026b8 <_svfprintf_r+0x350>
  4026e4:	4635      	mov	r5, r6
  4026e6:	460c      	mov	r4, r1
  4026e8:	4646      	mov	r6, r8
  4026ea:	4690      	mov	r8, r2
  4026ec:	3301      	adds	r3, #1
  4026ee:	443c      	add	r4, r7
  4026f0:	2b07      	cmp	r3, #7
  4026f2:	9427      	str	r4, [sp, #156]	; 0x9c
  4026f4:	9326      	str	r3, [sp, #152]	; 0x98
  4026f6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4026fa:	f300 8381 	bgt.w	402e00 <_svfprintf_r+0xa98>
  4026fe:	f108 0808 	add.w	r8, r8, #8
  402702:	9b07      	ldr	r3, [sp, #28]
  402704:	05df      	lsls	r7, r3, #23
  402706:	f100 8268 	bmi.w	402bda <_svfprintf_r+0x872>
  40270a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40270c:	990e      	ldr	r1, [sp, #56]	; 0x38
  40270e:	f8c8 6000 	str.w	r6, [r8]
  402712:	3301      	adds	r3, #1
  402714:	440c      	add	r4, r1
  402716:	2b07      	cmp	r3, #7
  402718:	9427      	str	r4, [sp, #156]	; 0x9c
  40271a:	f8c8 1004 	str.w	r1, [r8, #4]
  40271e:	9326      	str	r3, [sp, #152]	; 0x98
  402720:	f300 834d 	bgt.w	402dbe <_svfprintf_r+0xa56>
  402724:	f108 0808 	add.w	r8, r8, #8
  402728:	9b07      	ldr	r3, [sp, #28]
  40272a:	075b      	lsls	r3, r3, #29
  40272c:	d53a      	bpl.n	4027a4 <_svfprintf_r+0x43c>
  40272e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402730:	9a08      	ldr	r2, [sp, #32]
  402732:	1a9d      	subs	r5, r3, r2
  402734:	2d00      	cmp	r5, #0
  402736:	dd35      	ble.n	4027a4 <_svfprintf_r+0x43c>
  402738:	2d10      	cmp	r5, #16
  40273a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40273c:	dd20      	ble.n	402780 <_svfprintf_r+0x418>
  40273e:	2610      	movs	r6, #16
  402740:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402742:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402746:	e004      	b.n	402752 <_svfprintf_r+0x3ea>
  402748:	3d10      	subs	r5, #16
  40274a:	2d10      	cmp	r5, #16
  40274c:	f108 0808 	add.w	r8, r8, #8
  402750:	dd16      	ble.n	402780 <_svfprintf_r+0x418>
  402752:	3301      	adds	r3, #1
  402754:	4a5e      	ldr	r2, [pc, #376]	; (4028d0 <_svfprintf_r+0x568>)
  402756:	9326      	str	r3, [sp, #152]	; 0x98
  402758:	3410      	adds	r4, #16
  40275a:	2b07      	cmp	r3, #7
  40275c:	9427      	str	r4, [sp, #156]	; 0x9c
  40275e:	e888 0044 	stmia.w	r8, {r2, r6}
  402762:	ddf1      	ble.n	402748 <_svfprintf_r+0x3e0>
  402764:	aa25      	add	r2, sp, #148	; 0x94
  402766:	4659      	mov	r1, fp
  402768:	4638      	mov	r0, r7
  40276a:	f002 ff57 	bl	40561c <__ssprint_r>
  40276e:	2800      	cmp	r0, #0
  402770:	f47f aecc 	bne.w	40250c <_svfprintf_r+0x1a4>
  402774:	3d10      	subs	r5, #16
  402776:	2d10      	cmp	r5, #16
  402778:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40277a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40277c:	46c8      	mov	r8, r9
  40277e:	dce8      	bgt.n	402752 <_svfprintf_r+0x3ea>
  402780:	3301      	adds	r3, #1
  402782:	4a53      	ldr	r2, [pc, #332]	; (4028d0 <_svfprintf_r+0x568>)
  402784:	9326      	str	r3, [sp, #152]	; 0x98
  402786:	442c      	add	r4, r5
  402788:	2b07      	cmp	r3, #7
  40278a:	9427      	str	r4, [sp, #156]	; 0x9c
  40278c:	e888 0024 	stmia.w	r8, {r2, r5}
  402790:	dd08      	ble.n	4027a4 <_svfprintf_r+0x43c>
  402792:	aa25      	add	r2, sp, #148	; 0x94
  402794:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402796:	980c      	ldr	r0, [sp, #48]	; 0x30
  402798:	f002 ff40 	bl	40561c <__ssprint_r>
  40279c:	2800      	cmp	r0, #0
  40279e:	f47f aeb5 	bne.w	40250c <_svfprintf_r+0x1a4>
  4027a2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4027a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4027a8:	9908      	ldr	r1, [sp, #32]
  4027aa:	428a      	cmp	r2, r1
  4027ac:	bfac      	ite	ge
  4027ae:	189b      	addge	r3, r3, r2
  4027b0:	185b      	addlt	r3, r3, r1
  4027b2:	9309      	str	r3, [sp, #36]	; 0x24
  4027b4:	2c00      	cmp	r4, #0
  4027b6:	f040 830d 	bne.w	402dd4 <_svfprintf_r+0xa6c>
  4027ba:	2300      	movs	r3, #0
  4027bc:	9326      	str	r3, [sp, #152]	; 0x98
  4027be:	46c8      	mov	r8, r9
  4027c0:	e5f9      	b.n	4023b6 <_svfprintf_r+0x4e>
  4027c2:	9311      	str	r3, [sp, #68]	; 0x44
  4027c4:	f01b 0320 	ands.w	r3, fp, #32
  4027c8:	f040 81e3 	bne.w	402b92 <_svfprintf_r+0x82a>
  4027cc:	f01b 0210 	ands.w	r2, fp, #16
  4027d0:	f040 842e 	bne.w	403030 <_svfprintf_r+0xcc8>
  4027d4:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4027d8:	f000 842a 	beq.w	403030 <_svfprintf_r+0xcc8>
  4027dc:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4027de:	4613      	mov	r3, r2
  4027e0:	460a      	mov	r2, r1
  4027e2:	3204      	adds	r2, #4
  4027e4:	880c      	ldrh	r4, [r1, #0]
  4027e6:	920f      	str	r2, [sp, #60]	; 0x3c
  4027e8:	2500      	movs	r5, #0
  4027ea:	e6b0      	b.n	40254e <_svfprintf_r+0x1e6>
  4027ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4027ee:	9311      	str	r3, [sp, #68]	; 0x44
  4027f0:	6816      	ldr	r6, [r2, #0]
  4027f2:	2400      	movs	r4, #0
  4027f4:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4027f8:	1d15      	adds	r5, r2, #4
  4027fa:	2e00      	cmp	r6, #0
  4027fc:	f000 86a7 	beq.w	40354e <_svfprintf_r+0x11e6>
  402800:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402802:	1c53      	adds	r3, r2, #1
  402804:	f000 8609 	beq.w	40341a <_svfprintf_r+0x10b2>
  402808:	4621      	mov	r1, r4
  40280a:	4630      	mov	r0, r6
  40280c:	f002 fa88 	bl	404d20 <memchr>
  402810:	2800      	cmp	r0, #0
  402812:	f000 86e1 	beq.w	4035d8 <_svfprintf_r+0x1270>
  402816:	1b83      	subs	r3, r0, r6
  402818:	930e      	str	r3, [sp, #56]	; 0x38
  40281a:	940a      	str	r4, [sp, #40]	; 0x28
  40281c:	950f      	str	r5, [sp, #60]	; 0x3c
  40281e:	f8cd b01c 	str.w	fp, [sp, #28]
  402822:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402826:	9308      	str	r3, [sp, #32]
  402828:	9412      	str	r4, [sp, #72]	; 0x48
  40282a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40282e:	e6b3      	b.n	402598 <_svfprintf_r+0x230>
  402830:	f89a 3000 	ldrb.w	r3, [sl]
  402834:	2201      	movs	r2, #1
  402836:	212b      	movs	r1, #43	; 0x2b
  402838:	e5ee      	b.n	402418 <_svfprintf_r+0xb0>
  40283a:	f04b 0b20 	orr.w	fp, fp, #32
  40283e:	f89a 3000 	ldrb.w	r3, [sl]
  402842:	e5e9      	b.n	402418 <_svfprintf_r+0xb0>
  402844:	9311      	str	r3, [sp, #68]	; 0x44
  402846:	2a00      	cmp	r2, #0
  402848:	f040 8795 	bne.w	403776 <_svfprintf_r+0x140e>
  40284c:	4b22      	ldr	r3, [pc, #136]	; (4028d8 <_svfprintf_r+0x570>)
  40284e:	9318      	str	r3, [sp, #96]	; 0x60
  402850:	f01b 0f20 	tst.w	fp, #32
  402854:	f040 8111 	bne.w	402a7a <_svfprintf_r+0x712>
  402858:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40285a:	f01b 0f10 	tst.w	fp, #16
  40285e:	4613      	mov	r3, r2
  402860:	f040 83e1 	bne.w	403026 <_svfprintf_r+0xcbe>
  402864:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402868:	f000 83dd 	beq.w	403026 <_svfprintf_r+0xcbe>
  40286c:	3304      	adds	r3, #4
  40286e:	8814      	ldrh	r4, [r2, #0]
  402870:	930f      	str	r3, [sp, #60]	; 0x3c
  402872:	2500      	movs	r5, #0
  402874:	f01b 0f01 	tst.w	fp, #1
  402878:	f000 810c 	beq.w	402a94 <_svfprintf_r+0x72c>
  40287c:	ea54 0305 	orrs.w	r3, r4, r5
  402880:	f000 8108 	beq.w	402a94 <_svfprintf_r+0x72c>
  402884:	2330      	movs	r3, #48	; 0x30
  402886:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40288a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40288e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402892:	f04b 0b02 	orr.w	fp, fp, #2
  402896:	2302      	movs	r3, #2
  402898:	e659      	b.n	40254e <_svfprintf_r+0x1e6>
  40289a:	f89a 3000 	ldrb.w	r3, [sl]
  40289e:	2900      	cmp	r1, #0
  4028a0:	f47f adba 	bne.w	402418 <_svfprintf_r+0xb0>
  4028a4:	2201      	movs	r2, #1
  4028a6:	2120      	movs	r1, #32
  4028a8:	e5b6      	b.n	402418 <_svfprintf_r+0xb0>
  4028aa:	f04b 0b01 	orr.w	fp, fp, #1
  4028ae:	f89a 3000 	ldrb.w	r3, [sl]
  4028b2:	e5b1      	b.n	402418 <_svfprintf_r+0xb0>
  4028b4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4028b6:	6823      	ldr	r3, [r4, #0]
  4028b8:	930d      	str	r3, [sp, #52]	; 0x34
  4028ba:	4618      	mov	r0, r3
  4028bc:	2800      	cmp	r0, #0
  4028be:	4623      	mov	r3, r4
  4028c0:	f103 0304 	add.w	r3, r3, #4
  4028c4:	f6ff ae0a 	blt.w	4024dc <_svfprintf_r+0x174>
  4028c8:	930f      	str	r3, [sp, #60]	; 0x3c
  4028ca:	f89a 3000 	ldrb.w	r3, [sl]
  4028ce:	e5a3      	b.n	402418 <_svfprintf_r+0xb0>
  4028d0:	00406d60 	.word	0x00406d60
  4028d4:	00406d70 	.word	0x00406d70
  4028d8:	00406d40 	.word	0x00406d40
  4028dc:	f04b 0b10 	orr.w	fp, fp, #16
  4028e0:	f01b 0f20 	tst.w	fp, #32
  4028e4:	9311      	str	r3, [sp, #68]	; 0x44
  4028e6:	f43f ae23 	beq.w	402530 <_svfprintf_r+0x1c8>
  4028ea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4028ec:	3507      	adds	r5, #7
  4028ee:	f025 0307 	bic.w	r3, r5, #7
  4028f2:	f103 0208 	add.w	r2, r3, #8
  4028f6:	e9d3 4500 	ldrd	r4, r5, [r3]
  4028fa:	920f      	str	r2, [sp, #60]	; 0x3c
  4028fc:	2301      	movs	r3, #1
  4028fe:	e626      	b.n	40254e <_svfprintf_r+0x1e6>
  402900:	f89a 3000 	ldrb.w	r3, [sl]
  402904:	2b2a      	cmp	r3, #42	; 0x2a
  402906:	f10a 0401 	add.w	r4, sl, #1
  40290a:	f000 8727 	beq.w	40375c <_svfprintf_r+0x13f4>
  40290e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402912:	2809      	cmp	r0, #9
  402914:	46a2      	mov	sl, r4
  402916:	f200 86ad 	bhi.w	403674 <_svfprintf_r+0x130c>
  40291a:	2300      	movs	r3, #0
  40291c:	461c      	mov	r4, r3
  40291e:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402922:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402926:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40292a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40292e:	2809      	cmp	r0, #9
  402930:	d9f5      	bls.n	40291e <_svfprintf_r+0x5b6>
  402932:	940a      	str	r4, [sp, #40]	; 0x28
  402934:	e572      	b.n	40241c <_svfprintf_r+0xb4>
  402936:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40293a:	f89a 3000 	ldrb.w	r3, [sl]
  40293e:	e56b      	b.n	402418 <_svfprintf_r+0xb0>
  402940:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402944:	f89a 3000 	ldrb.w	r3, [sl]
  402948:	e566      	b.n	402418 <_svfprintf_r+0xb0>
  40294a:	f89a 3000 	ldrb.w	r3, [sl]
  40294e:	2b6c      	cmp	r3, #108	; 0x6c
  402950:	bf03      	ittte	eq
  402952:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402956:	f04b 0b20 	orreq.w	fp, fp, #32
  40295a:	f10a 0a01 	addeq.w	sl, sl, #1
  40295e:	f04b 0b10 	orrne.w	fp, fp, #16
  402962:	e559      	b.n	402418 <_svfprintf_r+0xb0>
  402964:	2a00      	cmp	r2, #0
  402966:	f040 8711 	bne.w	40378c <_svfprintf_r+0x1424>
  40296a:	f01b 0f20 	tst.w	fp, #32
  40296e:	f040 84f9 	bne.w	403364 <_svfprintf_r+0xffc>
  402972:	f01b 0f10 	tst.w	fp, #16
  402976:	f040 84ac 	bne.w	4032d2 <_svfprintf_r+0xf6a>
  40297a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40297e:	f000 84a8 	beq.w	4032d2 <_svfprintf_r+0xf6a>
  402982:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402984:	6813      	ldr	r3, [r2, #0]
  402986:	3204      	adds	r2, #4
  402988:	920f      	str	r2, [sp, #60]	; 0x3c
  40298a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40298e:	801a      	strh	r2, [r3, #0]
  402990:	e511      	b.n	4023b6 <_svfprintf_r+0x4e>
  402992:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402994:	4bb3      	ldr	r3, [pc, #716]	; (402c64 <_svfprintf_r+0x8fc>)
  402996:	680c      	ldr	r4, [r1, #0]
  402998:	9318      	str	r3, [sp, #96]	; 0x60
  40299a:	2230      	movs	r2, #48	; 0x30
  40299c:	2378      	movs	r3, #120	; 0x78
  40299e:	3104      	adds	r1, #4
  4029a0:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4029a4:	9311      	str	r3, [sp, #68]	; 0x44
  4029a6:	f04b 0b02 	orr.w	fp, fp, #2
  4029aa:	910f      	str	r1, [sp, #60]	; 0x3c
  4029ac:	2500      	movs	r5, #0
  4029ae:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4029b2:	2302      	movs	r3, #2
  4029b4:	e5cb      	b.n	40254e <_svfprintf_r+0x1e6>
  4029b6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4029b8:	9311      	str	r3, [sp, #68]	; 0x44
  4029ba:	680a      	ldr	r2, [r1, #0]
  4029bc:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4029c0:	2300      	movs	r3, #0
  4029c2:	460a      	mov	r2, r1
  4029c4:	461f      	mov	r7, r3
  4029c6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4029ca:	3204      	adds	r2, #4
  4029cc:	2301      	movs	r3, #1
  4029ce:	9308      	str	r3, [sp, #32]
  4029d0:	f8cd b01c 	str.w	fp, [sp, #28]
  4029d4:	970a      	str	r7, [sp, #40]	; 0x28
  4029d6:	9712      	str	r7, [sp, #72]	; 0x48
  4029d8:	920f      	str	r2, [sp, #60]	; 0x3c
  4029da:	930e      	str	r3, [sp, #56]	; 0x38
  4029dc:	ae28      	add	r6, sp, #160	; 0xa0
  4029de:	e5df      	b.n	4025a0 <_svfprintf_r+0x238>
  4029e0:	9311      	str	r3, [sp, #68]	; 0x44
  4029e2:	2a00      	cmp	r2, #0
  4029e4:	f040 86ea 	bne.w	4037bc <_svfprintf_r+0x1454>
  4029e8:	f01b 0f20 	tst.w	fp, #32
  4029ec:	d15d      	bne.n	402aaa <_svfprintf_r+0x742>
  4029ee:	f01b 0f10 	tst.w	fp, #16
  4029f2:	f040 8308 	bne.w	403006 <_svfprintf_r+0xc9e>
  4029f6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4029fa:	f000 8304 	beq.w	403006 <_svfprintf_r+0xc9e>
  4029fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a00:	f9b1 4000 	ldrsh.w	r4, [r1]
  402a04:	3104      	adds	r1, #4
  402a06:	17e5      	asrs	r5, r4, #31
  402a08:	4622      	mov	r2, r4
  402a0a:	462b      	mov	r3, r5
  402a0c:	910f      	str	r1, [sp, #60]	; 0x3c
  402a0e:	2a00      	cmp	r2, #0
  402a10:	f173 0300 	sbcs.w	r3, r3, #0
  402a14:	db58      	blt.n	402ac8 <_svfprintf_r+0x760>
  402a16:	990a      	ldr	r1, [sp, #40]	; 0x28
  402a18:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402a1c:	1c4a      	adds	r2, r1, #1
  402a1e:	f04f 0301 	mov.w	r3, #1
  402a22:	f47f ad9b 	bne.w	40255c <_svfprintf_r+0x1f4>
  402a26:	ea54 0205 	orrs.w	r2, r4, r5
  402a2a:	f000 81df 	beq.w	402dec <_svfprintf_r+0xa84>
  402a2e:	f8cd b01c 	str.w	fp, [sp, #28]
  402a32:	2b01      	cmp	r3, #1
  402a34:	f000 827b 	beq.w	402f2e <_svfprintf_r+0xbc6>
  402a38:	2b02      	cmp	r3, #2
  402a3a:	f040 8206 	bne.w	402e4a <_svfprintf_r+0xae2>
  402a3e:	9818      	ldr	r0, [sp, #96]	; 0x60
  402a40:	464e      	mov	r6, r9
  402a42:	0923      	lsrs	r3, r4, #4
  402a44:	f004 010f 	and.w	r1, r4, #15
  402a48:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402a4c:	092a      	lsrs	r2, r5, #4
  402a4e:	461c      	mov	r4, r3
  402a50:	4615      	mov	r5, r2
  402a52:	5c43      	ldrb	r3, [r0, r1]
  402a54:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402a58:	ea54 0305 	orrs.w	r3, r4, r5
  402a5c:	d1f1      	bne.n	402a42 <_svfprintf_r+0x6da>
  402a5e:	eba9 0306 	sub.w	r3, r9, r6
  402a62:	930e      	str	r3, [sp, #56]	; 0x38
  402a64:	e590      	b.n	402588 <_svfprintf_r+0x220>
  402a66:	9311      	str	r3, [sp, #68]	; 0x44
  402a68:	2a00      	cmp	r2, #0
  402a6a:	f040 86a3 	bne.w	4037b4 <_svfprintf_r+0x144c>
  402a6e:	4b7e      	ldr	r3, [pc, #504]	; (402c68 <_svfprintf_r+0x900>)
  402a70:	9318      	str	r3, [sp, #96]	; 0x60
  402a72:	f01b 0f20 	tst.w	fp, #32
  402a76:	f43f aeef 	beq.w	402858 <_svfprintf_r+0x4f0>
  402a7a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402a7c:	3507      	adds	r5, #7
  402a7e:	f025 0307 	bic.w	r3, r5, #7
  402a82:	f103 0208 	add.w	r2, r3, #8
  402a86:	f01b 0f01 	tst.w	fp, #1
  402a8a:	920f      	str	r2, [sp, #60]	; 0x3c
  402a8c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402a90:	f47f aef4 	bne.w	40287c <_svfprintf_r+0x514>
  402a94:	2302      	movs	r3, #2
  402a96:	e55a      	b.n	40254e <_svfprintf_r+0x1e6>
  402a98:	9311      	str	r3, [sp, #68]	; 0x44
  402a9a:	2a00      	cmp	r2, #0
  402a9c:	f040 8686 	bne.w	4037ac <_svfprintf_r+0x1444>
  402aa0:	f04b 0b10 	orr.w	fp, fp, #16
  402aa4:	f01b 0f20 	tst.w	fp, #32
  402aa8:	d0a1      	beq.n	4029ee <_svfprintf_r+0x686>
  402aaa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402aac:	3507      	adds	r5, #7
  402aae:	f025 0507 	bic.w	r5, r5, #7
  402ab2:	e9d5 2300 	ldrd	r2, r3, [r5]
  402ab6:	2a00      	cmp	r2, #0
  402ab8:	f105 0108 	add.w	r1, r5, #8
  402abc:	461d      	mov	r5, r3
  402abe:	f173 0300 	sbcs.w	r3, r3, #0
  402ac2:	910f      	str	r1, [sp, #60]	; 0x3c
  402ac4:	4614      	mov	r4, r2
  402ac6:	daa6      	bge.n	402a16 <_svfprintf_r+0x6ae>
  402ac8:	272d      	movs	r7, #45	; 0x2d
  402aca:	4264      	negs	r4, r4
  402acc:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402ad0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402ad4:	2301      	movs	r3, #1
  402ad6:	e53d      	b.n	402554 <_svfprintf_r+0x1ec>
  402ad8:	9311      	str	r3, [sp, #68]	; 0x44
  402ada:	2a00      	cmp	r2, #0
  402adc:	f040 8662 	bne.w	4037a4 <_svfprintf_r+0x143c>
  402ae0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402ae2:	3507      	adds	r5, #7
  402ae4:	f025 0307 	bic.w	r3, r5, #7
  402ae8:	f103 0208 	add.w	r2, r3, #8
  402aec:	920f      	str	r2, [sp, #60]	; 0x3c
  402aee:	681a      	ldr	r2, [r3, #0]
  402af0:	9215      	str	r2, [sp, #84]	; 0x54
  402af2:	685b      	ldr	r3, [r3, #4]
  402af4:	9314      	str	r3, [sp, #80]	; 0x50
  402af6:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402af8:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402afa:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402afe:	4628      	mov	r0, r5
  402b00:	4621      	mov	r1, r4
  402b02:	f04f 32ff 	mov.w	r2, #4294967295
  402b06:	4b59      	ldr	r3, [pc, #356]	; (402c6c <_svfprintf_r+0x904>)
  402b08:	f003 f9fc 	bl	405f04 <__aeabi_dcmpun>
  402b0c:	2800      	cmp	r0, #0
  402b0e:	f040 834a 	bne.w	4031a6 <_svfprintf_r+0xe3e>
  402b12:	4628      	mov	r0, r5
  402b14:	4621      	mov	r1, r4
  402b16:	f04f 32ff 	mov.w	r2, #4294967295
  402b1a:	4b54      	ldr	r3, [pc, #336]	; (402c6c <_svfprintf_r+0x904>)
  402b1c:	f7ff fb6a 	bl	4021f4 <__aeabi_dcmple>
  402b20:	2800      	cmp	r0, #0
  402b22:	f040 8340 	bne.w	4031a6 <_svfprintf_r+0xe3e>
  402b26:	a815      	add	r0, sp, #84	; 0x54
  402b28:	c80d      	ldmia	r0, {r0, r2, r3}
  402b2a:	9914      	ldr	r1, [sp, #80]	; 0x50
  402b2c:	f7ff fb58 	bl	4021e0 <__aeabi_dcmplt>
  402b30:	2800      	cmp	r0, #0
  402b32:	f040 8530 	bne.w	403596 <_svfprintf_r+0x122e>
  402b36:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402b3a:	4e4d      	ldr	r6, [pc, #308]	; (402c70 <_svfprintf_r+0x908>)
  402b3c:	4b4d      	ldr	r3, [pc, #308]	; (402c74 <_svfprintf_r+0x90c>)
  402b3e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402b42:	9007      	str	r0, [sp, #28]
  402b44:	9811      	ldr	r0, [sp, #68]	; 0x44
  402b46:	2203      	movs	r2, #3
  402b48:	2100      	movs	r1, #0
  402b4a:	9208      	str	r2, [sp, #32]
  402b4c:	910a      	str	r1, [sp, #40]	; 0x28
  402b4e:	2847      	cmp	r0, #71	; 0x47
  402b50:	bfd8      	it	le
  402b52:	461e      	movle	r6, r3
  402b54:	920e      	str	r2, [sp, #56]	; 0x38
  402b56:	9112      	str	r1, [sp, #72]	; 0x48
  402b58:	e51e      	b.n	402598 <_svfprintf_r+0x230>
  402b5a:	f04b 0b08 	orr.w	fp, fp, #8
  402b5e:	f89a 3000 	ldrb.w	r3, [sl]
  402b62:	e459      	b.n	402418 <_svfprintf_r+0xb0>
  402b64:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402b68:	2300      	movs	r3, #0
  402b6a:	461c      	mov	r4, r3
  402b6c:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402b70:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402b74:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402b78:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402b7c:	2809      	cmp	r0, #9
  402b7e:	d9f5      	bls.n	402b6c <_svfprintf_r+0x804>
  402b80:	940d      	str	r4, [sp, #52]	; 0x34
  402b82:	e44b      	b.n	40241c <_svfprintf_r+0xb4>
  402b84:	f04b 0b10 	orr.w	fp, fp, #16
  402b88:	9311      	str	r3, [sp, #68]	; 0x44
  402b8a:	f01b 0320 	ands.w	r3, fp, #32
  402b8e:	f43f ae1d 	beq.w	4027cc <_svfprintf_r+0x464>
  402b92:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b94:	3507      	adds	r5, #7
  402b96:	f025 0307 	bic.w	r3, r5, #7
  402b9a:	f103 0208 	add.w	r2, r3, #8
  402b9e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402ba2:	920f      	str	r2, [sp, #60]	; 0x3c
  402ba4:	2300      	movs	r3, #0
  402ba6:	e4d2      	b.n	40254e <_svfprintf_r+0x1e6>
  402ba8:	9311      	str	r3, [sp, #68]	; 0x44
  402baa:	2a00      	cmp	r2, #0
  402bac:	f040 85e7 	bne.w	40377e <_svfprintf_r+0x1416>
  402bb0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402bb2:	2a00      	cmp	r2, #0
  402bb4:	f43f aca3 	beq.w	4024fe <_svfprintf_r+0x196>
  402bb8:	2300      	movs	r3, #0
  402bba:	2101      	movs	r1, #1
  402bbc:	461f      	mov	r7, r3
  402bbe:	9108      	str	r1, [sp, #32]
  402bc0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402bc4:	f8cd b01c 	str.w	fp, [sp, #28]
  402bc8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402bcc:	930a      	str	r3, [sp, #40]	; 0x28
  402bce:	9312      	str	r3, [sp, #72]	; 0x48
  402bd0:	910e      	str	r1, [sp, #56]	; 0x38
  402bd2:	ae28      	add	r6, sp, #160	; 0xa0
  402bd4:	e4e4      	b.n	4025a0 <_svfprintf_r+0x238>
  402bd6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bd8:	e534      	b.n	402644 <_svfprintf_r+0x2dc>
  402bda:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402bdc:	2b65      	cmp	r3, #101	; 0x65
  402bde:	f340 80a7 	ble.w	402d30 <_svfprintf_r+0x9c8>
  402be2:	a815      	add	r0, sp, #84	; 0x54
  402be4:	c80d      	ldmia	r0, {r0, r2, r3}
  402be6:	9914      	ldr	r1, [sp, #80]	; 0x50
  402be8:	f7ff faf0 	bl	4021cc <__aeabi_dcmpeq>
  402bec:	2800      	cmp	r0, #0
  402bee:	f000 8150 	beq.w	402e92 <_svfprintf_r+0xb2a>
  402bf2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bf4:	4a20      	ldr	r2, [pc, #128]	; (402c78 <_svfprintf_r+0x910>)
  402bf6:	f8c8 2000 	str.w	r2, [r8]
  402bfa:	3301      	adds	r3, #1
  402bfc:	3401      	adds	r4, #1
  402bfe:	2201      	movs	r2, #1
  402c00:	2b07      	cmp	r3, #7
  402c02:	9427      	str	r4, [sp, #156]	; 0x9c
  402c04:	9326      	str	r3, [sp, #152]	; 0x98
  402c06:	f8c8 2004 	str.w	r2, [r8, #4]
  402c0a:	f300 836a 	bgt.w	4032e2 <_svfprintf_r+0xf7a>
  402c0e:	f108 0808 	add.w	r8, r8, #8
  402c12:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402c16:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c18:	4293      	cmp	r3, r2
  402c1a:	db03      	blt.n	402c24 <_svfprintf_r+0x8bc>
  402c1c:	9b07      	ldr	r3, [sp, #28]
  402c1e:	07dd      	lsls	r5, r3, #31
  402c20:	f57f ad82 	bpl.w	402728 <_svfprintf_r+0x3c0>
  402c24:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c26:	9919      	ldr	r1, [sp, #100]	; 0x64
  402c28:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402c2a:	f8c8 2000 	str.w	r2, [r8]
  402c2e:	3301      	adds	r3, #1
  402c30:	440c      	add	r4, r1
  402c32:	2b07      	cmp	r3, #7
  402c34:	f8c8 1004 	str.w	r1, [r8, #4]
  402c38:	9427      	str	r4, [sp, #156]	; 0x9c
  402c3a:	9326      	str	r3, [sp, #152]	; 0x98
  402c3c:	f300 839e 	bgt.w	40337c <_svfprintf_r+0x1014>
  402c40:	f108 0808 	add.w	r8, r8, #8
  402c44:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c46:	1e5e      	subs	r6, r3, #1
  402c48:	2e00      	cmp	r6, #0
  402c4a:	f77f ad6d 	ble.w	402728 <_svfprintf_r+0x3c0>
  402c4e:	2e10      	cmp	r6, #16
  402c50:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c52:	4d0a      	ldr	r5, [pc, #40]	; (402c7c <_svfprintf_r+0x914>)
  402c54:	f340 81f5 	ble.w	403042 <_svfprintf_r+0xcda>
  402c58:	4622      	mov	r2, r4
  402c5a:	2710      	movs	r7, #16
  402c5c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402c60:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402c62:	e013      	b.n	402c8c <_svfprintf_r+0x924>
  402c64:	00406d40 	.word	0x00406d40
  402c68:	00406d2c 	.word	0x00406d2c
  402c6c:	7fefffff 	.word	0x7fefffff
  402c70:	00406d20 	.word	0x00406d20
  402c74:	00406d1c 	.word	0x00406d1c
  402c78:	00406d5c 	.word	0x00406d5c
  402c7c:	00406d70 	.word	0x00406d70
  402c80:	f108 0808 	add.w	r8, r8, #8
  402c84:	3e10      	subs	r6, #16
  402c86:	2e10      	cmp	r6, #16
  402c88:	f340 81da 	ble.w	403040 <_svfprintf_r+0xcd8>
  402c8c:	3301      	adds	r3, #1
  402c8e:	3210      	adds	r2, #16
  402c90:	2b07      	cmp	r3, #7
  402c92:	9227      	str	r2, [sp, #156]	; 0x9c
  402c94:	9326      	str	r3, [sp, #152]	; 0x98
  402c96:	e888 00a0 	stmia.w	r8, {r5, r7}
  402c9a:	ddf1      	ble.n	402c80 <_svfprintf_r+0x918>
  402c9c:	aa25      	add	r2, sp, #148	; 0x94
  402c9e:	4621      	mov	r1, r4
  402ca0:	4658      	mov	r0, fp
  402ca2:	f002 fcbb 	bl	40561c <__ssprint_r>
  402ca6:	2800      	cmp	r0, #0
  402ca8:	f47f ac30 	bne.w	40250c <_svfprintf_r+0x1a4>
  402cac:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402cae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cb0:	46c8      	mov	r8, r9
  402cb2:	e7e7      	b.n	402c84 <_svfprintf_r+0x91c>
  402cb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402cb6:	9a08      	ldr	r2, [sp, #32]
  402cb8:	1a9f      	subs	r7, r3, r2
  402cba:	2f00      	cmp	r7, #0
  402cbc:	f77f ace5 	ble.w	40268a <_svfprintf_r+0x322>
  402cc0:	2f10      	cmp	r7, #16
  402cc2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cc4:	4db6      	ldr	r5, [pc, #728]	; (402fa0 <_svfprintf_r+0xc38>)
  402cc6:	dd27      	ble.n	402d18 <_svfprintf_r+0x9b0>
  402cc8:	4642      	mov	r2, r8
  402cca:	4621      	mov	r1, r4
  402ccc:	46b0      	mov	r8, r6
  402cce:	f04f 0b10 	mov.w	fp, #16
  402cd2:	462e      	mov	r6, r5
  402cd4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402cd6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402cd8:	e004      	b.n	402ce4 <_svfprintf_r+0x97c>
  402cda:	3f10      	subs	r7, #16
  402cdc:	2f10      	cmp	r7, #16
  402cde:	f102 0208 	add.w	r2, r2, #8
  402ce2:	dd15      	ble.n	402d10 <_svfprintf_r+0x9a8>
  402ce4:	3301      	adds	r3, #1
  402ce6:	3110      	adds	r1, #16
  402ce8:	2b07      	cmp	r3, #7
  402cea:	9127      	str	r1, [sp, #156]	; 0x9c
  402cec:	9326      	str	r3, [sp, #152]	; 0x98
  402cee:	e882 0840 	stmia.w	r2, {r6, fp}
  402cf2:	ddf2      	ble.n	402cda <_svfprintf_r+0x972>
  402cf4:	aa25      	add	r2, sp, #148	; 0x94
  402cf6:	4629      	mov	r1, r5
  402cf8:	4620      	mov	r0, r4
  402cfa:	f002 fc8f 	bl	40561c <__ssprint_r>
  402cfe:	2800      	cmp	r0, #0
  402d00:	f47f ac04 	bne.w	40250c <_svfprintf_r+0x1a4>
  402d04:	3f10      	subs	r7, #16
  402d06:	2f10      	cmp	r7, #16
  402d08:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402d0a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d0c:	464a      	mov	r2, r9
  402d0e:	dce9      	bgt.n	402ce4 <_svfprintf_r+0x97c>
  402d10:	4635      	mov	r5, r6
  402d12:	460c      	mov	r4, r1
  402d14:	4646      	mov	r6, r8
  402d16:	4690      	mov	r8, r2
  402d18:	3301      	adds	r3, #1
  402d1a:	443c      	add	r4, r7
  402d1c:	2b07      	cmp	r3, #7
  402d1e:	9427      	str	r4, [sp, #156]	; 0x9c
  402d20:	9326      	str	r3, [sp, #152]	; 0x98
  402d22:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d26:	f300 8232 	bgt.w	40318e <_svfprintf_r+0xe26>
  402d2a:	f108 0808 	add.w	r8, r8, #8
  402d2e:	e4ac      	b.n	40268a <_svfprintf_r+0x322>
  402d30:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d32:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402d34:	2b01      	cmp	r3, #1
  402d36:	f340 81fe 	ble.w	403136 <_svfprintf_r+0xdce>
  402d3a:	3701      	adds	r7, #1
  402d3c:	3401      	adds	r4, #1
  402d3e:	2301      	movs	r3, #1
  402d40:	2f07      	cmp	r7, #7
  402d42:	9427      	str	r4, [sp, #156]	; 0x9c
  402d44:	9726      	str	r7, [sp, #152]	; 0x98
  402d46:	f8c8 6000 	str.w	r6, [r8]
  402d4a:	f8c8 3004 	str.w	r3, [r8, #4]
  402d4e:	f300 8203 	bgt.w	403158 <_svfprintf_r+0xdf0>
  402d52:	f108 0808 	add.w	r8, r8, #8
  402d56:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402d58:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402d5a:	f8c8 3000 	str.w	r3, [r8]
  402d5e:	3701      	adds	r7, #1
  402d60:	4414      	add	r4, r2
  402d62:	2f07      	cmp	r7, #7
  402d64:	9427      	str	r4, [sp, #156]	; 0x9c
  402d66:	9726      	str	r7, [sp, #152]	; 0x98
  402d68:	f8c8 2004 	str.w	r2, [r8, #4]
  402d6c:	f300 8200 	bgt.w	403170 <_svfprintf_r+0xe08>
  402d70:	f108 0808 	add.w	r8, r8, #8
  402d74:	a815      	add	r0, sp, #84	; 0x54
  402d76:	c80d      	ldmia	r0, {r0, r2, r3}
  402d78:	9914      	ldr	r1, [sp, #80]	; 0x50
  402d7a:	f7ff fa27 	bl	4021cc <__aeabi_dcmpeq>
  402d7e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d80:	2800      	cmp	r0, #0
  402d82:	f040 8101 	bne.w	402f88 <_svfprintf_r+0xc20>
  402d86:	3b01      	subs	r3, #1
  402d88:	3701      	adds	r7, #1
  402d8a:	3601      	adds	r6, #1
  402d8c:	441c      	add	r4, r3
  402d8e:	2f07      	cmp	r7, #7
  402d90:	9726      	str	r7, [sp, #152]	; 0x98
  402d92:	9427      	str	r4, [sp, #156]	; 0x9c
  402d94:	f8c8 6000 	str.w	r6, [r8]
  402d98:	f8c8 3004 	str.w	r3, [r8, #4]
  402d9c:	f300 8127 	bgt.w	402fee <_svfprintf_r+0xc86>
  402da0:	f108 0808 	add.w	r8, r8, #8
  402da4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402da6:	f8c8 2004 	str.w	r2, [r8, #4]
  402daa:	3701      	adds	r7, #1
  402dac:	4414      	add	r4, r2
  402dae:	ab21      	add	r3, sp, #132	; 0x84
  402db0:	2f07      	cmp	r7, #7
  402db2:	9427      	str	r4, [sp, #156]	; 0x9c
  402db4:	9726      	str	r7, [sp, #152]	; 0x98
  402db6:	f8c8 3000 	str.w	r3, [r8]
  402dba:	f77f acb3 	ble.w	402724 <_svfprintf_r+0x3bc>
  402dbe:	aa25      	add	r2, sp, #148	; 0x94
  402dc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dc2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dc4:	f002 fc2a 	bl	40561c <__ssprint_r>
  402dc8:	2800      	cmp	r0, #0
  402dca:	f47f ab9f 	bne.w	40250c <_svfprintf_r+0x1a4>
  402dce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dd0:	46c8      	mov	r8, r9
  402dd2:	e4a9      	b.n	402728 <_svfprintf_r+0x3c0>
  402dd4:	aa25      	add	r2, sp, #148	; 0x94
  402dd6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dd8:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dda:	f002 fc1f 	bl	40561c <__ssprint_r>
  402dde:	2800      	cmp	r0, #0
  402de0:	f43f aceb 	beq.w	4027ba <_svfprintf_r+0x452>
  402de4:	f7ff bb92 	b.w	40250c <_svfprintf_r+0x1a4>
  402de8:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402dec:	2b01      	cmp	r3, #1
  402dee:	f000 8134 	beq.w	40305a <_svfprintf_r+0xcf2>
  402df2:	2b02      	cmp	r3, #2
  402df4:	d125      	bne.n	402e42 <_svfprintf_r+0xada>
  402df6:	f8cd b01c 	str.w	fp, [sp, #28]
  402dfa:	2400      	movs	r4, #0
  402dfc:	2500      	movs	r5, #0
  402dfe:	e61e      	b.n	402a3e <_svfprintf_r+0x6d6>
  402e00:	aa25      	add	r2, sp, #148	; 0x94
  402e02:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e04:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e06:	f002 fc09 	bl	40561c <__ssprint_r>
  402e0a:	2800      	cmp	r0, #0
  402e0c:	f47f ab7e 	bne.w	40250c <_svfprintf_r+0x1a4>
  402e10:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e12:	46c8      	mov	r8, r9
  402e14:	e475      	b.n	402702 <_svfprintf_r+0x39a>
  402e16:	aa25      	add	r2, sp, #148	; 0x94
  402e18:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e1a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e1c:	f002 fbfe 	bl	40561c <__ssprint_r>
  402e20:	2800      	cmp	r0, #0
  402e22:	f47f ab73 	bne.w	40250c <_svfprintf_r+0x1a4>
  402e26:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e28:	46c8      	mov	r8, r9
  402e2a:	e41b      	b.n	402664 <_svfprintf_r+0x2fc>
  402e2c:	aa25      	add	r2, sp, #148	; 0x94
  402e2e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e30:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e32:	f002 fbf3 	bl	40561c <__ssprint_r>
  402e36:	2800      	cmp	r0, #0
  402e38:	f47f ab68 	bne.w	40250c <_svfprintf_r+0x1a4>
  402e3c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e3e:	46c8      	mov	r8, r9
  402e40:	e420      	b.n	402684 <_svfprintf_r+0x31c>
  402e42:	f8cd b01c 	str.w	fp, [sp, #28]
  402e46:	2400      	movs	r4, #0
  402e48:	2500      	movs	r5, #0
  402e4a:	4649      	mov	r1, r9
  402e4c:	e000      	b.n	402e50 <_svfprintf_r+0xae8>
  402e4e:	4631      	mov	r1, r6
  402e50:	08e2      	lsrs	r2, r4, #3
  402e52:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402e56:	08e8      	lsrs	r0, r5, #3
  402e58:	f004 0307 	and.w	r3, r4, #7
  402e5c:	4605      	mov	r5, r0
  402e5e:	4614      	mov	r4, r2
  402e60:	3330      	adds	r3, #48	; 0x30
  402e62:	ea54 0205 	orrs.w	r2, r4, r5
  402e66:	f801 3c01 	strb.w	r3, [r1, #-1]
  402e6a:	f101 36ff 	add.w	r6, r1, #4294967295
  402e6e:	d1ee      	bne.n	402e4e <_svfprintf_r+0xae6>
  402e70:	9a07      	ldr	r2, [sp, #28]
  402e72:	07d2      	lsls	r2, r2, #31
  402e74:	f57f adf3 	bpl.w	402a5e <_svfprintf_r+0x6f6>
  402e78:	2b30      	cmp	r3, #48	; 0x30
  402e7a:	f43f adf0 	beq.w	402a5e <_svfprintf_r+0x6f6>
  402e7e:	3902      	subs	r1, #2
  402e80:	2330      	movs	r3, #48	; 0x30
  402e82:	f806 3c01 	strb.w	r3, [r6, #-1]
  402e86:	eba9 0301 	sub.w	r3, r9, r1
  402e8a:	930e      	str	r3, [sp, #56]	; 0x38
  402e8c:	460e      	mov	r6, r1
  402e8e:	f7ff bb7b 	b.w	402588 <_svfprintf_r+0x220>
  402e92:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402e94:	2900      	cmp	r1, #0
  402e96:	f340 822e 	ble.w	4032f6 <_svfprintf_r+0xf8e>
  402e9a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e9c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402e9e:	4293      	cmp	r3, r2
  402ea0:	bfa8      	it	ge
  402ea2:	4613      	movge	r3, r2
  402ea4:	2b00      	cmp	r3, #0
  402ea6:	461f      	mov	r7, r3
  402ea8:	dd0d      	ble.n	402ec6 <_svfprintf_r+0xb5e>
  402eaa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402eac:	f8c8 6000 	str.w	r6, [r8]
  402eb0:	3301      	adds	r3, #1
  402eb2:	443c      	add	r4, r7
  402eb4:	2b07      	cmp	r3, #7
  402eb6:	9427      	str	r4, [sp, #156]	; 0x9c
  402eb8:	f8c8 7004 	str.w	r7, [r8, #4]
  402ebc:	9326      	str	r3, [sp, #152]	; 0x98
  402ebe:	f300 831f 	bgt.w	403500 <_svfprintf_r+0x1198>
  402ec2:	f108 0808 	add.w	r8, r8, #8
  402ec6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ec8:	2f00      	cmp	r7, #0
  402eca:	bfa8      	it	ge
  402ecc:	1bdb      	subge	r3, r3, r7
  402ece:	2b00      	cmp	r3, #0
  402ed0:	461f      	mov	r7, r3
  402ed2:	f340 80d6 	ble.w	403082 <_svfprintf_r+0xd1a>
  402ed6:	2f10      	cmp	r7, #16
  402ed8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402eda:	4d31      	ldr	r5, [pc, #196]	; (402fa0 <_svfprintf_r+0xc38>)
  402edc:	f340 81ed 	ble.w	4032ba <_svfprintf_r+0xf52>
  402ee0:	4642      	mov	r2, r8
  402ee2:	4621      	mov	r1, r4
  402ee4:	46b0      	mov	r8, r6
  402ee6:	f04f 0b10 	mov.w	fp, #16
  402eea:	462e      	mov	r6, r5
  402eec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402eee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402ef0:	e004      	b.n	402efc <_svfprintf_r+0xb94>
  402ef2:	3208      	adds	r2, #8
  402ef4:	3f10      	subs	r7, #16
  402ef6:	2f10      	cmp	r7, #16
  402ef8:	f340 81db 	ble.w	4032b2 <_svfprintf_r+0xf4a>
  402efc:	3301      	adds	r3, #1
  402efe:	3110      	adds	r1, #16
  402f00:	2b07      	cmp	r3, #7
  402f02:	9127      	str	r1, [sp, #156]	; 0x9c
  402f04:	9326      	str	r3, [sp, #152]	; 0x98
  402f06:	e882 0840 	stmia.w	r2, {r6, fp}
  402f0a:	ddf2      	ble.n	402ef2 <_svfprintf_r+0xb8a>
  402f0c:	aa25      	add	r2, sp, #148	; 0x94
  402f0e:	4629      	mov	r1, r5
  402f10:	4620      	mov	r0, r4
  402f12:	f002 fb83 	bl	40561c <__ssprint_r>
  402f16:	2800      	cmp	r0, #0
  402f18:	f47f aaf8 	bne.w	40250c <_svfprintf_r+0x1a4>
  402f1c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402f1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f20:	464a      	mov	r2, r9
  402f22:	e7e7      	b.n	402ef4 <_svfprintf_r+0xb8c>
  402f24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f26:	930e      	str	r3, [sp, #56]	; 0x38
  402f28:	464e      	mov	r6, r9
  402f2a:	f7ff bb2d 	b.w	402588 <_svfprintf_r+0x220>
  402f2e:	2d00      	cmp	r5, #0
  402f30:	bf08      	it	eq
  402f32:	2c0a      	cmpeq	r4, #10
  402f34:	f0c0 808f 	bcc.w	403056 <_svfprintf_r+0xcee>
  402f38:	464e      	mov	r6, r9
  402f3a:	4620      	mov	r0, r4
  402f3c:	4629      	mov	r1, r5
  402f3e:	220a      	movs	r2, #10
  402f40:	2300      	movs	r3, #0
  402f42:	f003 f81d 	bl	405f80 <__aeabi_uldivmod>
  402f46:	3230      	adds	r2, #48	; 0x30
  402f48:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402f4c:	4620      	mov	r0, r4
  402f4e:	4629      	mov	r1, r5
  402f50:	2300      	movs	r3, #0
  402f52:	220a      	movs	r2, #10
  402f54:	f003 f814 	bl	405f80 <__aeabi_uldivmod>
  402f58:	4604      	mov	r4, r0
  402f5a:	460d      	mov	r5, r1
  402f5c:	ea54 0305 	orrs.w	r3, r4, r5
  402f60:	d1eb      	bne.n	402f3a <_svfprintf_r+0xbd2>
  402f62:	eba9 0306 	sub.w	r3, r9, r6
  402f66:	930e      	str	r3, [sp, #56]	; 0x38
  402f68:	f7ff bb0e 	b.w	402588 <_svfprintf_r+0x220>
  402f6c:	aa25      	add	r2, sp, #148	; 0x94
  402f6e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f70:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f72:	f002 fb53 	bl	40561c <__ssprint_r>
  402f76:	2800      	cmp	r0, #0
  402f78:	f47f aac8 	bne.w	40250c <_svfprintf_r+0x1a4>
  402f7c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402f80:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f82:	46c8      	mov	r8, r9
  402f84:	f7ff bb5e 	b.w	402644 <_svfprintf_r+0x2dc>
  402f88:	1e5e      	subs	r6, r3, #1
  402f8a:	2e00      	cmp	r6, #0
  402f8c:	f77f af0a 	ble.w	402da4 <_svfprintf_r+0xa3c>
  402f90:	2e10      	cmp	r6, #16
  402f92:	4d03      	ldr	r5, [pc, #12]	; (402fa0 <_svfprintf_r+0xc38>)
  402f94:	dd22      	ble.n	402fdc <_svfprintf_r+0xc74>
  402f96:	4622      	mov	r2, r4
  402f98:	f04f 0b10 	mov.w	fp, #16
  402f9c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402f9e:	e006      	b.n	402fae <_svfprintf_r+0xc46>
  402fa0:	00406d70 	.word	0x00406d70
  402fa4:	3e10      	subs	r6, #16
  402fa6:	2e10      	cmp	r6, #16
  402fa8:	f108 0808 	add.w	r8, r8, #8
  402fac:	dd15      	ble.n	402fda <_svfprintf_r+0xc72>
  402fae:	3701      	adds	r7, #1
  402fb0:	3210      	adds	r2, #16
  402fb2:	2f07      	cmp	r7, #7
  402fb4:	9227      	str	r2, [sp, #156]	; 0x9c
  402fb6:	9726      	str	r7, [sp, #152]	; 0x98
  402fb8:	e888 0820 	stmia.w	r8, {r5, fp}
  402fbc:	ddf2      	ble.n	402fa4 <_svfprintf_r+0xc3c>
  402fbe:	aa25      	add	r2, sp, #148	; 0x94
  402fc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fc2:	4620      	mov	r0, r4
  402fc4:	f002 fb2a 	bl	40561c <__ssprint_r>
  402fc8:	2800      	cmp	r0, #0
  402fca:	f47f aa9f 	bne.w	40250c <_svfprintf_r+0x1a4>
  402fce:	3e10      	subs	r6, #16
  402fd0:	2e10      	cmp	r6, #16
  402fd2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402fd4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402fd6:	46c8      	mov	r8, r9
  402fd8:	dce9      	bgt.n	402fae <_svfprintf_r+0xc46>
  402fda:	4614      	mov	r4, r2
  402fdc:	3701      	adds	r7, #1
  402fde:	4434      	add	r4, r6
  402fe0:	2f07      	cmp	r7, #7
  402fe2:	9427      	str	r4, [sp, #156]	; 0x9c
  402fe4:	9726      	str	r7, [sp, #152]	; 0x98
  402fe6:	e888 0060 	stmia.w	r8, {r5, r6}
  402fea:	f77f aed9 	ble.w	402da0 <_svfprintf_r+0xa38>
  402fee:	aa25      	add	r2, sp, #148	; 0x94
  402ff0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ff2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ff4:	f002 fb12 	bl	40561c <__ssprint_r>
  402ff8:	2800      	cmp	r0, #0
  402ffa:	f47f aa87 	bne.w	40250c <_svfprintf_r+0x1a4>
  402ffe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403000:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403002:	46c8      	mov	r8, r9
  403004:	e6ce      	b.n	402da4 <_svfprintf_r+0xa3c>
  403006:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403008:	6814      	ldr	r4, [r2, #0]
  40300a:	4613      	mov	r3, r2
  40300c:	3304      	adds	r3, #4
  40300e:	17e5      	asrs	r5, r4, #31
  403010:	930f      	str	r3, [sp, #60]	; 0x3c
  403012:	4622      	mov	r2, r4
  403014:	462b      	mov	r3, r5
  403016:	e4fa      	b.n	402a0e <_svfprintf_r+0x6a6>
  403018:	3204      	adds	r2, #4
  40301a:	681c      	ldr	r4, [r3, #0]
  40301c:	920f      	str	r2, [sp, #60]	; 0x3c
  40301e:	2301      	movs	r3, #1
  403020:	2500      	movs	r5, #0
  403022:	f7ff ba94 	b.w	40254e <_svfprintf_r+0x1e6>
  403026:	681c      	ldr	r4, [r3, #0]
  403028:	3304      	adds	r3, #4
  40302a:	930f      	str	r3, [sp, #60]	; 0x3c
  40302c:	2500      	movs	r5, #0
  40302e:	e421      	b.n	402874 <_svfprintf_r+0x50c>
  403030:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403032:	460a      	mov	r2, r1
  403034:	3204      	adds	r2, #4
  403036:	680c      	ldr	r4, [r1, #0]
  403038:	920f      	str	r2, [sp, #60]	; 0x3c
  40303a:	2500      	movs	r5, #0
  40303c:	f7ff ba87 	b.w	40254e <_svfprintf_r+0x1e6>
  403040:	4614      	mov	r4, r2
  403042:	3301      	adds	r3, #1
  403044:	4434      	add	r4, r6
  403046:	2b07      	cmp	r3, #7
  403048:	9427      	str	r4, [sp, #156]	; 0x9c
  40304a:	9326      	str	r3, [sp, #152]	; 0x98
  40304c:	e888 0060 	stmia.w	r8, {r5, r6}
  403050:	f77f ab68 	ble.w	402724 <_svfprintf_r+0x3bc>
  403054:	e6b3      	b.n	402dbe <_svfprintf_r+0xa56>
  403056:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40305a:	f8cd b01c 	str.w	fp, [sp, #28]
  40305e:	ae42      	add	r6, sp, #264	; 0x108
  403060:	3430      	adds	r4, #48	; 0x30
  403062:	2301      	movs	r3, #1
  403064:	f806 4d41 	strb.w	r4, [r6, #-65]!
  403068:	930e      	str	r3, [sp, #56]	; 0x38
  40306a:	f7ff ba8d 	b.w	402588 <_svfprintf_r+0x220>
  40306e:	aa25      	add	r2, sp, #148	; 0x94
  403070:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403072:	980c      	ldr	r0, [sp, #48]	; 0x30
  403074:	f002 fad2 	bl	40561c <__ssprint_r>
  403078:	2800      	cmp	r0, #0
  40307a:	f47f aa47 	bne.w	40250c <_svfprintf_r+0x1a4>
  40307e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403080:	46c8      	mov	r8, r9
  403082:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403084:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403086:	429a      	cmp	r2, r3
  403088:	db44      	blt.n	403114 <_svfprintf_r+0xdac>
  40308a:	9b07      	ldr	r3, [sp, #28]
  40308c:	07d9      	lsls	r1, r3, #31
  40308e:	d441      	bmi.n	403114 <_svfprintf_r+0xdac>
  403090:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403092:	9812      	ldr	r0, [sp, #72]	; 0x48
  403094:	1a9a      	subs	r2, r3, r2
  403096:	1a1d      	subs	r5, r3, r0
  403098:	4295      	cmp	r5, r2
  40309a:	bfa8      	it	ge
  40309c:	4615      	movge	r5, r2
  40309e:	2d00      	cmp	r5, #0
  4030a0:	dd0e      	ble.n	4030c0 <_svfprintf_r+0xd58>
  4030a2:	9926      	ldr	r1, [sp, #152]	; 0x98
  4030a4:	f8c8 5004 	str.w	r5, [r8, #4]
  4030a8:	3101      	adds	r1, #1
  4030aa:	4406      	add	r6, r0
  4030ac:	442c      	add	r4, r5
  4030ae:	2907      	cmp	r1, #7
  4030b0:	f8c8 6000 	str.w	r6, [r8]
  4030b4:	9427      	str	r4, [sp, #156]	; 0x9c
  4030b6:	9126      	str	r1, [sp, #152]	; 0x98
  4030b8:	f300 823b 	bgt.w	403532 <_svfprintf_r+0x11ca>
  4030bc:	f108 0808 	add.w	r8, r8, #8
  4030c0:	2d00      	cmp	r5, #0
  4030c2:	bfac      	ite	ge
  4030c4:	1b56      	subge	r6, r2, r5
  4030c6:	4616      	movlt	r6, r2
  4030c8:	2e00      	cmp	r6, #0
  4030ca:	f77f ab2d 	ble.w	402728 <_svfprintf_r+0x3c0>
  4030ce:	2e10      	cmp	r6, #16
  4030d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030d2:	4db0      	ldr	r5, [pc, #704]	; (403394 <_svfprintf_r+0x102c>)
  4030d4:	ddb5      	ble.n	403042 <_svfprintf_r+0xcda>
  4030d6:	4622      	mov	r2, r4
  4030d8:	2710      	movs	r7, #16
  4030da:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4030de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4030e0:	e004      	b.n	4030ec <_svfprintf_r+0xd84>
  4030e2:	f108 0808 	add.w	r8, r8, #8
  4030e6:	3e10      	subs	r6, #16
  4030e8:	2e10      	cmp	r6, #16
  4030ea:	dda9      	ble.n	403040 <_svfprintf_r+0xcd8>
  4030ec:	3301      	adds	r3, #1
  4030ee:	3210      	adds	r2, #16
  4030f0:	2b07      	cmp	r3, #7
  4030f2:	9227      	str	r2, [sp, #156]	; 0x9c
  4030f4:	9326      	str	r3, [sp, #152]	; 0x98
  4030f6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4030fa:	ddf2      	ble.n	4030e2 <_svfprintf_r+0xd7a>
  4030fc:	aa25      	add	r2, sp, #148	; 0x94
  4030fe:	4621      	mov	r1, r4
  403100:	4658      	mov	r0, fp
  403102:	f002 fa8b 	bl	40561c <__ssprint_r>
  403106:	2800      	cmp	r0, #0
  403108:	f47f aa00 	bne.w	40250c <_svfprintf_r+0x1a4>
  40310c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40310e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403110:	46c8      	mov	r8, r9
  403112:	e7e8      	b.n	4030e6 <_svfprintf_r+0xd7e>
  403114:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403116:	9819      	ldr	r0, [sp, #100]	; 0x64
  403118:	991a      	ldr	r1, [sp, #104]	; 0x68
  40311a:	f8c8 1000 	str.w	r1, [r8]
  40311e:	3301      	adds	r3, #1
  403120:	4404      	add	r4, r0
  403122:	2b07      	cmp	r3, #7
  403124:	9427      	str	r4, [sp, #156]	; 0x9c
  403126:	f8c8 0004 	str.w	r0, [r8, #4]
  40312a:	9326      	str	r3, [sp, #152]	; 0x98
  40312c:	f300 81f5 	bgt.w	40351a <_svfprintf_r+0x11b2>
  403130:	f108 0808 	add.w	r8, r8, #8
  403134:	e7ac      	b.n	403090 <_svfprintf_r+0xd28>
  403136:	9b07      	ldr	r3, [sp, #28]
  403138:	07da      	lsls	r2, r3, #31
  40313a:	f53f adfe 	bmi.w	402d3a <_svfprintf_r+0x9d2>
  40313e:	3701      	adds	r7, #1
  403140:	3401      	adds	r4, #1
  403142:	2301      	movs	r3, #1
  403144:	2f07      	cmp	r7, #7
  403146:	9427      	str	r4, [sp, #156]	; 0x9c
  403148:	9726      	str	r7, [sp, #152]	; 0x98
  40314a:	f8c8 6000 	str.w	r6, [r8]
  40314e:	f8c8 3004 	str.w	r3, [r8, #4]
  403152:	f77f ae25 	ble.w	402da0 <_svfprintf_r+0xa38>
  403156:	e74a      	b.n	402fee <_svfprintf_r+0xc86>
  403158:	aa25      	add	r2, sp, #148	; 0x94
  40315a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40315c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40315e:	f002 fa5d 	bl	40561c <__ssprint_r>
  403162:	2800      	cmp	r0, #0
  403164:	f47f a9d2 	bne.w	40250c <_svfprintf_r+0x1a4>
  403168:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40316a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40316c:	46c8      	mov	r8, r9
  40316e:	e5f2      	b.n	402d56 <_svfprintf_r+0x9ee>
  403170:	aa25      	add	r2, sp, #148	; 0x94
  403172:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403174:	980c      	ldr	r0, [sp, #48]	; 0x30
  403176:	f002 fa51 	bl	40561c <__ssprint_r>
  40317a:	2800      	cmp	r0, #0
  40317c:	f47f a9c6 	bne.w	40250c <_svfprintf_r+0x1a4>
  403180:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403182:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403184:	46c8      	mov	r8, r9
  403186:	e5f5      	b.n	402d74 <_svfprintf_r+0xa0c>
  403188:	464e      	mov	r6, r9
  40318a:	f7ff b9fd 	b.w	402588 <_svfprintf_r+0x220>
  40318e:	aa25      	add	r2, sp, #148	; 0x94
  403190:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403192:	980c      	ldr	r0, [sp, #48]	; 0x30
  403194:	f002 fa42 	bl	40561c <__ssprint_r>
  403198:	2800      	cmp	r0, #0
  40319a:	f47f a9b7 	bne.w	40250c <_svfprintf_r+0x1a4>
  40319e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031a0:	46c8      	mov	r8, r9
  4031a2:	f7ff ba72 	b.w	40268a <_svfprintf_r+0x322>
  4031a6:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4031a8:	4622      	mov	r2, r4
  4031aa:	4620      	mov	r0, r4
  4031ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4031ae:	4623      	mov	r3, r4
  4031b0:	4621      	mov	r1, r4
  4031b2:	f002 fea7 	bl	405f04 <__aeabi_dcmpun>
  4031b6:	2800      	cmp	r0, #0
  4031b8:	f040 8286 	bne.w	4036c8 <_svfprintf_r+0x1360>
  4031bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4031be:	3301      	adds	r3, #1
  4031c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4031c2:	f023 0320 	bic.w	r3, r3, #32
  4031c6:	930e      	str	r3, [sp, #56]	; 0x38
  4031c8:	f000 81e2 	beq.w	403590 <_svfprintf_r+0x1228>
  4031cc:	2b47      	cmp	r3, #71	; 0x47
  4031ce:	f000 811e 	beq.w	40340e <_svfprintf_r+0x10a6>
  4031d2:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4031d6:	9307      	str	r3, [sp, #28]
  4031d8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4031da:	1e1f      	subs	r7, r3, #0
  4031dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4031de:	9308      	str	r3, [sp, #32]
  4031e0:	bfbb      	ittet	lt
  4031e2:	463b      	movlt	r3, r7
  4031e4:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  4031e8:	2300      	movge	r3, #0
  4031ea:	232d      	movlt	r3, #45	; 0x2d
  4031ec:	9310      	str	r3, [sp, #64]	; 0x40
  4031ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4031f0:	2b66      	cmp	r3, #102	; 0x66
  4031f2:	f000 81bb 	beq.w	40356c <_svfprintf_r+0x1204>
  4031f6:	2b46      	cmp	r3, #70	; 0x46
  4031f8:	f000 80df 	beq.w	4033ba <_svfprintf_r+0x1052>
  4031fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4031fe:	9a08      	ldr	r2, [sp, #32]
  403200:	2b45      	cmp	r3, #69	; 0x45
  403202:	bf0c      	ite	eq
  403204:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  403206:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403208:	a823      	add	r0, sp, #140	; 0x8c
  40320a:	a920      	add	r1, sp, #128	; 0x80
  40320c:	bf08      	it	eq
  40320e:	1c5d      	addeq	r5, r3, #1
  403210:	9004      	str	r0, [sp, #16]
  403212:	9103      	str	r1, [sp, #12]
  403214:	a81f      	add	r0, sp, #124	; 0x7c
  403216:	2102      	movs	r1, #2
  403218:	463b      	mov	r3, r7
  40321a:	9002      	str	r0, [sp, #8]
  40321c:	9501      	str	r5, [sp, #4]
  40321e:	9100      	str	r1, [sp, #0]
  403220:	980c      	ldr	r0, [sp, #48]	; 0x30
  403222:	f000 fb75 	bl	403910 <_dtoa_r>
  403226:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403228:	2b67      	cmp	r3, #103	; 0x67
  40322a:	4606      	mov	r6, r0
  40322c:	f040 81e0 	bne.w	4035f0 <_svfprintf_r+0x1288>
  403230:	f01b 0f01 	tst.w	fp, #1
  403234:	f000 8246 	beq.w	4036c4 <_svfprintf_r+0x135c>
  403238:	1974      	adds	r4, r6, r5
  40323a:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40323c:	9808      	ldr	r0, [sp, #32]
  40323e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403240:	4639      	mov	r1, r7
  403242:	f7fe ffc3 	bl	4021cc <__aeabi_dcmpeq>
  403246:	2800      	cmp	r0, #0
  403248:	f040 8165 	bne.w	403516 <_svfprintf_r+0x11ae>
  40324c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40324e:	42a3      	cmp	r3, r4
  403250:	d206      	bcs.n	403260 <_svfprintf_r+0xef8>
  403252:	2130      	movs	r1, #48	; 0x30
  403254:	1c5a      	adds	r2, r3, #1
  403256:	9223      	str	r2, [sp, #140]	; 0x8c
  403258:	7019      	strb	r1, [r3, #0]
  40325a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40325c:	429c      	cmp	r4, r3
  40325e:	d8f9      	bhi.n	403254 <_svfprintf_r+0xeec>
  403260:	1b9b      	subs	r3, r3, r6
  403262:	9313      	str	r3, [sp, #76]	; 0x4c
  403264:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403266:	2b47      	cmp	r3, #71	; 0x47
  403268:	f000 80e9 	beq.w	40343e <_svfprintf_r+0x10d6>
  40326c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40326e:	2b65      	cmp	r3, #101	; 0x65
  403270:	f340 81cd 	ble.w	40360e <_svfprintf_r+0x12a6>
  403274:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403276:	2b66      	cmp	r3, #102	; 0x66
  403278:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40327a:	9312      	str	r3, [sp, #72]	; 0x48
  40327c:	f000 819e 	beq.w	4035bc <_svfprintf_r+0x1254>
  403280:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403282:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403284:	4619      	mov	r1, r3
  403286:	4291      	cmp	r1, r2
  403288:	f300 818a 	bgt.w	4035a0 <_svfprintf_r+0x1238>
  40328c:	f01b 0f01 	tst.w	fp, #1
  403290:	f040 8213 	bne.w	4036ba <_svfprintf_r+0x1352>
  403294:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403298:	9308      	str	r3, [sp, #32]
  40329a:	2367      	movs	r3, #103	; 0x67
  40329c:	920e      	str	r2, [sp, #56]	; 0x38
  40329e:	9311      	str	r3, [sp, #68]	; 0x44
  4032a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4032a2:	2b00      	cmp	r3, #0
  4032a4:	f040 80c4 	bne.w	403430 <_svfprintf_r+0x10c8>
  4032a8:	930a      	str	r3, [sp, #40]	; 0x28
  4032aa:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4032ae:	f7ff b973 	b.w	402598 <_svfprintf_r+0x230>
  4032b2:	4635      	mov	r5, r6
  4032b4:	460c      	mov	r4, r1
  4032b6:	4646      	mov	r6, r8
  4032b8:	4690      	mov	r8, r2
  4032ba:	3301      	adds	r3, #1
  4032bc:	443c      	add	r4, r7
  4032be:	2b07      	cmp	r3, #7
  4032c0:	9427      	str	r4, [sp, #156]	; 0x9c
  4032c2:	9326      	str	r3, [sp, #152]	; 0x98
  4032c4:	e888 00a0 	stmia.w	r8, {r5, r7}
  4032c8:	f73f aed1 	bgt.w	40306e <_svfprintf_r+0xd06>
  4032cc:	f108 0808 	add.w	r8, r8, #8
  4032d0:	e6d7      	b.n	403082 <_svfprintf_r+0xd1a>
  4032d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4032d4:	6813      	ldr	r3, [r2, #0]
  4032d6:	3204      	adds	r2, #4
  4032d8:	920f      	str	r2, [sp, #60]	; 0x3c
  4032da:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4032dc:	601a      	str	r2, [r3, #0]
  4032de:	f7ff b86a 	b.w	4023b6 <_svfprintf_r+0x4e>
  4032e2:	aa25      	add	r2, sp, #148	; 0x94
  4032e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032e6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032e8:	f002 f998 	bl	40561c <__ssprint_r>
  4032ec:	2800      	cmp	r0, #0
  4032ee:	f47f a90d 	bne.w	40250c <_svfprintf_r+0x1a4>
  4032f2:	46c8      	mov	r8, r9
  4032f4:	e48d      	b.n	402c12 <_svfprintf_r+0x8aa>
  4032f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4032f8:	4a27      	ldr	r2, [pc, #156]	; (403398 <_svfprintf_r+0x1030>)
  4032fa:	f8c8 2000 	str.w	r2, [r8]
  4032fe:	3301      	adds	r3, #1
  403300:	3401      	adds	r4, #1
  403302:	2201      	movs	r2, #1
  403304:	2b07      	cmp	r3, #7
  403306:	9427      	str	r4, [sp, #156]	; 0x9c
  403308:	9326      	str	r3, [sp, #152]	; 0x98
  40330a:	f8c8 2004 	str.w	r2, [r8, #4]
  40330e:	dc72      	bgt.n	4033f6 <_svfprintf_r+0x108e>
  403310:	f108 0808 	add.w	r8, r8, #8
  403314:	b929      	cbnz	r1, 403322 <_svfprintf_r+0xfba>
  403316:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403318:	b91b      	cbnz	r3, 403322 <_svfprintf_r+0xfba>
  40331a:	9b07      	ldr	r3, [sp, #28]
  40331c:	07d8      	lsls	r0, r3, #31
  40331e:	f57f aa03 	bpl.w	402728 <_svfprintf_r+0x3c0>
  403322:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403324:	9819      	ldr	r0, [sp, #100]	; 0x64
  403326:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403328:	f8c8 2000 	str.w	r2, [r8]
  40332c:	3301      	adds	r3, #1
  40332e:	4602      	mov	r2, r0
  403330:	4422      	add	r2, r4
  403332:	2b07      	cmp	r3, #7
  403334:	9227      	str	r2, [sp, #156]	; 0x9c
  403336:	f8c8 0004 	str.w	r0, [r8, #4]
  40333a:	9326      	str	r3, [sp, #152]	; 0x98
  40333c:	f300 818d 	bgt.w	40365a <_svfprintf_r+0x12f2>
  403340:	f108 0808 	add.w	r8, r8, #8
  403344:	2900      	cmp	r1, #0
  403346:	f2c0 8165 	blt.w	403614 <_svfprintf_r+0x12ac>
  40334a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  40334c:	f8c8 6000 	str.w	r6, [r8]
  403350:	3301      	adds	r3, #1
  403352:	188c      	adds	r4, r1, r2
  403354:	2b07      	cmp	r3, #7
  403356:	9427      	str	r4, [sp, #156]	; 0x9c
  403358:	9326      	str	r3, [sp, #152]	; 0x98
  40335a:	f8c8 1004 	str.w	r1, [r8, #4]
  40335e:	f77f a9e1 	ble.w	402724 <_svfprintf_r+0x3bc>
  403362:	e52c      	b.n	402dbe <_svfprintf_r+0xa56>
  403364:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403366:	9909      	ldr	r1, [sp, #36]	; 0x24
  403368:	6813      	ldr	r3, [r2, #0]
  40336a:	17cd      	asrs	r5, r1, #31
  40336c:	4608      	mov	r0, r1
  40336e:	3204      	adds	r2, #4
  403370:	4629      	mov	r1, r5
  403372:	920f      	str	r2, [sp, #60]	; 0x3c
  403374:	e9c3 0100 	strd	r0, r1, [r3]
  403378:	f7ff b81d 	b.w	4023b6 <_svfprintf_r+0x4e>
  40337c:	aa25      	add	r2, sp, #148	; 0x94
  40337e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403380:	980c      	ldr	r0, [sp, #48]	; 0x30
  403382:	f002 f94b 	bl	40561c <__ssprint_r>
  403386:	2800      	cmp	r0, #0
  403388:	f47f a8c0 	bne.w	40250c <_svfprintf_r+0x1a4>
  40338c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40338e:	46c8      	mov	r8, r9
  403390:	e458      	b.n	402c44 <_svfprintf_r+0x8dc>
  403392:	bf00      	nop
  403394:	00406d70 	.word	0x00406d70
  403398:	00406d5c 	.word	0x00406d5c
  40339c:	2140      	movs	r1, #64	; 0x40
  40339e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4033a0:	f001 fa0c 	bl	4047bc <_malloc_r>
  4033a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4033a6:	6010      	str	r0, [r2, #0]
  4033a8:	6110      	str	r0, [r2, #16]
  4033aa:	2800      	cmp	r0, #0
  4033ac:	f000 81f2 	beq.w	403794 <_svfprintf_r+0x142c>
  4033b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4033b2:	2340      	movs	r3, #64	; 0x40
  4033b4:	6153      	str	r3, [r2, #20]
  4033b6:	f7fe bfee 	b.w	402396 <_svfprintf_r+0x2e>
  4033ba:	a823      	add	r0, sp, #140	; 0x8c
  4033bc:	a920      	add	r1, sp, #128	; 0x80
  4033be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4033c0:	9004      	str	r0, [sp, #16]
  4033c2:	9103      	str	r1, [sp, #12]
  4033c4:	a81f      	add	r0, sp, #124	; 0x7c
  4033c6:	2103      	movs	r1, #3
  4033c8:	9002      	str	r0, [sp, #8]
  4033ca:	9a08      	ldr	r2, [sp, #32]
  4033cc:	9401      	str	r4, [sp, #4]
  4033ce:	463b      	mov	r3, r7
  4033d0:	9100      	str	r1, [sp, #0]
  4033d2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4033d4:	f000 fa9c 	bl	403910 <_dtoa_r>
  4033d8:	4625      	mov	r5, r4
  4033da:	4606      	mov	r6, r0
  4033dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4033de:	2b46      	cmp	r3, #70	; 0x46
  4033e0:	eb06 0405 	add.w	r4, r6, r5
  4033e4:	f47f af29 	bne.w	40323a <_svfprintf_r+0xed2>
  4033e8:	7833      	ldrb	r3, [r6, #0]
  4033ea:	2b30      	cmp	r3, #48	; 0x30
  4033ec:	f000 8178 	beq.w	4036e0 <_svfprintf_r+0x1378>
  4033f0:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  4033f2:	442c      	add	r4, r5
  4033f4:	e721      	b.n	40323a <_svfprintf_r+0xed2>
  4033f6:	aa25      	add	r2, sp, #148	; 0x94
  4033f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4033fa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4033fc:	f002 f90e 	bl	40561c <__ssprint_r>
  403400:	2800      	cmp	r0, #0
  403402:	f47f a883 	bne.w	40250c <_svfprintf_r+0x1a4>
  403406:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403408:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40340a:	46c8      	mov	r8, r9
  40340c:	e782      	b.n	403314 <_svfprintf_r+0xfac>
  40340e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403410:	2b00      	cmp	r3, #0
  403412:	bf08      	it	eq
  403414:	2301      	moveq	r3, #1
  403416:	930a      	str	r3, [sp, #40]	; 0x28
  403418:	e6db      	b.n	4031d2 <_svfprintf_r+0xe6a>
  40341a:	4630      	mov	r0, r6
  40341c:	940a      	str	r4, [sp, #40]	; 0x28
  40341e:	f002 f88f 	bl	405540 <strlen>
  403422:	950f      	str	r5, [sp, #60]	; 0x3c
  403424:	900e      	str	r0, [sp, #56]	; 0x38
  403426:	f8cd b01c 	str.w	fp, [sp, #28]
  40342a:	4603      	mov	r3, r0
  40342c:	f7ff b9f9 	b.w	402822 <_svfprintf_r+0x4ba>
  403430:	272d      	movs	r7, #45	; 0x2d
  403432:	2300      	movs	r3, #0
  403434:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403438:	930a      	str	r3, [sp, #40]	; 0x28
  40343a:	f7ff b8ae 	b.w	40259a <_svfprintf_r+0x232>
  40343e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403440:	9312      	str	r3, [sp, #72]	; 0x48
  403442:	461a      	mov	r2, r3
  403444:	3303      	adds	r3, #3
  403446:	db04      	blt.n	403452 <_svfprintf_r+0x10ea>
  403448:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40344a:	4619      	mov	r1, r3
  40344c:	4291      	cmp	r1, r2
  40344e:	f6bf af17 	bge.w	403280 <_svfprintf_r+0xf18>
  403452:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403454:	3b02      	subs	r3, #2
  403456:	9311      	str	r3, [sp, #68]	; 0x44
  403458:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  40345c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403460:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403462:	3b01      	subs	r3, #1
  403464:	2b00      	cmp	r3, #0
  403466:	931f      	str	r3, [sp, #124]	; 0x7c
  403468:	bfbd      	ittte	lt
  40346a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  40346c:	f1c3 0301 	rsblt	r3, r3, #1
  403470:	222d      	movlt	r2, #45	; 0x2d
  403472:	222b      	movge	r2, #43	; 0x2b
  403474:	2b09      	cmp	r3, #9
  403476:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40347a:	f340 8116 	ble.w	4036aa <_svfprintf_r+0x1342>
  40347e:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403482:	4620      	mov	r0, r4
  403484:	4dab      	ldr	r5, [pc, #684]	; (403734 <_svfprintf_r+0x13cc>)
  403486:	e000      	b.n	40348a <_svfprintf_r+0x1122>
  403488:	4610      	mov	r0, r2
  40348a:	fb85 1203 	smull	r1, r2, r5, r3
  40348e:	17d9      	asrs	r1, r3, #31
  403490:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403494:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403498:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  40349c:	3230      	adds	r2, #48	; 0x30
  40349e:	2909      	cmp	r1, #9
  4034a0:	f800 2c01 	strb.w	r2, [r0, #-1]
  4034a4:	460b      	mov	r3, r1
  4034a6:	f100 32ff 	add.w	r2, r0, #4294967295
  4034aa:	dced      	bgt.n	403488 <_svfprintf_r+0x1120>
  4034ac:	3330      	adds	r3, #48	; 0x30
  4034ae:	3802      	subs	r0, #2
  4034b0:	b2d9      	uxtb	r1, r3
  4034b2:	4284      	cmp	r4, r0
  4034b4:	f802 1c01 	strb.w	r1, [r2, #-1]
  4034b8:	f240 8165 	bls.w	403786 <_svfprintf_r+0x141e>
  4034bc:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4034c0:	4613      	mov	r3, r2
  4034c2:	e001      	b.n	4034c8 <_svfprintf_r+0x1160>
  4034c4:	f813 1b01 	ldrb.w	r1, [r3], #1
  4034c8:	f800 1b01 	strb.w	r1, [r0], #1
  4034cc:	42a3      	cmp	r3, r4
  4034ce:	d1f9      	bne.n	4034c4 <_svfprintf_r+0x115c>
  4034d0:	3301      	adds	r3, #1
  4034d2:	1a9b      	subs	r3, r3, r2
  4034d4:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  4034d8:	4413      	add	r3, r2
  4034da:	aa21      	add	r2, sp, #132	; 0x84
  4034dc:	1a9b      	subs	r3, r3, r2
  4034de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4034e0:	931b      	str	r3, [sp, #108]	; 0x6c
  4034e2:	2a01      	cmp	r2, #1
  4034e4:	4413      	add	r3, r2
  4034e6:	930e      	str	r3, [sp, #56]	; 0x38
  4034e8:	f340 8119 	ble.w	40371e <_svfprintf_r+0x13b6>
  4034ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4034ee:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4034f0:	4413      	add	r3, r2
  4034f2:	930e      	str	r3, [sp, #56]	; 0x38
  4034f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4034f8:	9308      	str	r3, [sp, #32]
  4034fa:	2300      	movs	r3, #0
  4034fc:	9312      	str	r3, [sp, #72]	; 0x48
  4034fe:	e6cf      	b.n	4032a0 <_svfprintf_r+0xf38>
  403500:	aa25      	add	r2, sp, #148	; 0x94
  403502:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403504:	980c      	ldr	r0, [sp, #48]	; 0x30
  403506:	f002 f889 	bl	40561c <__ssprint_r>
  40350a:	2800      	cmp	r0, #0
  40350c:	f47e affe 	bne.w	40250c <_svfprintf_r+0x1a4>
  403510:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403512:	46c8      	mov	r8, r9
  403514:	e4d7      	b.n	402ec6 <_svfprintf_r+0xb5e>
  403516:	4623      	mov	r3, r4
  403518:	e6a2      	b.n	403260 <_svfprintf_r+0xef8>
  40351a:	aa25      	add	r2, sp, #148	; 0x94
  40351c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40351e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403520:	f002 f87c 	bl	40561c <__ssprint_r>
  403524:	2800      	cmp	r0, #0
  403526:	f47e aff1 	bne.w	40250c <_svfprintf_r+0x1a4>
  40352a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40352c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40352e:	46c8      	mov	r8, r9
  403530:	e5ae      	b.n	403090 <_svfprintf_r+0xd28>
  403532:	aa25      	add	r2, sp, #148	; 0x94
  403534:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403536:	980c      	ldr	r0, [sp, #48]	; 0x30
  403538:	f002 f870 	bl	40561c <__ssprint_r>
  40353c:	2800      	cmp	r0, #0
  40353e:	f47e afe5 	bne.w	40250c <_svfprintf_r+0x1a4>
  403542:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403544:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403546:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403548:	1a9a      	subs	r2, r3, r2
  40354a:	46c8      	mov	r8, r9
  40354c:	e5b8      	b.n	4030c0 <_svfprintf_r+0xd58>
  40354e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403550:	9612      	str	r6, [sp, #72]	; 0x48
  403552:	2b06      	cmp	r3, #6
  403554:	bf28      	it	cs
  403556:	2306      	movcs	r3, #6
  403558:	960a      	str	r6, [sp, #40]	; 0x28
  40355a:	4637      	mov	r7, r6
  40355c:	9308      	str	r3, [sp, #32]
  40355e:	950f      	str	r5, [sp, #60]	; 0x3c
  403560:	f8cd b01c 	str.w	fp, [sp, #28]
  403564:	930e      	str	r3, [sp, #56]	; 0x38
  403566:	4e74      	ldr	r6, [pc, #464]	; (403738 <_svfprintf_r+0x13d0>)
  403568:	f7ff b816 	b.w	402598 <_svfprintf_r+0x230>
  40356c:	a823      	add	r0, sp, #140	; 0x8c
  40356e:	a920      	add	r1, sp, #128	; 0x80
  403570:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403572:	9004      	str	r0, [sp, #16]
  403574:	9103      	str	r1, [sp, #12]
  403576:	a81f      	add	r0, sp, #124	; 0x7c
  403578:	2103      	movs	r1, #3
  40357a:	9002      	str	r0, [sp, #8]
  40357c:	9a08      	ldr	r2, [sp, #32]
  40357e:	9501      	str	r5, [sp, #4]
  403580:	463b      	mov	r3, r7
  403582:	9100      	str	r1, [sp, #0]
  403584:	980c      	ldr	r0, [sp, #48]	; 0x30
  403586:	f000 f9c3 	bl	403910 <_dtoa_r>
  40358a:	4606      	mov	r6, r0
  40358c:	1944      	adds	r4, r0, r5
  40358e:	e72b      	b.n	4033e8 <_svfprintf_r+0x1080>
  403590:	2306      	movs	r3, #6
  403592:	930a      	str	r3, [sp, #40]	; 0x28
  403594:	e61d      	b.n	4031d2 <_svfprintf_r+0xe6a>
  403596:	272d      	movs	r7, #45	; 0x2d
  403598:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40359c:	f7ff bacd 	b.w	402b3a <_svfprintf_r+0x7d2>
  4035a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4035a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4035a4:	4413      	add	r3, r2
  4035a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4035a8:	930e      	str	r3, [sp, #56]	; 0x38
  4035aa:	2a00      	cmp	r2, #0
  4035ac:	f340 80b0 	ble.w	403710 <_svfprintf_r+0x13a8>
  4035b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4035b4:	9308      	str	r3, [sp, #32]
  4035b6:	2367      	movs	r3, #103	; 0x67
  4035b8:	9311      	str	r3, [sp, #68]	; 0x44
  4035ba:	e671      	b.n	4032a0 <_svfprintf_r+0xf38>
  4035bc:	2b00      	cmp	r3, #0
  4035be:	f340 80c3 	ble.w	403748 <_svfprintf_r+0x13e0>
  4035c2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4035c4:	2a00      	cmp	r2, #0
  4035c6:	f040 8099 	bne.w	4036fc <_svfprintf_r+0x1394>
  4035ca:	f01b 0f01 	tst.w	fp, #1
  4035ce:	f040 8095 	bne.w	4036fc <_svfprintf_r+0x1394>
  4035d2:	9308      	str	r3, [sp, #32]
  4035d4:	930e      	str	r3, [sp, #56]	; 0x38
  4035d6:	e663      	b.n	4032a0 <_svfprintf_r+0xf38>
  4035d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4035da:	9308      	str	r3, [sp, #32]
  4035dc:	930e      	str	r3, [sp, #56]	; 0x38
  4035de:	900a      	str	r0, [sp, #40]	; 0x28
  4035e0:	950f      	str	r5, [sp, #60]	; 0x3c
  4035e2:	f8cd b01c 	str.w	fp, [sp, #28]
  4035e6:	9012      	str	r0, [sp, #72]	; 0x48
  4035e8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4035ec:	f7fe bfd4 	b.w	402598 <_svfprintf_r+0x230>
  4035f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035f2:	2b47      	cmp	r3, #71	; 0x47
  4035f4:	f47f ae20 	bne.w	403238 <_svfprintf_r+0xed0>
  4035f8:	f01b 0f01 	tst.w	fp, #1
  4035fc:	f47f aeee 	bne.w	4033dc <_svfprintf_r+0x1074>
  403600:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403602:	1b9b      	subs	r3, r3, r6
  403604:	9313      	str	r3, [sp, #76]	; 0x4c
  403606:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403608:	2b47      	cmp	r3, #71	; 0x47
  40360a:	f43f af18 	beq.w	40343e <_svfprintf_r+0x10d6>
  40360e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403610:	9312      	str	r3, [sp, #72]	; 0x48
  403612:	e721      	b.n	403458 <_svfprintf_r+0x10f0>
  403614:	424f      	negs	r7, r1
  403616:	3110      	adds	r1, #16
  403618:	4d48      	ldr	r5, [pc, #288]	; (40373c <_svfprintf_r+0x13d4>)
  40361a:	da2f      	bge.n	40367c <_svfprintf_r+0x1314>
  40361c:	2410      	movs	r4, #16
  40361e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403622:	e004      	b.n	40362e <_svfprintf_r+0x12c6>
  403624:	f108 0808 	add.w	r8, r8, #8
  403628:	3f10      	subs	r7, #16
  40362a:	2f10      	cmp	r7, #16
  40362c:	dd26      	ble.n	40367c <_svfprintf_r+0x1314>
  40362e:	3301      	adds	r3, #1
  403630:	3210      	adds	r2, #16
  403632:	2b07      	cmp	r3, #7
  403634:	9227      	str	r2, [sp, #156]	; 0x9c
  403636:	9326      	str	r3, [sp, #152]	; 0x98
  403638:	f8c8 5000 	str.w	r5, [r8]
  40363c:	f8c8 4004 	str.w	r4, [r8, #4]
  403640:	ddf0      	ble.n	403624 <_svfprintf_r+0x12bc>
  403642:	aa25      	add	r2, sp, #148	; 0x94
  403644:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403646:	4658      	mov	r0, fp
  403648:	f001 ffe8 	bl	40561c <__ssprint_r>
  40364c:	2800      	cmp	r0, #0
  40364e:	f47e af5d 	bne.w	40250c <_svfprintf_r+0x1a4>
  403652:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403654:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403656:	46c8      	mov	r8, r9
  403658:	e7e6      	b.n	403628 <_svfprintf_r+0x12c0>
  40365a:	aa25      	add	r2, sp, #148	; 0x94
  40365c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40365e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403660:	f001 ffdc 	bl	40561c <__ssprint_r>
  403664:	2800      	cmp	r0, #0
  403666:	f47e af51 	bne.w	40250c <_svfprintf_r+0x1a4>
  40366a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40366c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40366e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403670:	46c8      	mov	r8, r9
  403672:	e667      	b.n	403344 <_svfprintf_r+0xfdc>
  403674:	2000      	movs	r0, #0
  403676:	900a      	str	r0, [sp, #40]	; 0x28
  403678:	f7fe bed0 	b.w	40241c <_svfprintf_r+0xb4>
  40367c:	3301      	adds	r3, #1
  40367e:	443a      	add	r2, r7
  403680:	2b07      	cmp	r3, #7
  403682:	e888 00a0 	stmia.w	r8, {r5, r7}
  403686:	9227      	str	r2, [sp, #156]	; 0x9c
  403688:	9326      	str	r3, [sp, #152]	; 0x98
  40368a:	f108 0808 	add.w	r8, r8, #8
  40368e:	f77f ae5c 	ble.w	40334a <_svfprintf_r+0xfe2>
  403692:	aa25      	add	r2, sp, #148	; 0x94
  403694:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403696:	980c      	ldr	r0, [sp, #48]	; 0x30
  403698:	f001 ffc0 	bl	40561c <__ssprint_r>
  40369c:	2800      	cmp	r0, #0
  40369e:	f47e af35 	bne.w	40250c <_svfprintf_r+0x1a4>
  4036a2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036a6:	46c8      	mov	r8, r9
  4036a8:	e64f      	b.n	40334a <_svfprintf_r+0xfe2>
  4036aa:	3330      	adds	r3, #48	; 0x30
  4036ac:	2230      	movs	r2, #48	; 0x30
  4036ae:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4036b2:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4036b6:	ab22      	add	r3, sp, #136	; 0x88
  4036b8:	e70f      	b.n	4034da <_svfprintf_r+0x1172>
  4036ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4036bc:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4036be:	4413      	add	r3, r2
  4036c0:	930e      	str	r3, [sp, #56]	; 0x38
  4036c2:	e775      	b.n	4035b0 <_svfprintf_r+0x1248>
  4036c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4036c6:	e5cb      	b.n	403260 <_svfprintf_r+0xef8>
  4036c8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4036ca:	4e1d      	ldr	r6, [pc, #116]	; (403740 <_svfprintf_r+0x13d8>)
  4036cc:	2b00      	cmp	r3, #0
  4036ce:	bfb6      	itet	lt
  4036d0:	272d      	movlt	r7, #45	; 0x2d
  4036d2:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4036d6:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4036da:	4b1a      	ldr	r3, [pc, #104]	; (403744 <_svfprintf_r+0x13dc>)
  4036dc:	f7ff ba2f 	b.w	402b3e <_svfprintf_r+0x7d6>
  4036e0:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4036e2:	9808      	ldr	r0, [sp, #32]
  4036e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4036e6:	4639      	mov	r1, r7
  4036e8:	f7fe fd70 	bl	4021cc <__aeabi_dcmpeq>
  4036ec:	2800      	cmp	r0, #0
  4036ee:	f47f ae7f 	bne.w	4033f0 <_svfprintf_r+0x1088>
  4036f2:	f1c5 0501 	rsb	r5, r5, #1
  4036f6:	951f      	str	r5, [sp, #124]	; 0x7c
  4036f8:	442c      	add	r4, r5
  4036fa:	e59e      	b.n	40323a <_svfprintf_r+0xed2>
  4036fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4036fe:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403700:	4413      	add	r3, r2
  403702:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403704:	441a      	add	r2, r3
  403706:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40370a:	920e      	str	r2, [sp, #56]	; 0x38
  40370c:	9308      	str	r3, [sp, #32]
  40370e:	e5c7      	b.n	4032a0 <_svfprintf_r+0xf38>
  403710:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403712:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403714:	f1c3 0301 	rsb	r3, r3, #1
  403718:	441a      	add	r2, r3
  40371a:	4613      	mov	r3, r2
  40371c:	e7d0      	b.n	4036c0 <_svfprintf_r+0x1358>
  40371e:	f01b 0301 	ands.w	r3, fp, #1
  403722:	9312      	str	r3, [sp, #72]	; 0x48
  403724:	f47f aee2 	bne.w	4034ec <_svfprintf_r+0x1184>
  403728:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40372a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40372e:	9308      	str	r3, [sp, #32]
  403730:	e5b6      	b.n	4032a0 <_svfprintf_r+0xf38>
  403732:	bf00      	nop
  403734:	66666667 	.word	0x66666667
  403738:	00406d54 	.word	0x00406d54
  40373c:	00406d70 	.word	0x00406d70
  403740:	00406d28 	.word	0x00406d28
  403744:	00406d24 	.word	0x00406d24
  403748:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40374a:	b913      	cbnz	r3, 403752 <_svfprintf_r+0x13ea>
  40374c:	f01b 0f01 	tst.w	fp, #1
  403750:	d002      	beq.n	403758 <_svfprintf_r+0x13f0>
  403752:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403754:	3301      	adds	r3, #1
  403756:	e7d4      	b.n	403702 <_svfprintf_r+0x139a>
  403758:	2301      	movs	r3, #1
  40375a:	e73a      	b.n	4035d2 <_svfprintf_r+0x126a>
  40375c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40375e:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403762:	6828      	ldr	r0, [r5, #0]
  403764:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403768:	900a      	str	r0, [sp, #40]	; 0x28
  40376a:	4628      	mov	r0, r5
  40376c:	3004      	adds	r0, #4
  40376e:	46a2      	mov	sl, r4
  403770:	900f      	str	r0, [sp, #60]	; 0x3c
  403772:	f7fe be51 	b.w	402418 <_svfprintf_r+0xb0>
  403776:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40377a:	f7ff b867 	b.w	40284c <_svfprintf_r+0x4e4>
  40377e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403782:	f7ff ba15 	b.w	402bb0 <_svfprintf_r+0x848>
  403786:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40378a:	e6a6      	b.n	4034da <_svfprintf_r+0x1172>
  40378c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403790:	f7ff b8eb 	b.w	40296a <_svfprintf_r+0x602>
  403794:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403796:	230c      	movs	r3, #12
  403798:	6013      	str	r3, [r2, #0]
  40379a:	f04f 33ff 	mov.w	r3, #4294967295
  40379e:	9309      	str	r3, [sp, #36]	; 0x24
  4037a0:	f7fe bebd 	b.w	40251e <_svfprintf_r+0x1b6>
  4037a4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037a8:	f7ff b99a 	b.w	402ae0 <_svfprintf_r+0x778>
  4037ac:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037b0:	f7ff b976 	b.w	402aa0 <_svfprintf_r+0x738>
  4037b4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037b8:	f7ff b959 	b.w	402a6e <_svfprintf_r+0x706>
  4037bc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037c0:	f7ff b912 	b.w	4029e8 <_svfprintf_r+0x680>

004037c4 <register_fini>:
  4037c4:	4b02      	ldr	r3, [pc, #8]	; (4037d0 <register_fini+0xc>)
  4037c6:	b113      	cbz	r3, 4037ce <register_fini+0xa>
  4037c8:	4802      	ldr	r0, [pc, #8]	; (4037d4 <register_fini+0x10>)
  4037ca:	f000 b805 	b.w	4037d8 <atexit>
  4037ce:	4770      	bx	lr
  4037d0:	00000000 	.word	0x00000000
  4037d4:	00404765 	.word	0x00404765

004037d8 <atexit>:
  4037d8:	2300      	movs	r3, #0
  4037da:	4601      	mov	r1, r0
  4037dc:	461a      	mov	r2, r3
  4037de:	4618      	mov	r0, r3
  4037e0:	f001 bf9a 	b.w	405718 <__register_exitproc>

004037e4 <quorem>:
  4037e4:	6902      	ldr	r2, [r0, #16]
  4037e6:	690b      	ldr	r3, [r1, #16]
  4037e8:	4293      	cmp	r3, r2
  4037ea:	f300 808d 	bgt.w	403908 <quorem+0x124>
  4037ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4037f2:	f103 38ff 	add.w	r8, r3, #4294967295
  4037f6:	f101 0714 	add.w	r7, r1, #20
  4037fa:	f100 0b14 	add.w	fp, r0, #20
  4037fe:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403802:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403806:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40380a:	b083      	sub	sp, #12
  40380c:	3201      	adds	r2, #1
  40380e:	fbb3 f9f2 	udiv	r9, r3, r2
  403812:	eb0b 0304 	add.w	r3, fp, r4
  403816:	9400      	str	r4, [sp, #0]
  403818:	eb07 0a04 	add.w	sl, r7, r4
  40381c:	9301      	str	r3, [sp, #4]
  40381e:	f1b9 0f00 	cmp.w	r9, #0
  403822:	d039      	beq.n	403898 <quorem+0xb4>
  403824:	2500      	movs	r5, #0
  403826:	462e      	mov	r6, r5
  403828:	46bc      	mov	ip, r7
  40382a:	46de      	mov	lr, fp
  40382c:	f85c 4b04 	ldr.w	r4, [ip], #4
  403830:	f8de 3000 	ldr.w	r3, [lr]
  403834:	b2a2      	uxth	r2, r4
  403836:	fb09 5502 	mla	r5, r9, r2, r5
  40383a:	0c22      	lsrs	r2, r4, #16
  40383c:	0c2c      	lsrs	r4, r5, #16
  40383e:	fb09 4202 	mla	r2, r9, r2, r4
  403842:	b2ad      	uxth	r5, r5
  403844:	1b75      	subs	r5, r6, r5
  403846:	b296      	uxth	r6, r2
  403848:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  40384c:	fa15 f383 	uxtah	r3, r5, r3
  403850:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403854:	b29b      	uxth	r3, r3
  403856:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40385a:	45e2      	cmp	sl, ip
  40385c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403860:	f84e 3b04 	str.w	r3, [lr], #4
  403864:	ea4f 4626 	mov.w	r6, r6, asr #16
  403868:	d2e0      	bcs.n	40382c <quorem+0x48>
  40386a:	9b00      	ldr	r3, [sp, #0]
  40386c:	f85b 3003 	ldr.w	r3, [fp, r3]
  403870:	b993      	cbnz	r3, 403898 <quorem+0xb4>
  403872:	9c01      	ldr	r4, [sp, #4]
  403874:	1f23      	subs	r3, r4, #4
  403876:	459b      	cmp	fp, r3
  403878:	d20c      	bcs.n	403894 <quorem+0xb0>
  40387a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40387e:	b94b      	cbnz	r3, 403894 <quorem+0xb0>
  403880:	f1a4 0308 	sub.w	r3, r4, #8
  403884:	e002      	b.n	40388c <quorem+0xa8>
  403886:	681a      	ldr	r2, [r3, #0]
  403888:	3b04      	subs	r3, #4
  40388a:	b91a      	cbnz	r2, 403894 <quorem+0xb0>
  40388c:	459b      	cmp	fp, r3
  40388e:	f108 38ff 	add.w	r8, r8, #4294967295
  403892:	d3f8      	bcc.n	403886 <quorem+0xa2>
  403894:	f8c0 8010 	str.w	r8, [r0, #16]
  403898:	4604      	mov	r4, r0
  40389a:	f001 fd35 	bl	405308 <__mcmp>
  40389e:	2800      	cmp	r0, #0
  4038a0:	db2e      	blt.n	403900 <quorem+0x11c>
  4038a2:	f109 0901 	add.w	r9, r9, #1
  4038a6:	465d      	mov	r5, fp
  4038a8:	2300      	movs	r3, #0
  4038aa:	f857 1b04 	ldr.w	r1, [r7], #4
  4038ae:	6828      	ldr	r0, [r5, #0]
  4038b0:	b28a      	uxth	r2, r1
  4038b2:	1a9a      	subs	r2, r3, r2
  4038b4:	0c0b      	lsrs	r3, r1, #16
  4038b6:	fa12 f280 	uxtah	r2, r2, r0
  4038ba:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4038be:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4038c2:	b292      	uxth	r2, r2
  4038c4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4038c8:	45ba      	cmp	sl, r7
  4038ca:	f845 2b04 	str.w	r2, [r5], #4
  4038ce:	ea4f 4323 	mov.w	r3, r3, asr #16
  4038d2:	d2ea      	bcs.n	4038aa <quorem+0xc6>
  4038d4:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4038d8:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4038dc:	b982      	cbnz	r2, 403900 <quorem+0x11c>
  4038de:	1f1a      	subs	r2, r3, #4
  4038e0:	4593      	cmp	fp, r2
  4038e2:	d20b      	bcs.n	4038fc <quorem+0x118>
  4038e4:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4038e8:	b942      	cbnz	r2, 4038fc <quorem+0x118>
  4038ea:	3b08      	subs	r3, #8
  4038ec:	e002      	b.n	4038f4 <quorem+0x110>
  4038ee:	681a      	ldr	r2, [r3, #0]
  4038f0:	3b04      	subs	r3, #4
  4038f2:	b91a      	cbnz	r2, 4038fc <quorem+0x118>
  4038f4:	459b      	cmp	fp, r3
  4038f6:	f108 38ff 	add.w	r8, r8, #4294967295
  4038fa:	d3f8      	bcc.n	4038ee <quorem+0x10a>
  4038fc:	f8c4 8010 	str.w	r8, [r4, #16]
  403900:	4648      	mov	r0, r9
  403902:	b003      	add	sp, #12
  403904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403908:	2000      	movs	r0, #0
  40390a:	4770      	bx	lr
  40390c:	0000      	movs	r0, r0
	...

00403910 <_dtoa_r>:
  403910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403914:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403916:	b09b      	sub	sp, #108	; 0x6c
  403918:	4604      	mov	r4, r0
  40391a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40391c:	4692      	mov	sl, r2
  40391e:	469b      	mov	fp, r3
  403920:	b141      	cbz	r1, 403934 <_dtoa_r+0x24>
  403922:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403924:	604a      	str	r2, [r1, #4]
  403926:	2301      	movs	r3, #1
  403928:	4093      	lsls	r3, r2
  40392a:	608b      	str	r3, [r1, #8]
  40392c:	f001 fb14 	bl	404f58 <_Bfree>
  403930:	2300      	movs	r3, #0
  403932:	6423      	str	r3, [r4, #64]	; 0x40
  403934:	f1bb 0f00 	cmp.w	fp, #0
  403938:	465d      	mov	r5, fp
  40393a:	db35      	blt.n	4039a8 <_dtoa_r+0x98>
  40393c:	2300      	movs	r3, #0
  40393e:	6033      	str	r3, [r6, #0]
  403940:	4b9d      	ldr	r3, [pc, #628]	; (403bb8 <_dtoa_r+0x2a8>)
  403942:	43ab      	bics	r3, r5
  403944:	d015      	beq.n	403972 <_dtoa_r+0x62>
  403946:	4650      	mov	r0, sl
  403948:	4659      	mov	r1, fp
  40394a:	2200      	movs	r2, #0
  40394c:	2300      	movs	r3, #0
  40394e:	f7fe fc3d 	bl	4021cc <__aeabi_dcmpeq>
  403952:	4680      	mov	r8, r0
  403954:	2800      	cmp	r0, #0
  403956:	d02d      	beq.n	4039b4 <_dtoa_r+0xa4>
  403958:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40395a:	2301      	movs	r3, #1
  40395c:	6013      	str	r3, [r2, #0]
  40395e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403960:	2b00      	cmp	r3, #0
  403962:	f000 80bd 	beq.w	403ae0 <_dtoa_r+0x1d0>
  403966:	4895      	ldr	r0, [pc, #596]	; (403bbc <_dtoa_r+0x2ac>)
  403968:	6018      	str	r0, [r3, #0]
  40396a:	3801      	subs	r0, #1
  40396c:	b01b      	add	sp, #108	; 0x6c
  40396e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403972:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403974:	f242 730f 	movw	r3, #9999	; 0x270f
  403978:	6013      	str	r3, [r2, #0]
  40397a:	f1ba 0f00 	cmp.w	sl, #0
  40397e:	d10d      	bne.n	40399c <_dtoa_r+0x8c>
  403980:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403984:	b955      	cbnz	r5, 40399c <_dtoa_r+0x8c>
  403986:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403988:	488d      	ldr	r0, [pc, #564]	; (403bc0 <_dtoa_r+0x2b0>)
  40398a:	2b00      	cmp	r3, #0
  40398c:	d0ee      	beq.n	40396c <_dtoa_r+0x5c>
  40398e:	f100 0308 	add.w	r3, r0, #8
  403992:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403994:	6013      	str	r3, [r2, #0]
  403996:	b01b      	add	sp, #108	; 0x6c
  403998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40399c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40399e:	4889      	ldr	r0, [pc, #548]	; (403bc4 <_dtoa_r+0x2b4>)
  4039a0:	2b00      	cmp	r3, #0
  4039a2:	d0e3      	beq.n	40396c <_dtoa_r+0x5c>
  4039a4:	1cc3      	adds	r3, r0, #3
  4039a6:	e7f4      	b.n	403992 <_dtoa_r+0x82>
  4039a8:	2301      	movs	r3, #1
  4039aa:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4039ae:	6033      	str	r3, [r6, #0]
  4039b0:	46ab      	mov	fp, r5
  4039b2:	e7c5      	b.n	403940 <_dtoa_r+0x30>
  4039b4:	aa18      	add	r2, sp, #96	; 0x60
  4039b6:	ab19      	add	r3, sp, #100	; 0x64
  4039b8:	9201      	str	r2, [sp, #4]
  4039ba:	9300      	str	r3, [sp, #0]
  4039bc:	4652      	mov	r2, sl
  4039be:	465b      	mov	r3, fp
  4039c0:	4620      	mov	r0, r4
  4039c2:	f001 fd41 	bl	405448 <__d2b>
  4039c6:	0d2b      	lsrs	r3, r5, #20
  4039c8:	4681      	mov	r9, r0
  4039ca:	d071      	beq.n	403ab0 <_dtoa_r+0x1a0>
  4039cc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4039d0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4039d4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4039d6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4039da:	4650      	mov	r0, sl
  4039dc:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4039e0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4039e4:	2200      	movs	r2, #0
  4039e6:	4b78      	ldr	r3, [pc, #480]	; (403bc8 <_dtoa_r+0x2b8>)
  4039e8:	f7fd ffd4 	bl	401994 <__aeabi_dsub>
  4039ec:	a36c      	add	r3, pc, #432	; (adr r3, 403ba0 <_dtoa_r+0x290>)
  4039ee:	e9d3 2300 	ldrd	r2, r3, [r3]
  4039f2:	f7fe f983 	bl	401cfc <__aeabi_dmul>
  4039f6:	a36c      	add	r3, pc, #432	; (adr r3, 403ba8 <_dtoa_r+0x298>)
  4039f8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4039fc:	f7fd ffcc 	bl	401998 <__adddf3>
  403a00:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403a04:	4630      	mov	r0, r6
  403a06:	f7fe f913 	bl	401c30 <__aeabi_i2d>
  403a0a:	a369      	add	r3, pc, #420	; (adr r3, 403bb0 <_dtoa_r+0x2a0>)
  403a0c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a10:	f7fe f974 	bl	401cfc <__aeabi_dmul>
  403a14:	4602      	mov	r2, r0
  403a16:	460b      	mov	r3, r1
  403a18:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403a1c:	f7fd ffbc 	bl	401998 <__adddf3>
  403a20:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403a24:	f002 fa84 	bl	405f30 <__aeabi_d2iz>
  403a28:	2200      	movs	r2, #0
  403a2a:	9002      	str	r0, [sp, #8]
  403a2c:	2300      	movs	r3, #0
  403a2e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403a32:	f7fe fbd5 	bl	4021e0 <__aeabi_dcmplt>
  403a36:	2800      	cmp	r0, #0
  403a38:	f040 8173 	bne.w	403d22 <_dtoa_r+0x412>
  403a3c:	9d02      	ldr	r5, [sp, #8]
  403a3e:	2d16      	cmp	r5, #22
  403a40:	f200 815d 	bhi.w	403cfe <_dtoa_r+0x3ee>
  403a44:	4b61      	ldr	r3, [pc, #388]	; (403bcc <_dtoa_r+0x2bc>)
  403a46:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403a4a:	e9d3 0100 	ldrd	r0, r1, [r3]
  403a4e:	4652      	mov	r2, sl
  403a50:	465b      	mov	r3, fp
  403a52:	f7fe fbe3 	bl	40221c <__aeabi_dcmpgt>
  403a56:	2800      	cmp	r0, #0
  403a58:	f000 81c5 	beq.w	403de6 <_dtoa_r+0x4d6>
  403a5c:	1e6b      	subs	r3, r5, #1
  403a5e:	9302      	str	r3, [sp, #8]
  403a60:	2300      	movs	r3, #0
  403a62:	930e      	str	r3, [sp, #56]	; 0x38
  403a64:	1bbf      	subs	r7, r7, r6
  403a66:	1e7b      	subs	r3, r7, #1
  403a68:	9306      	str	r3, [sp, #24]
  403a6a:	f100 8154 	bmi.w	403d16 <_dtoa_r+0x406>
  403a6e:	2300      	movs	r3, #0
  403a70:	9308      	str	r3, [sp, #32]
  403a72:	9b02      	ldr	r3, [sp, #8]
  403a74:	2b00      	cmp	r3, #0
  403a76:	f2c0 8145 	blt.w	403d04 <_dtoa_r+0x3f4>
  403a7a:	9a06      	ldr	r2, [sp, #24]
  403a7c:	930d      	str	r3, [sp, #52]	; 0x34
  403a7e:	4611      	mov	r1, r2
  403a80:	4419      	add	r1, r3
  403a82:	2300      	movs	r3, #0
  403a84:	9106      	str	r1, [sp, #24]
  403a86:	930c      	str	r3, [sp, #48]	; 0x30
  403a88:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a8a:	2b09      	cmp	r3, #9
  403a8c:	d82a      	bhi.n	403ae4 <_dtoa_r+0x1d4>
  403a8e:	2b05      	cmp	r3, #5
  403a90:	f340 865b 	ble.w	40474a <_dtoa_r+0xe3a>
  403a94:	3b04      	subs	r3, #4
  403a96:	9324      	str	r3, [sp, #144]	; 0x90
  403a98:	2500      	movs	r5, #0
  403a9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a9c:	3b02      	subs	r3, #2
  403a9e:	2b03      	cmp	r3, #3
  403aa0:	f200 8642 	bhi.w	404728 <_dtoa_r+0xe18>
  403aa4:	e8df f013 	tbh	[pc, r3, lsl #1]
  403aa8:	02c903d4 	.word	0x02c903d4
  403aac:	046103df 	.word	0x046103df
  403ab0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403ab2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403ab4:	443e      	add	r6, r7
  403ab6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403aba:	2b20      	cmp	r3, #32
  403abc:	f340 818e 	ble.w	403ddc <_dtoa_r+0x4cc>
  403ac0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403ac4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403ac8:	409d      	lsls	r5, r3
  403aca:	fa2a f000 	lsr.w	r0, sl, r0
  403ace:	4328      	orrs	r0, r5
  403ad0:	f7fe f89e 	bl	401c10 <__aeabi_ui2d>
  403ad4:	2301      	movs	r3, #1
  403ad6:	3e01      	subs	r6, #1
  403ad8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403adc:	9314      	str	r3, [sp, #80]	; 0x50
  403ade:	e781      	b.n	4039e4 <_dtoa_r+0xd4>
  403ae0:	483b      	ldr	r0, [pc, #236]	; (403bd0 <_dtoa_r+0x2c0>)
  403ae2:	e743      	b.n	40396c <_dtoa_r+0x5c>
  403ae4:	2100      	movs	r1, #0
  403ae6:	6461      	str	r1, [r4, #68]	; 0x44
  403ae8:	4620      	mov	r0, r4
  403aea:	9125      	str	r1, [sp, #148]	; 0x94
  403aec:	f001 fa0e 	bl	404f0c <_Balloc>
  403af0:	f04f 33ff 	mov.w	r3, #4294967295
  403af4:	930a      	str	r3, [sp, #40]	; 0x28
  403af6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403af8:	930f      	str	r3, [sp, #60]	; 0x3c
  403afa:	2301      	movs	r3, #1
  403afc:	9004      	str	r0, [sp, #16]
  403afe:	6420      	str	r0, [r4, #64]	; 0x40
  403b00:	9224      	str	r2, [sp, #144]	; 0x90
  403b02:	930b      	str	r3, [sp, #44]	; 0x2c
  403b04:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403b06:	2b00      	cmp	r3, #0
  403b08:	f2c0 80d9 	blt.w	403cbe <_dtoa_r+0x3ae>
  403b0c:	9a02      	ldr	r2, [sp, #8]
  403b0e:	2a0e      	cmp	r2, #14
  403b10:	f300 80d5 	bgt.w	403cbe <_dtoa_r+0x3ae>
  403b14:	4b2d      	ldr	r3, [pc, #180]	; (403bcc <_dtoa_r+0x2bc>)
  403b16:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b1a:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b1e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403b22:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403b24:	2b00      	cmp	r3, #0
  403b26:	f2c0 83ba 	blt.w	40429e <_dtoa_r+0x98e>
  403b2a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403b2e:	4650      	mov	r0, sl
  403b30:	462a      	mov	r2, r5
  403b32:	4633      	mov	r3, r6
  403b34:	4659      	mov	r1, fp
  403b36:	f7fe fa0b 	bl	401f50 <__aeabi_ddiv>
  403b3a:	f002 f9f9 	bl	405f30 <__aeabi_d2iz>
  403b3e:	4680      	mov	r8, r0
  403b40:	f7fe f876 	bl	401c30 <__aeabi_i2d>
  403b44:	462a      	mov	r2, r5
  403b46:	4633      	mov	r3, r6
  403b48:	f7fe f8d8 	bl	401cfc <__aeabi_dmul>
  403b4c:	460b      	mov	r3, r1
  403b4e:	4602      	mov	r2, r0
  403b50:	4659      	mov	r1, fp
  403b52:	4650      	mov	r0, sl
  403b54:	f7fd ff1e 	bl	401994 <__aeabi_dsub>
  403b58:	9d04      	ldr	r5, [sp, #16]
  403b5a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403b5e:	702b      	strb	r3, [r5, #0]
  403b60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b62:	2b01      	cmp	r3, #1
  403b64:	4606      	mov	r6, r0
  403b66:	460f      	mov	r7, r1
  403b68:	f105 0501 	add.w	r5, r5, #1
  403b6c:	d068      	beq.n	403c40 <_dtoa_r+0x330>
  403b6e:	2200      	movs	r2, #0
  403b70:	4b18      	ldr	r3, [pc, #96]	; (403bd4 <_dtoa_r+0x2c4>)
  403b72:	f7fe f8c3 	bl	401cfc <__aeabi_dmul>
  403b76:	2200      	movs	r2, #0
  403b78:	2300      	movs	r3, #0
  403b7a:	4606      	mov	r6, r0
  403b7c:	460f      	mov	r7, r1
  403b7e:	f7fe fb25 	bl	4021cc <__aeabi_dcmpeq>
  403b82:	2800      	cmp	r0, #0
  403b84:	f040 8088 	bne.w	403c98 <_dtoa_r+0x388>
  403b88:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403b8c:	f04f 0a00 	mov.w	sl, #0
  403b90:	f8df b040 	ldr.w	fp, [pc, #64]	; 403bd4 <_dtoa_r+0x2c4>
  403b94:	940c      	str	r4, [sp, #48]	; 0x30
  403b96:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403b9a:	e028      	b.n	403bee <_dtoa_r+0x2de>
  403b9c:	f3af 8000 	nop.w
  403ba0:	636f4361 	.word	0x636f4361
  403ba4:	3fd287a7 	.word	0x3fd287a7
  403ba8:	8b60c8b3 	.word	0x8b60c8b3
  403bac:	3fc68a28 	.word	0x3fc68a28
  403bb0:	509f79fb 	.word	0x509f79fb
  403bb4:	3fd34413 	.word	0x3fd34413
  403bb8:	7ff00000 	.word	0x7ff00000
  403bbc:	00406d5d 	.word	0x00406d5d
  403bc0:	00406d80 	.word	0x00406d80
  403bc4:	00406d8c 	.word	0x00406d8c
  403bc8:	3ff80000 	.word	0x3ff80000
  403bcc:	00406db8 	.word	0x00406db8
  403bd0:	00406d5c 	.word	0x00406d5c
  403bd4:	40240000 	.word	0x40240000
  403bd8:	f7fe f890 	bl	401cfc <__aeabi_dmul>
  403bdc:	2200      	movs	r2, #0
  403bde:	2300      	movs	r3, #0
  403be0:	4606      	mov	r6, r0
  403be2:	460f      	mov	r7, r1
  403be4:	f7fe faf2 	bl	4021cc <__aeabi_dcmpeq>
  403be8:	2800      	cmp	r0, #0
  403bea:	f040 83c1 	bne.w	404370 <_dtoa_r+0xa60>
  403bee:	4642      	mov	r2, r8
  403bf0:	464b      	mov	r3, r9
  403bf2:	4630      	mov	r0, r6
  403bf4:	4639      	mov	r1, r7
  403bf6:	f7fe f9ab 	bl	401f50 <__aeabi_ddiv>
  403bfa:	f002 f999 	bl	405f30 <__aeabi_d2iz>
  403bfe:	4604      	mov	r4, r0
  403c00:	f7fe f816 	bl	401c30 <__aeabi_i2d>
  403c04:	4642      	mov	r2, r8
  403c06:	464b      	mov	r3, r9
  403c08:	f7fe f878 	bl	401cfc <__aeabi_dmul>
  403c0c:	4602      	mov	r2, r0
  403c0e:	460b      	mov	r3, r1
  403c10:	4630      	mov	r0, r6
  403c12:	4639      	mov	r1, r7
  403c14:	f7fd febe 	bl	401994 <__aeabi_dsub>
  403c18:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403c1c:	9e04      	ldr	r6, [sp, #16]
  403c1e:	f805 eb01 	strb.w	lr, [r5], #1
  403c22:	eba5 0e06 	sub.w	lr, r5, r6
  403c26:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403c28:	45b6      	cmp	lr, r6
  403c2a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403c2e:	4652      	mov	r2, sl
  403c30:	465b      	mov	r3, fp
  403c32:	d1d1      	bne.n	403bd8 <_dtoa_r+0x2c8>
  403c34:	46a0      	mov	r8, r4
  403c36:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403c3a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403c3c:	4606      	mov	r6, r0
  403c3e:	460f      	mov	r7, r1
  403c40:	4632      	mov	r2, r6
  403c42:	463b      	mov	r3, r7
  403c44:	4630      	mov	r0, r6
  403c46:	4639      	mov	r1, r7
  403c48:	f7fd fea6 	bl	401998 <__adddf3>
  403c4c:	4606      	mov	r6, r0
  403c4e:	460f      	mov	r7, r1
  403c50:	4602      	mov	r2, r0
  403c52:	460b      	mov	r3, r1
  403c54:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403c58:	f7fe fac2 	bl	4021e0 <__aeabi_dcmplt>
  403c5c:	b948      	cbnz	r0, 403c72 <_dtoa_r+0x362>
  403c5e:	4632      	mov	r2, r6
  403c60:	463b      	mov	r3, r7
  403c62:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403c66:	f7fe fab1 	bl	4021cc <__aeabi_dcmpeq>
  403c6a:	b1a8      	cbz	r0, 403c98 <_dtoa_r+0x388>
  403c6c:	f018 0f01 	tst.w	r8, #1
  403c70:	d012      	beq.n	403c98 <_dtoa_r+0x388>
  403c72:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403c76:	9a04      	ldr	r2, [sp, #16]
  403c78:	1e6b      	subs	r3, r5, #1
  403c7a:	e004      	b.n	403c86 <_dtoa_r+0x376>
  403c7c:	429a      	cmp	r2, r3
  403c7e:	f000 8401 	beq.w	404484 <_dtoa_r+0xb74>
  403c82:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403c86:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403c8a:	f103 0501 	add.w	r5, r3, #1
  403c8e:	d0f5      	beq.n	403c7c <_dtoa_r+0x36c>
  403c90:	f108 0801 	add.w	r8, r8, #1
  403c94:	f883 8000 	strb.w	r8, [r3]
  403c98:	4649      	mov	r1, r9
  403c9a:	4620      	mov	r0, r4
  403c9c:	f001 f95c 	bl	404f58 <_Bfree>
  403ca0:	2200      	movs	r2, #0
  403ca2:	9b02      	ldr	r3, [sp, #8]
  403ca4:	702a      	strb	r2, [r5, #0]
  403ca6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403ca8:	3301      	adds	r3, #1
  403caa:	6013      	str	r3, [r2, #0]
  403cac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403cae:	2b00      	cmp	r3, #0
  403cb0:	f000 839e 	beq.w	4043f0 <_dtoa_r+0xae0>
  403cb4:	9804      	ldr	r0, [sp, #16]
  403cb6:	601d      	str	r5, [r3, #0]
  403cb8:	b01b      	add	sp, #108	; 0x6c
  403cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403cbe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403cc0:	2a00      	cmp	r2, #0
  403cc2:	d03e      	beq.n	403d42 <_dtoa_r+0x432>
  403cc4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403cc6:	2a01      	cmp	r2, #1
  403cc8:	f340 8311 	ble.w	4042ee <_dtoa_r+0x9de>
  403ccc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403cd0:	1e5f      	subs	r7, r3, #1
  403cd2:	42ba      	cmp	r2, r7
  403cd4:	f2c0 838f 	blt.w	4043f6 <_dtoa_r+0xae6>
  403cd8:	1bd7      	subs	r7, r2, r7
  403cda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cdc:	2b00      	cmp	r3, #0
  403cde:	f2c0 848b 	blt.w	4045f8 <_dtoa_r+0xce8>
  403ce2:	9d08      	ldr	r5, [sp, #32]
  403ce4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ce6:	9a08      	ldr	r2, [sp, #32]
  403ce8:	441a      	add	r2, r3
  403cea:	9208      	str	r2, [sp, #32]
  403cec:	9a06      	ldr	r2, [sp, #24]
  403cee:	2101      	movs	r1, #1
  403cf0:	441a      	add	r2, r3
  403cf2:	4620      	mov	r0, r4
  403cf4:	9206      	str	r2, [sp, #24]
  403cf6:	f001 f9c9 	bl	40508c <__i2b>
  403cfa:	4606      	mov	r6, r0
  403cfc:	e024      	b.n	403d48 <_dtoa_r+0x438>
  403cfe:	2301      	movs	r3, #1
  403d00:	930e      	str	r3, [sp, #56]	; 0x38
  403d02:	e6af      	b.n	403a64 <_dtoa_r+0x154>
  403d04:	9a08      	ldr	r2, [sp, #32]
  403d06:	9b02      	ldr	r3, [sp, #8]
  403d08:	1ad2      	subs	r2, r2, r3
  403d0a:	425b      	negs	r3, r3
  403d0c:	930c      	str	r3, [sp, #48]	; 0x30
  403d0e:	2300      	movs	r3, #0
  403d10:	9208      	str	r2, [sp, #32]
  403d12:	930d      	str	r3, [sp, #52]	; 0x34
  403d14:	e6b8      	b.n	403a88 <_dtoa_r+0x178>
  403d16:	f1c7 0301 	rsb	r3, r7, #1
  403d1a:	9308      	str	r3, [sp, #32]
  403d1c:	2300      	movs	r3, #0
  403d1e:	9306      	str	r3, [sp, #24]
  403d20:	e6a7      	b.n	403a72 <_dtoa_r+0x162>
  403d22:	9d02      	ldr	r5, [sp, #8]
  403d24:	4628      	mov	r0, r5
  403d26:	f7fd ff83 	bl	401c30 <__aeabi_i2d>
  403d2a:	4602      	mov	r2, r0
  403d2c:	460b      	mov	r3, r1
  403d2e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403d32:	f7fe fa4b 	bl	4021cc <__aeabi_dcmpeq>
  403d36:	2800      	cmp	r0, #0
  403d38:	f47f ae80 	bne.w	403a3c <_dtoa_r+0x12c>
  403d3c:	1e6b      	subs	r3, r5, #1
  403d3e:	9302      	str	r3, [sp, #8]
  403d40:	e67c      	b.n	403a3c <_dtoa_r+0x12c>
  403d42:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403d44:	9d08      	ldr	r5, [sp, #32]
  403d46:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403d48:	2d00      	cmp	r5, #0
  403d4a:	dd0c      	ble.n	403d66 <_dtoa_r+0x456>
  403d4c:	9906      	ldr	r1, [sp, #24]
  403d4e:	2900      	cmp	r1, #0
  403d50:	460b      	mov	r3, r1
  403d52:	dd08      	ble.n	403d66 <_dtoa_r+0x456>
  403d54:	42a9      	cmp	r1, r5
  403d56:	9a08      	ldr	r2, [sp, #32]
  403d58:	bfa8      	it	ge
  403d5a:	462b      	movge	r3, r5
  403d5c:	1ad2      	subs	r2, r2, r3
  403d5e:	1aed      	subs	r5, r5, r3
  403d60:	1acb      	subs	r3, r1, r3
  403d62:	9208      	str	r2, [sp, #32]
  403d64:	9306      	str	r3, [sp, #24]
  403d66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403d68:	b1d3      	cbz	r3, 403da0 <_dtoa_r+0x490>
  403d6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403d6c:	2b00      	cmp	r3, #0
  403d6e:	f000 82b7 	beq.w	4042e0 <_dtoa_r+0x9d0>
  403d72:	2f00      	cmp	r7, #0
  403d74:	dd10      	ble.n	403d98 <_dtoa_r+0x488>
  403d76:	4631      	mov	r1, r6
  403d78:	463a      	mov	r2, r7
  403d7a:	4620      	mov	r0, r4
  403d7c:	f001 fa22 	bl	4051c4 <__pow5mult>
  403d80:	464a      	mov	r2, r9
  403d82:	4601      	mov	r1, r0
  403d84:	4606      	mov	r6, r0
  403d86:	4620      	mov	r0, r4
  403d88:	f001 f98a 	bl	4050a0 <__multiply>
  403d8c:	4649      	mov	r1, r9
  403d8e:	4680      	mov	r8, r0
  403d90:	4620      	mov	r0, r4
  403d92:	f001 f8e1 	bl	404f58 <_Bfree>
  403d96:	46c1      	mov	r9, r8
  403d98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403d9a:	1bda      	subs	r2, r3, r7
  403d9c:	f040 82a1 	bne.w	4042e2 <_dtoa_r+0x9d2>
  403da0:	2101      	movs	r1, #1
  403da2:	4620      	mov	r0, r4
  403da4:	f001 f972 	bl	40508c <__i2b>
  403da8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403daa:	2b00      	cmp	r3, #0
  403dac:	4680      	mov	r8, r0
  403dae:	dd1c      	ble.n	403dea <_dtoa_r+0x4da>
  403db0:	4601      	mov	r1, r0
  403db2:	461a      	mov	r2, r3
  403db4:	4620      	mov	r0, r4
  403db6:	f001 fa05 	bl	4051c4 <__pow5mult>
  403dba:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403dbc:	2b01      	cmp	r3, #1
  403dbe:	4680      	mov	r8, r0
  403dc0:	f340 8254 	ble.w	40426c <_dtoa_r+0x95c>
  403dc4:	2300      	movs	r3, #0
  403dc6:	930c      	str	r3, [sp, #48]	; 0x30
  403dc8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403dcc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403dd0:	6918      	ldr	r0, [r3, #16]
  403dd2:	f001 f90b 	bl	404fec <__hi0bits>
  403dd6:	f1c0 0020 	rsb	r0, r0, #32
  403dda:	e010      	b.n	403dfe <_dtoa_r+0x4ee>
  403ddc:	f1c3 0520 	rsb	r5, r3, #32
  403de0:	fa0a f005 	lsl.w	r0, sl, r5
  403de4:	e674      	b.n	403ad0 <_dtoa_r+0x1c0>
  403de6:	900e      	str	r0, [sp, #56]	; 0x38
  403de8:	e63c      	b.n	403a64 <_dtoa_r+0x154>
  403dea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403dec:	2b01      	cmp	r3, #1
  403dee:	f340 8287 	ble.w	404300 <_dtoa_r+0x9f0>
  403df2:	2300      	movs	r3, #0
  403df4:	930c      	str	r3, [sp, #48]	; 0x30
  403df6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403df8:	2001      	movs	r0, #1
  403dfa:	2b00      	cmp	r3, #0
  403dfc:	d1e4      	bne.n	403dc8 <_dtoa_r+0x4b8>
  403dfe:	9a06      	ldr	r2, [sp, #24]
  403e00:	4410      	add	r0, r2
  403e02:	f010 001f 	ands.w	r0, r0, #31
  403e06:	f000 80a1 	beq.w	403f4c <_dtoa_r+0x63c>
  403e0a:	f1c0 0320 	rsb	r3, r0, #32
  403e0e:	2b04      	cmp	r3, #4
  403e10:	f340 849e 	ble.w	404750 <_dtoa_r+0xe40>
  403e14:	9b08      	ldr	r3, [sp, #32]
  403e16:	f1c0 001c 	rsb	r0, r0, #28
  403e1a:	4403      	add	r3, r0
  403e1c:	9308      	str	r3, [sp, #32]
  403e1e:	4613      	mov	r3, r2
  403e20:	4403      	add	r3, r0
  403e22:	4405      	add	r5, r0
  403e24:	9306      	str	r3, [sp, #24]
  403e26:	9b08      	ldr	r3, [sp, #32]
  403e28:	2b00      	cmp	r3, #0
  403e2a:	dd05      	ble.n	403e38 <_dtoa_r+0x528>
  403e2c:	4649      	mov	r1, r9
  403e2e:	461a      	mov	r2, r3
  403e30:	4620      	mov	r0, r4
  403e32:	f001 fa17 	bl	405264 <__lshift>
  403e36:	4681      	mov	r9, r0
  403e38:	9b06      	ldr	r3, [sp, #24]
  403e3a:	2b00      	cmp	r3, #0
  403e3c:	dd05      	ble.n	403e4a <_dtoa_r+0x53a>
  403e3e:	4641      	mov	r1, r8
  403e40:	461a      	mov	r2, r3
  403e42:	4620      	mov	r0, r4
  403e44:	f001 fa0e 	bl	405264 <__lshift>
  403e48:	4680      	mov	r8, r0
  403e4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403e4c:	2b00      	cmp	r3, #0
  403e4e:	f040 8086 	bne.w	403f5e <_dtoa_r+0x64e>
  403e52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e54:	2b00      	cmp	r3, #0
  403e56:	f340 8266 	ble.w	404326 <_dtoa_r+0xa16>
  403e5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403e5c:	2b00      	cmp	r3, #0
  403e5e:	f000 8098 	beq.w	403f92 <_dtoa_r+0x682>
  403e62:	2d00      	cmp	r5, #0
  403e64:	dd05      	ble.n	403e72 <_dtoa_r+0x562>
  403e66:	4631      	mov	r1, r6
  403e68:	462a      	mov	r2, r5
  403e6a:	4620      	mov	r0, r4
  403e6c:	f001 f9fa 	bl	405264 <__lshift>
  403e70:	4606      	mov	r6, r0
  403e72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e74:	2b00      	cmp	r3, #0
  403e76:	f040 8337 	bne.w	4044e8 <_dtoa_r+0xbd8>
  403e7a:	9606      	str	r6, [sp, #24]
  403e7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e7e:	9a04      	ldr	r2, [sp, #16]
  403e80:	f8dd b018 	ldr.w	fp, [sp, #24]
  403e84:	3b01      	subs	r3, #1
  403e86:	18d3      	adds	r3, r2, r3
  403e88:	930b      	str	r3, [sp, #44]	; 0x2c
  403e8a:	f00a 0301 	and.w	r3, sl, #1
  403e8e:	930c      	str	r3, [sp, #48]	; 0x30
  403e90:	4617      	mov	r7, r2
  403e92:	46c2      	mov	sl, r8
  403e94:	4651      	mov	r1, sl
  403e96:	4648      	mov	r0, r9
  403e98:	f7ff fca4 	bl	4037e4 <quorem>
  403e9c:	4631      	mov	r1, r6
  403e9e:	4605      	mov	r5, r0
  403ea0:	4648      	mov	r0, r9
  403ea2:	f001 fa31 	bl	405308 <__mcmp>
  403ea6:	465a      	mov	r2, fp
  403ea8:	900a      	str	r0, [sp, #40]	; 0x28
  403eaa:	4651      	mov	r1, sl
  403eac:	4620      	mov	r0, r4
  403eae:	f001 fa47 	bl	405340 <__mdiff>
  403eb2:	68c2      	ldr	r2, [r0, #12]
  403eb4:	4680      	mov	r8, r0
  403eb6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403eba:	2a00      	cmp	r2, #0
  403ebc:	f040 822b 	bne.w	404316 <_dtoa_r+0xa06>
  403ec0:	4601      	mov	r1, r0
  403ec2:	4648      	mov	r0, r9
  403ec4:	9308      	str	r3, [sp, #32]
  403ec6:	f001 fa1f 	bl	405308 <__mcmp>
  403eca:	4641      	mov	r1, r8
  403ecc:	9006      	str	r0, [sp, #24]
  403ece:	4620      	mov	r0, r4
  403ed0:	f001 f842 	bl	404f58 <_Bfree>
  403ed4:	9a06      	ldr	r2, [sp, #24]
  403ed6:	9b08      	ldr	r3, [sp, #32]
  403ed8:	b932      	cbnz	r2, 403ee8 <_dtoa_r+0x5d8>
  403eda:	9924      	ldr	r1, [sp, #144]	; 0x90
  403edc:	b921      	cbnz	r1, 403ee8 <_dtoa_r+0x5d8>
  403ede:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403ee0:	2a00      	cmp	r2, #0
  403ee2:	f000 83ef 	beq.w	4046c4 <_dtoa_r+0xdb4>
  403ee6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403ee8:	990a      	ldr	r1, [sp, #40]	; 0x28
  403eea:	2900      	cmp	r1, #0
  403eec:	f2c0 829f 	blt.w	40442e <_dtoa_r+0xb1e>
  403ef0:	d105      	bne.n	403efe <_dtoa_r+0x5ee>
  403ef2:	9924      	ldr	r1, [sp, #144]	; 0x90
  403ef4:	b919      	cbnz	r1, 403efe <_dtoa_r+0x5ee>
  403ef6:	990c      	ldr	r1, [sp, #48]	; 0x30
  403ef8:	2900      	cmp	r1, #0
  403efa:	f000 8298 	beq.w	40442e <_dtoa_r+0xb1e>
  403efe:	2a00      	cmp	r2, #0
  403f00:	f300 8306 	bgt.w	404510 <_dtoa_r+0xc00>
  403f04:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403f06:	703b      	strb	r3, [r7, #0]
  403f08:	f107 0801 	add.w	r8, r7, #1
  403f0c:	4297      	cmp	r7, r2
  403f0e:	4645      	mov	r5, r8
  403f10:	f000 830c 	beq.w	40452c <_dtoa_r+0xc1c>
  403f14:	4649      	mov	r1, r9
  403f16:	2300      	movs	r3, #0
  403f18:	220a      	movs	r2, #10
  403f1a:	4620      	mov	r0, r4
  403f1c:	f001 f826 	bl	404f6c <__multadd>
  403f20:	455e      	cmp	r6, fp
  403f22:	4681      	mov	r9, r0
  403f24:	4631      	mov	r1, r6
  403f26:	f04f 0300 	mov.w	r3, #0
  403f2a:	f04f 020a 	mov.w	r2, #10
  403f2e:	4620      	mov	r0, r4
  403f30:	f000 81eb 	beq.w	40430a <_dtoa_r+0x9fa>
  403f34:	f001 f81a 	bl	404f6c <__multadd>
  403f38:	4659      	mov	r1, fp
  403f3a:	4606      	mov	r6, r0
  403f3c:	2300      	movs	r3, #0
  403f3e:	220a      	movs	r2, #10
  403f40:	4620      	mov	r0, r4
  403f42:	f001 f813 	bl	404f6c <__multadd>
  403f46:	4647      	mov	r7, r8
  403f48:	4683      	mov	fp, r0
  403f4a:	e7a3      	b.n	403e94 <_dtoa_r+0x584>
  403f4c:	201c      	movs	r0, #28
  403f4e:	9b08      	ldr	r3, [sp, #32]
  403f50:	4403      	add	r3, r0
  403f52:	9308      	str	r3, [sp, #32]
  403f54:	9b06      	ldr	r3, [sp, #24]
  403f56:	4403      	add	r3, r0
  403f58:	4405      	add	r5, r0
  403f5a:	9306      	str	r3, [sp, #24]
  403f5c:	e763      	b.n	403e26 <_dtoa_r+0x516>
  403f5e:	4641      	mov	r1, r8
  403f60:	4648      	mov	r0, r9
  403f62:	f001 f9d1 	bl	405308 <__mcmp>
  403f66:	2800      	cmp	r0, #0
  403f68:	f6bf af73 	bge.w	403e52 <_dtoa_r+0x542>
  403f6c:	9f02      	ldr	r7, [sp, #8]
  403f6e:	4649      	mov	r1, r9
  403f70:	2300      	movs	r3, #0
  403f72:	220a      	movs	r2, #10
  403f74:	4620      	mov	r0, r4
  403f76:	3f01      	subs	r7, #1
  403f78:	9702      	str	r7, [sp, #8]
  403f7a:	f000 fff7 	bl	404f6c <__multadd>
  403f7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403f80:	4681      	mov	r9, r0
  403f82:	2b00      	cmp	r3, #0
  403f84:	f040 83b6 	bne.w	4046f4 <_dtoa_r+0xde4>
  403f88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403f8a:	2b00      	cmp	r3, #0
  403f8c:	f340 83bf 	ble.w	40470e <_dtoa_r+0xdfe>
  403f90:	930a      	str	r3, [sp, #40]	; 0x28
  403f92:	f8dd b010 	ldr.w	fp, [sp, #16]
  403f96:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403f98:	465d      	mov	r5, fp
  403f9a:	e002      	b.n	403fa2 <_dtoa_r+0x692>
  403f9c:	f000 ffe6 	bl	404f6c <__multadd>
  403fa0:	4681      	mov	r9, r0
  403fa2:	4641      	mov	r1, r8
  403fa4:	4648      	mov	r0, r9
  403fa6:	f7ff fc1d 	bl	4037e4 <quorem>
  403faa:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403fae:	f805 ab01 	strb.w	sl, [r5], #1
  403fb2:	eba5 030b 	sub.w	r3, r5, fp
  403fb6:	42bb      	cmp	r3, r7
  403fb8:	f04f 020a 	mov.w	r2, #10
  403fbc:	f04f 0300 	mov.w	r3, #0
  403fc0:	4649      	mov	r1, r9
  403fc2:	4620      	mov	r0, r4
  403fc4:	dbea      	blt.n	403f9c <_dtoa_r+0x68c>
  403fc6:	9b04      	ldr	r3, [sp, #16]
  403fc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403fca:	2a01      	cmp	r2, #1
  403fcc:	bfac      	ite	ge
  403fce:	189b      	addge	r3, r3, r2
  403fd0:	3301      	addlt	r3, #1
  403fd2:	461d      	mov	r5, r3
  403fd4:	f04f 0b00 	mov.w	fp, #0
  403fd8:	4649      	mov	r1, r9
  403fda:	2201      	movs	r2, #1
  403fdc:	4620      	mov	r0, r4
  403fde:	f001 f941 	bl	405264 <__lshift>
  403fe2:	4641      	mov	r1, r8
  403fe4:	4681      	mov	r9, r0
  403fe6:	f001 f98f 	bl	405308 <__mcmp>
  403fea:	2800      	cmp	r0, #0
  403fec:	f340 823d 	ble.w	40446a <_dtoa_r+0xb5a>
  403ff0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403ff4:	9904      	ldr	r1, [sp, #16]
  403ff6:	1e6b      	subs	r3, r5, #1
  403ff8:	e004      	b.n	404004 <_dtoa_r+0x6f4>
  403ffa:	428b      	cmp	r3, r1
  403ffc:	f000 81ae 	beq.w	40435c <_dtoa_r+0xa4c>
  404000:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  404004:	2a39      	cmp	r2, #57	; 0x39
  404006:	f103 0501 	add.w	r5, r3, #1
  40400a:	d0f6      	beq.n	403ffa <_dtoa_r+0x6ea>
  40400c:	3201      	adds	r2, #1
  40400e:	701a      	strb	r2, [r3, #0]
  404010:	4641      	mov	r1, r8
  404012:	4620      	mov	r0, r4
  404014:	f000 ffa0 	bl	404f58 <_Bfree>
  404018:	2e00      	cmp	r6, #0
  40401a:	f43f ae3d 	beq.w	403c98 <_dtoa_r+0x388>
  40401e:	f1bb 0f00 	cmp.w	fp, #0
  404022:	d005      	beq.n	404030 <_dtoa_r+0x720>
  404024:	45b3      	cmp	fp, r6
  404026:	d003      	beq.n	404030 <_dtoa_r+0x720>
  404028:	4659      	mov	r1, fp
  40402a:	4620      	mov	r0, r4
  40402c:	f000 ff94 	bl	404f58 <_Bfree>
  404030:	4631      	mov	r1, r6
  404032:	4620      	mov	r0, r4
  404034:	f000 ff90 	bl	404f58 <_Bfree>
  404038:	e62e      	b.n	403c98 <_dtoa_r+0x388>
  40403a:	2300      	movs	r3, #0
  40403c:	930b      	str	r3, [sp, #44]	; 0x2c
  40403e:	9b02      	ldr	r3, [sp, #8]
  404040:	9a25      	ldr	r2, [sp, #148]	; 0x94
  404042:	4413      	add	r3, r2
  404044:	930f      	str	r3, [sp, #60]	; 0x3c
  404046:	3301      	adds	r3, #1
  404048:	2b01      	cmp	r3, #1
  40404a:	461f      	mov	r7, r3
  40404c:	461e      	mov	r6, r3
  40404e:	930a      	str	r3, [sp, #40]	; 0x28
  404050:	bfb8      	it	lt
  404052:	2701      	movlt	r7, #1
  404054:	2100      	movs	r1, #0
  404056:	2f17      	cmp	r7, #23
  404058:	6461      	str	r1, [r4, #68]	; 0x44
  40405a:	d90a      	bls.n	404072 <_dtoa_r+0x762>
  40405c:	2201      	movs	r2, #1
  40405e:	2304      	movs	r3, #4
  404060:	005b      	lsls	r3, r3, #1
  404062:	f103 0014 	add.w	r0, r3, #20
  404066:	4287      	cmp	r7, r0
  404068:	4611      	mov	r1, r2
  40406a:	f102 0201 	add.w	r2, r2, #1
  40406e:	d2f7      	bcs.n	404060 <_dtoa_r+0x750>
  404070:	6461      	str	r1, [r4, #68]	; 0x44
  404072:	4620      	mov	r0, r4
  404074:	f000 ff4a 	bl	404f0c <_Balloc>
  404078:	2e0e      	cmp	r6, #14
  40407a:	9004      	str	r0, [sp, #16]
  40407c:	6420      	str	r0, [r4, #64]	; 0x40
  40407e:	f63f ad41 	bhi.w	403b04 <_dtoa_r+0x1f4>
  404082:	2d00      	cmp	r5, #0
  404084:	f43f ad3e 	beq.w	403b04 <_dtoa_r+0x1f4>
  404088:	9902      	ldr	r1, [sp, #8]
  40408a:	2900      	cmp	r1, #0
  40408c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404090:	f340 8202 	ble.w	404498 <_dtoa_r+0xb88>
  404094:	4bb8      	ldr	r3, [pc, #736]	; (404378 <_dtoa_r+0xa68>)
  404096:	f001 020f 	and.w	r2, r1, #15
  40409a:	110d      	asrs	r5, r1, #4
  40409c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4040a0:	06e9      	lsls	r1, r5, #27
  4040a2:	e9d3 6700 	ldrd	r6, r7, [r3]
  4040a6:	f140 81ae 	bpl.w	404406 <_dtoa_r+0xaf6>
  4040aa:	4bb4      	ldr	r3, [pc, #720]	; (40437c <_dtoa_r+0xa6c>)
  4040ac:	4650      	mov	r0, sl
  4040ae:	4659      	mov	r1, fp
  4040b0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4040b4:	f7fd ff4c 	bl	401f50 <__aeabi_ddiv>
  4040b8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4040bc:	f005 050f 	and.w	r5, r5, #15
  4040c0:	f04f 0a03 	mov.w	sl, #3
  4040c4:	b18d      	cbz	r5, 4040ea <_dtoa_r+0x7da>
  4040c6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 40437c <_dtoa_r+0xa6c>
  4040ca:	07ea      	lsls	r2, r5, #31
  4040cc:	d509      	bpl.n	4040e2 <_dtoa_r+0x7d2>
  4040ce:	4630      	mov	r0, r6
  4040d0:	4639      	mov	r1, r7
  4040d2:	e9d8 2300 	ldrd	r2, r3, [r8]
  4040d6:	f7fd fe11 	bl	401cfc <__aeabi_dmul>
  4040da:	f10a 0a01 	add.w	sl, sl, #1
  4040de:	4606      	mov	r6, r0
  4040e0:	460f      	mov	r7, r1
  4040e2:	106d      	asrs	r5, r5, #1
  4040e4:	f108 0808 	add.w	r8, r8, #8
  4040e8:	d1ef      	bne.n	4040ca <_dtoa_r+0x7ba>
  4040ea:	463b      	mov	r3, r7
  4040ec:	4632      	mov	r2, r6
  4040ee:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4040f2:	f7fd ff2d 	bl	401f50 <__aeabi_ddiv>
  4040f6:	4607      	mov	r7, r0
  4040f8:	4688      	mov	r8, r1
  4040fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4040fc:	b143      	cbz	r3, 404110 <_dtoa_r+0x800>
  4040fe:	2200      	movs	r2, #0
  404100:	4b9f      	ldr	r3, [pc, #636]	; (404380 <_dtoa_r+0xa70>)
  404102:	4638      	mov	r0, r7
  404104:	4641      	mov	r1, r8
  404106:	f7fe f86b 	bl	4021e0 <__aeabi_dcmplt>
  40410a:	2800      	cmp	r0, #0
  40410c:	f040 8286 	bne.w	40461c <_dtoa_r+0xd0c>
  404110:	4650      	mov	r0, sl
  404112:	f7fd fd8d 	bl	401c30 <__aeabi_i2d>
  404116:	463a      	mov	r2, r7
  404118:	4643      	mov	r3, r8
  40411a:	f7fd fdef 	bl	401cfc <__aeabi_dmul>
  40411e:	4b99      	ldr	r3, [pc, #612]	; (404384 <_dtoa_r+0xa74>)
  404120:	2200      	movs	r2, #0
  404122:	f7fd fc39 	bl	401998 <__adddf3>
  404126:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404128:	4605      	mov	r5, r0
  40412a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40412e:	2b00      	cmp	r3, #0
  404130:	f000 813e 	beq.w	4043b0 <_dtoa_r+0xaa0>
  404134:	9b02      	ldr	r3, [sp, #8]
  404136:	9315      	str	r3, [sp, #84]	; 0x54
  404138:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40413a:	9312      	str	r3, [sp, #72]	; 0x48
  40413c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40413e:	2b00      	cmp	r3, #0
  404140:	f000 81fa 	beq.w	404538 <_dtoa_r+0xc28>
  404144:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404146:	4b8c      	ldr	r3, [pc, #560]	; (404378 <_dtoa_r+0xa68>)
  404148:	498f      	ldr	r1, [pc, #572]	; (404388 <_dtoa_r+0xa78>)
  40414a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40414e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  404152:	2000      	movs	r0, #0
  404154:	f7fd fefc 	bl	401f50 <__aeabi_ddiv>
  404158:	462a      	mov	r2, r5
  40415a:	4633      	mov	r3, r6
  40415c:	f7fd fc1a 	bl	401994 <__aeabi_dsub>
  404160:	4682      	mov	sl, r0
  404162:	468b      	mov	fp, r1
  404164:	4638      	mov	r0, r7
  404166:	4641      	mov	r1, r8
  404168:	f001 fee2 	bl	405f30 <__aeabi_d2iz>
  40416c:	4605      	mov	r5, r0
  40416e:	f7fd fd5f 	bl	401c30 <__aeabi_i2d>
  404172:	4602      	mov	r2, r0
  404174:	460b      	mov	r3, r1
  404176:	4638      	mov	r0, r7
  404178:	4641      	mov	r1, r8
  40417a:	f7fd fc0b 	bl	401994 <__aeabi_dsub>
  40417e:	3530      	adds	r5, #48	; 0x30
  404180:	fa5f f885 	uxtb.w	r8, r5
  404184:	9d04      	ldr	r5, [sp, #16]
  404186:	4606      	mov	r6, r0
  404188:	460f      	mov	r7, r1
  40418a:	f885 8000 	strb.w	r8, [r5]
  40418e:	4602      	mov	r2, r0
  404190:	460b      	mov	r3, r1
  404192:	4650      	mov	r0, sl
  404194:	4659      	mov	r1, fp
  404196:	3501      	adds	r5, #1
  404198:	f7fe f840 	bl	40221c <__aeabi_dcmpgt>
  40419c:	2800      	cmp	r0, #0
  40419e:	d154      	bne.n	40424a <_dtoa_r+0x93a>
  4041a0:	4632      	mov	r2, r6
  4041a2:	463b      	mov	r3, r7
  4041a4:	2000      	movs	r0, #0
  4041a6:	4976      	ldr	r1, [pc, #472]	; (404380 <_dtoa_r+0xa70>)
  4041a8:	f7fd fbf4 	bl	401994 <__aeabi_dsub>
  4041ac:	4602      	mov	r2, r0
  4041ae:	460b      	mov	r3, r1
  4041b0:	4650      	mov	r0, sl
  4041b2:	4659      	mov	r1, fp
  4041b4:	f7fe f832 	bl	40221c <__aeabi_dcmpgt>
  4041b8:	2800      	cmp	r0, #0
  4041ba:	f040 8270 	bne.w	40469e <_dtoa_r+0xd8e>
  4041be:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4041c0:	2a01      	cmp	r2, #1
  4041c2:	f000 8111 	beq.w	4043e8 <_dtoa_r+0xad8>
  4041c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041c8:	9a04      	ldr	r2, [sp, #16]
  4041ca:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4041ce:	4413      	add	r3, r2
  4041d0:	4699      	mov	r9, r3
  4041d2:	e00d      	b.n	4041f0 <_dtoa_r+0x8e0>
  4041d4:	2000      	movs	r0, #0
  4041d6:	496a      	ldr	r1, [pc, #424]	; (404380 <_dtoa_r+0xa70>)
  4041d8:	f7fd fbdc 	bl	401994 <__aeabi_dsub>
  4041dc:	4652      	mov	r2, sl
  4041de:	465b      	mov	r3, fp
  4041e0:	f7fd fffe 	bl	4021e0 <__aeabi_dcmplt>
  4041e4:	2800      	cmp	r0, #0
  4041e6:	f040 8258 	bne.w	40469a <_dtoa_r+0xd8a>
  4041ea:	454d      	cmp	r5, r9
  4041ec:	f000 80fa 	beq.w	4043e4 <_dtoa_r+0xad4>
  4041f0:	4650      	mov	r0, sl
  4041f2:	4659      	mov	r1, fp
  4041f4:	2200      	movs	r2, #0
  4041f6:	4b65      	ldr	r3, [pc, #404]	; (40438c <_dtoa_r+0xa7c>)
  4041f8:	f7fd fd80 	bl	401cfc <__aeabi_dmul>
  4041fc:	2200      	movs	r2, #0
  4041fe:	4b63      	ldr	r3, [pc, #396]	; (40438c <_dtoa_r+0xa7c>)
  404200:	4682      	mov	sl, r0
  404202:	468b      	mov	fp, r1
  404204:	4630      	mov	r0, r6
  404206:	4639      	mov	r1, r7
  404208:	f7fd fd78 	bl	401cfc <__aeabi_dmul>
  40420c:	460f      	mov	r7, r1
  40420e:	4606      	mov	r6, r0
  404210:	f001 fe8e 	bl	405f30 <__aeabi_d2iz>
  404214:	4680      	mov	r8, r0
  404216:	f7fd fd0b 	bl	401c30 <__aeabi_i2d>
  40421a:	4602      	mov	r2, r0
  40421c:	460b      	mov	r3, r1
  40421e:	4630      	mov	r0, r6
  404220:	4639      	mov	r1, r7
  404222:	f7fd fbb7 	bl	401994 <__aeabi_dsub>
  404226:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40422a:	fa5f f888 	uxtb.w	r8, r8
  40422e:	4652      	mov	r2, sl
  404230:	465b      	mov	r3, fp
  404232:	f805 8b01 	strb.w	r8, [r5], #1
  404236:	4606      	mov	r6, r0
  404238:	460f      	mov	r7, r1
  40423a:	f7fd ffd1 	bl	4021e0 <__aeabi_dcmplt>
  40423e:	4632      	mov	r2, r6
  404240:	463b      	mov	r3, r7
  404242:	2800      	cmp	r0, #0
  404244:	d0c6      	beq.n	4041d4 <_dtoa_r+0x8c4>
  404246:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40424a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40424c:	9302      	str	r3, [sp, #8]
  40424e:	e523      	b.n	403c98 <_dtoa_r+0x388>
  404250:	2300      	movs	r3, #0
  404252:	930b      	str	r3, [sp, #44]	; 0x2c
  404254:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404256:	2b00      	cmp	r3, #0
  404258:	f340 80dc 	ble.w	404414 <_dtoa_r+0xb04>
  40425c:	461f      	mov	r7, r3
  40425e:	461e      	mov	r6, r3
  404260:	930f      	str	r3, [sp, #60]	; 0x3c
  404262:	930a      	str	r3, [sp, #40]	; 0x28
  404264:	e6f6      	b.n	404054 <_dtoa_r+0x744>
  404266:	2301      	movs	r3, #1
  404268:	930b      	str	r3, [sp, #44]	; 0x2c
  40426a:	e7f3      	b.n	404254 <_dtoa_r+0x944>
  40426c:	f1ba 0f00 	cmp.w	sl, #0
  404270:	f47f ada8 	bne.w	403dc4 <_dtoa_r+0x4b4>
  404274:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404278:	2b00      	cmp	r3, #0
  40427a:	f47f adba 	bne.w	403df2 <_dtoa_r+0x4e2>
  40427e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404282:	0d3f      	lsrs	r7, r7, #20
  404284:	053f      	lsls	r7, r7, #20
  404286:	2f00      	cmp	r7, #0
  404288:	f000 820d 	beq.w	4046a6 <_dtoa_r+0xd96>
  40428c:	9b08      	ldr	r3, [sp, #32]
  40428e:	3301      	adds	r3, #1
  404290:	9308      	str	r3, [sp, #32]
  404292:	9b06      	ldr	r3, [sp, #24]
  404294:	3301      	adds	r3, #1
  404296:	9306      	str	r3, [sp, #24]
  404298:	2301      	movs	r3, #1
  40429a:	930c      	str	r3, [sp, #48]	; 0x30
  40429c:	e5ab      	b.n	403df6 <_dtoa_r+0x4e6>
  40429e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042a0:	2b00      	cmp	r3, #0
  4042a2:	f73f ac42 	bgt.w	403b2a <_dtoa_r+0x21a>
  4042a6:	f040 8221 	bne.w	4046ec <_dtoa_r+0xddc>
  4042aa:	2200      	movs	r2, #0
  4042ac:	4b38      	ldr	r3, [pc, #224]	; (404390 <_dtoa_r+0xa80>)
  4042ae:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4042b2:	f7fd fd23 	bl	401cfc <__aeabi_dmul>
  4042b6:	4652      	mov	r2, sl
  4042b8:	465b      	mov	r3, fp
  4042ba:	f7fd ffa5 	bl	402208 <__aeabi_dcmpge>
  4042be:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4042c2:	4646      	mov	r6, r8
  4042c4:	2800      	cmp	r0, #0
  4042c6:	d041      	beq.n	40434c <_dtoa_r+0xa3c>
  4042c8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4042ca:	9d04      	ldr	r5, [sp, #16]
  4042cc:	43db      	mvns	r3, r3
  4042ce:	9302      	str	r3, [sp, #8]
  4042d0:	4641      	mov	r1, r8
  4042d2:	4620      	mov	r0, r4
  4042d4:	f000 fe40 	bl	404f58 <_Bfree>
  4042d8:	2e00      	cmp	r6, #0
  4042da:	f43f acdd 	beq.w	403c98 <_dtoa_r+0x388>
  4042de:	e6a7      	b.n	404030 <_dtoa_r+0x720>
  4042e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4042e2:	4649      	mov	r1, r9
  4042e4:	4620      	mov	r0, r4
  4042e6:	f000 ff6d 	bl	4051c4 <__pow5mult>
  4042ea:	4681      	mov	r9, r0
  4042ec:	e558      	b.n	403da0 <_dtoa_r+0x490>
  4042ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4042f0:	2a00      	cmp	r2, #0
  4042f2:	f000 8187 	beq.w	404604 <_dtoa_r+0xcf4>
  4042f6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4042fa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4042fc:	9d08      	ldr	r5, [sp, #32]
  4042fe:	e4f2      	b.n	403ce6 <_dtoa_r+0x3d6>
  404300:	f1ba 0f00 	cmp.w	sl, #0
  404304:	f47f ad75 	bne.w	403df2 <_dtoa_r+0x4e2>
  404308:	e7b4      	b.n	404274 <_dtoa_r+0x964>
  40430a:	f000 fe2f 	bl	404f6c <__multadd>
  40430e:	4647      	mov	r7, r8
  404310:	4606      	mov	r6, r0
  404312:	4683      	mov	fp, r0
  404314:	e5be      	b.n	403e94 <_dtoa_r+0x584>
  404316:	4601      	mov	r1, r0
  404318:	4620      	mov	r0, r4
  40431a:	9306      	str	r3, [sp, #24]
  40431c:	f000 fe1c 	bl	404f58 <_Bfree>
  404320:	2201      	movs	r2, #1
  404322:	9b06      	ldr	r3, [sp, #24]
  404324:	e5e0      	b.n	403ee8 <_dtoa_r+0x5d8>
  404326:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404328:	2b02      	cmp	r3, #2
  40432a:	f77f ad96 	ble.w	403e5a <_dtoa_r+0x54a>
  40432e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404330:	2b00      	cmp	r3, #0
  404332:	d1c9      	bne.n	4042c8 <_dtoa_r+0x9b8>
  404334:	4641      	mov	r1, r8
  404336:	2205      	movs	r2, #5
  404338:	4620      	mov	r0, r4
  40433a:	f000 fe17 	bl	404f6c <__multadd>
  40433e:	4601      	mov	r1, r0
  404340:	4680      	mov	r8, r0
  404342:	4648      	mov	r0, r9
  404344:	f000 ffe0 	bl	405308 <__mcmp>
  404348:	2800      	cmp	r0, #0
  40434a:	ddbd      	ble.n	4042c8 <_dtoa_r+0x9b8>
  40434c:	9a02      	ldr	r2, [sp, #8]
  40434e:	9904      	ldr	r1, [sp, #16]
  404350:	2331      	movs	r3, #49	; 0x31
  404352:	3201      	adds	r2, #1
  404354:	9202      	str	r2, [sp, #8]
  404356:	700b      	strb	r3, [r1, #0]
  404358:	1c4d      	adds	r5, r1, #1
  40435a:	e7b9      	b.n	4042d0 <_dtoa_r+0x9c0>
  40435c:	9a02      	ldr	r2, [sp, #8]
  40435e:	3201      	adds	r2, #1
  404360:	9202      	str	r2, [sp, #8]
  404362:	9a04      	ldr	r2, [sp, #16]
  404364:	2331      	movs	r3, #49	; 0x31
  404366:	7013      	strb	r3, [r2, #0]
  404368:	e652      	b.n	404010 <_dtoa_r+0x700>
  40436a:	2301      	movs	r3, #1
  40436c:	930b      	str	r3, [sp, #44]	; 0x2c
  40436e:	e666      	b.n	40403e <_dtoa_r+0x72e>
  404370:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  404374:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404376:	e48f      	b.n	403c98 <_dtoa_r+0x388>
  404378:	00406db8 	.word	0x00406db8
  40437c:	00406d90 	.word	0x00406d90
  404380:	3ff00000 	.word	0x3ff00000
  404384:	401c0000 	.word	0x401c0000
  404388:	3fe00000 	.word	0x3fe00000
  40438c:	40240000 	.word	0x40240000
  404390:	40140000 	.word	0x40140000
  404394:	4650      	mov	r0, sl
  404396:	f7fd fc4b 	bl	401c30 <__aeabi_i2d>
  40439a:	463a      	mov	r2, r7
  40439c:	4643      	mov	r3, r8
  40439e:	f7fd fcad 	bl	401cfc <__aeabi_dmul>
  4043a2:	2200      	movs	r2, #0
  4043a4:	4bc1      	ldr	r3, [pc, #772]	; (4046ac <_dtoa_r+0xd9c>)
  4043a6:	f7fd faf7 	bl	401998 <__adddf3>
  4043aa:	4605      	mov	r5, r0
  4043ac:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4043b0:	4641      	mov	r1, r8
  4043b2:	2200      	movs	r2, #0
  4043b4:	4bbe      	ldr	r3, [pc, #760]	; (4046b0 <_dtoa_r+0xda0>)
  4043b6:	4638      	mov	r0, r7
  4043b8:	f7fd faec 	bl	401994 <__aeabi_dsub>
  4043bc:	462a      	mov	r2, r5
  4043be:	4633      	mov	r3, r6
  4043c0:	4682      	mov	sl, r0
  4043c2:	468b      	mov	fp, r1
  4043c4:	f7fd ff2a 	bl	40221c <__aeabi_dcmpgt>
  4043c8:	4680      	mov	r8, r0
  4043ca:	2800      	cmp	r0, #0
  4043cc:	f040 8110 	bne.w	4045f0 <_dtoa_r+0xce0>
  4043d0:	462a      	mov	r2, r5
  4043d2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4043d6:	4650      	mov	r0, sl
  4043d8:	4659      	mov	r1, fp
  4043da:	f7fd ff01 	bl	4021e0 <__aeabi_dcmplt>
  4043de:	b118      	cbz	r0, 4043e8 <_dtoa_r+0xad8>
  4043e0:	4646      	mov	r6, r8
  4043e2:	e771      	b.n	4042c8 <_dtoa_r+0x9b8>
  4043e4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4043e8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4043ec:	f7ff bb8a 	b.w	403b04 <_dtoa_r+0x1f4>
  4043f0:	9804      	ldr	r0, [sp, #16]
  4043f2:	f7ff babb 	b.w	40396c <_dtoa_r+0x5c>
  4043f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4043f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4043fa:	970c      	str	r7, [sp, #48]	; 0x30
  4043fc:	1afb      	subs	r3, r7, r3
  4043fe:	441a      	add	r2, r3
  404400:	920d      	str	r2, [sp, #52]	; 0x34
  404402:	2700      	movs	r7, #0
  404404:	e469      	b.n	403cda <_dtoa_r+0x3ca>
  404406:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  40440a:	f04f 0a02 	mov.w	sl, #2
  40440e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404412:	e657      	b.n	4040c4 <_dtoa_r+0x7b4>
  404414:	2100      	movs	r1, #0
  404416:	2301      	movs	r3, #1
  404418:	6461      	str	r1, [r4, #68]	; 0x44
  40441a:	4620      	mov	r0, r4
  40441c:	9325      	str	r3, [sp, #148]	; 0x94
  40441e:	f000 fd75 	bl	404f0c <_Balloc>
  404422:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404424:	9004      	str	r0, [sp, #16]
  404426:	6420      	str	r0, [r4, #64]	; 0x40
  404428:	930a      	str	r3, [sp, #40]	; 0x28
  40442a:	930f      	str	r3, [sp, #60]	; 0x3c
  40442c:	e629      	b.n	404082 <_dtoa_r+0x772>
  40442e:	2a00      	cmp	r2, #0
  404430:	46d0      	mov	r8, sl
  404432:	f8cd b018 	str.w	fp, [sp, #24]
  404436:	469a      	mov	sl, r3
  404438:	dd11      	ble.n	40445e <_dtoa_r+0xb4e>
  40443a:	4649      	mov	r1, r9
  40443c:	2201      	movs	r2, #1
  40443e:	4620      	mov	r0, r4
  404440:	f000 ff10 	bl	405264 <__lshift>
  404444:	4641      	mov	r1, r8
  404446:	4681      	mov	r9, r0
  404448:	f000 ff5e 	bl	405308 <__mcmp>
  40444c:	2800      	cmp	r0, #0
  40444e:	f340 8146 	ble.w	4046de <_dtoa_r+0xdce>
  404452:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  404456:	f000 8106 	beq.w	404666 <_dtoa_r+0xd56>
  40445a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40445e:	46b3      	mov	fp, r6
  404460:	f887 a000 	strb.w	sl, [r7]
  404464:	1c7d      	adds	r5, r7, #1
  404466:	9e06      	ldr	r6, [sp, #24]
  404468:	e5d2      	b.n	404010 <_dtoa_r+0x700>
  40446a:	d104      	bne.n	404476 <_dtoa_r+0xb66>
  40446c:	f01a 0f01 	tst.w	sl, #1
  404470:	d001      	beq.n	404476 <_dtoa_r+0xb66>
  404472:	e5bd      	b.n	403ff0 <_dtoa_r+0x6e0>
  404474:	4615      	mov	r5, r2
  404476:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40447a:	2b30      	cmp	r3, #48	; 0x30
  40447c:	f105 32ff 	add.w	r2, r5, #4294967295
  404480:	d0f8      	beq.n	404474 <_dtoa_r+0xb64>
  404482:	e5c5      	b.n	404010 <_dtoa_r+0x700>
  404484:	9904      	ldr	r1, [sp, #16]
  404486:	2230      	movs	r2, #48	; 0x30
  404488:	700a      	strb	r2, [r1, #0]
  40448a:	9a02      	ldr	r2, [sp, #8]
  40448c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404490:	3201      	adds	r2, #1
  404492:	9202      	str	r2, [sp, #8]
  404494:	f7ff bbfc 	b.w	403c90 <_dtoa_r+0x380>
  404498:	f000 80bb 	beq.w	404612 <_dtoa_r+0xd02>
  40449c:	9b02      	ldr	r3, [sp, #8]
  40449e:	425d      	negs	r5, r3
  4044a0:	4b84      	ldr	r3, [pc, #528]	; (4046b4 <_dtoa_r+0xda4>)
  4044a2:	f005 020f 	and.w	r2, r5, #15
  4044a6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4044aa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4044ae:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4044b2:	f7fd fc23 	bl	401cfc <__aeabi_dmul>
  4044b6:	112d      	asrs	r5, r5, #4
  4044b8:	4607      	mov	r7, r0
  4044ba:	4688      	mov	r8, r1
  4044bc:	f000 812c 	beq.w	404718 <_dtoa_r+0xe08>
  4044c0:	4e7d      	ldr	r6, [pc, #500]	; (4046b8 <_dtoa_r+0xda8>)
  4044c2:	f04f 0a02 	mov.w	sl, #2
  4044c6:	07eb      	lsls	r3, r5, #31
  4044c8:	d509      	bpl.n	4044de <_dtoa_r+0xbce>
  4044ca:	4638      	mov	r0, r7
  4044cc:	4641      	mov	r1, r8
  4044ce:	e9d6 2300 	ldrd	r2, r3, [r6]
  4044d2:	f7fd fc13 	bl	401cfc <__aeabi_dmul>
  4044d6:	f10a 0a01 	add.w	sl, sl, #1
  4044da:	4607      	mov	r7, r0
  4044dc:	4688      	mov	r8, r1
  4044de:	106d      	asrs	r5, r5, #1
  4044e0:	f106 0608 	add.w	r6, r6, #8
  4044e4:	d1ef      	bne.n	4044c6 <_dtoa_r+0xbb6>
  4044e6:	e608      	b.n	4040fa <_dtoa_r+0x7ea>
  4044e8:	6871      	ldr	r1, [r6, #4]
  4044ea:	4620      	mov	r0, r4
  4044ec:	f000 fd0e 	bl	404f0c <_Balloc>
  4044f0:	6933      	ldr	r3, [r6, #16]
  4044f2:	3302      	adds	r3, #2
  4044f4:	009a      	lsls	r2, r3, #2
  4044f6:	4605      	mov	r5, r0
  4044f8:	f106 010c 	add.w	r1, r6, #12
  4044fc:	300c      	adds	r0, #12
  4044fe:	f000 fc5f 	bl	404dc0 <memcpy>
  404502:	4629      	mov	r1, r5
  404504:	2201      	movs	r2, #1
  404506:	4620      	mov	r0, r4
  404508:	f000 feac 	bl	405264 <__lshift>
  40450c:	9006      	str	r0, [sp, #24]
  40450e:	e4b5      	b.n	403e7c <_dtoa_r+0x56c>
  404510:	2b39      	cmp	r3, #57	; 0x39
  404512:	f8cd b018 	str.w	fp, [sp, #24]
  404516:	46d0      	mov	r8, sl
  404518:	f000 80a5 	beq.w	404666 <_dtoa_r+0xd56>
  40451c:	f103 0a01 	add.w	sl, r3, #1
  404520:	46b3      	mov	fp, r6
  404522:	f887 a000 	strb.w	sl, [r7]
  404526:	1c7d      	adds	r5, r7, #1
  404528:	9e06      	ldr	r6, [sp, #24]
  40452a:	e571      	b.n	404010 <_dtoa_r+0x700>
  40452c:	465a      	mov	r2, fp
  40452e:	46d0      	mov	r8, sl
  404530:	46b3      	mov	fp, r6
  404532:	469a      	mov	sl, r3
  404534:	4616      	mov	r6, r2
  404536:	e54f      	b.n	403fd8 <_dtoa_r+0x6c8>
  404538:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40453a:	495e      	ldr	r1, [pc, #376]	; (4046b4 <_dtoa_r+0xda4>)
  40453c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404540:	462a      	mov	r2, r5
  404542:	4633      	mov	r3, r6
  404544:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404548:	f7fd fbd8 	bl	401cfc <__aeabi_dmul>
  40454c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404550:	4638      	mov	r0, r7
  404552:	4641      	mov	r1, r8
  404554:	f001 fcec 	bl	405f30 <__aeabi_d2iz>
  404558:	4605      	mov	r5, r0
  40455a:	f7fd fb69 	bl	401c30 <__aeabi_i2d>
  40455e:	460b      	mov	r3, r1
  404560:	4602      	mov	r2, r0
  404562:	4641      	mov	r1, r8
  404564:	4638      	mov	r0, r7
  404566:	f7fd fa15 	bl	401994 <__aeabi_dsub>
  40456a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40456c:	460f      	mov	r7, r1
  40456e:	9904      	ldr	r1, [sp, #16]
  404570:	3530      	adds	r5, #48	; 0x30
  404572:	2b01      	cmp	r3, #1
  404574:	700d      	strb	r5, [r1, #0]
  404576:	4606      	mov	r6, r0
  404578:	f101 0501 	add.w	r5, r1, #1
  40457c:	d026      	beq.n	4045cc <_dtoa_r+0xcbc>
  40457e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404580:	9a04      	ldr	r2, [sp, #16]
  404582:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4046c0 <_dtoa_r+0xdb0>
  404586:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40458a:	4413      	add	r3, r2
  40458c:	f04f 0a00 	mov.w	sl, #0
  404590:	4699      	mov	r9, r3
  404592:	4652      	mov	r2, sl
  404594:	465b      	mov	r3, fp
  404596:	4630      	mov	r0, r6
  404598:	4639      	mov	r1, r7
  40459a:	f7fd fbaf 	bl	401cfc <__aeabi_dmul>
  40459e:	460f      	mov	r7, r1
  4045a0:	4606      	mov	r6, r0
  4045a2:	f001 fcc5 	bl	405f30 <__aeabi_d2iz>
  4045a6:	4680      	mov	r8, r0
  4045a8:	f7fd fb42 	bl	401c30 <__aeabi_i2d>
  4045ac:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4045b0:	4602      	mov	r2, r0
  4045b2:	460b      	mov	r3, r1
  4045b4:	4630      	mov	r0, r6
  4045b6:	4639      	mov	r1, r7
  4045b8:	f7fd f9ec 	bl	401994 <__aeabi_dsub>
  4045bc:	f805 8b01 	strb.w	r8, [r5], #1
  4045c0:	454d      	cmp	r5, r9
  4045c2:	4606      	mov	r6, r0
  4045c4:	460f      	mov	r7, r1
  4045c6:	d1e4      	bne.n	404592 <_dtoa_r+0xc82>
  4045c8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4045cc:	4b3b      	ldr	r3, [pc, #236]	; (4046bc <_dtoa_r+0xdac>)
  4045ce:	2200      	movs	r2, #0
  4045d0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4045d4:	f7fd f9e0 	bl	401998 <__adddf3>
  4045d8:	4632      	mov	r2, r6
  4045da:	463b      	mov	r3, r7
  4045dc:	f7fd fe00 	bl	4021e0 <__aeabi_dcmplt>
  4045e0:	2800      	cmp	r0, #0
  4045e2:	d046      	beq.n	404672 <_dtoa_r+0xd62>
  4045e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4045e6:	9302      	str	r3, [sp, #8]
  4045e8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4045ec:	f7ff bb43 	b.w	403c76 <_dtoa_r+0x366>
  4045f0:	f04f 0800 	mov.w	r8, #0
  4045f4:	4646      	mov	r6, r8
  4045f6:	e6a9      	b.n	40434c <_dtoa_r+0xa3c>
  4045f8:	9b08      	ldr	r3, [sp, #32]
  4045fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4045fc:	1a9d      	subs	r5, r3, r2
  4045fe:	2300      	movs	r3, #0
  404600:	f7ff bb71 	b.w	403ce6 <_dtoa_r+0x3d6>
  404604:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404606:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404608:	9d08      	ldr	r5, [sp, #32]
  40460a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40460e:	f7ff bb6a 	b.w	403ce6 <_dtoa_r+0x3d6>
  404612:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404616:	f04f 0a02 	mov.w	sl, #2
  40461a:	e56e      	b.n	4040fa <_dtoa_r+0x7ea>
  40461c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40461e:	2b00      	cmp	r3, #0
  404620:	f43f aeb8 	beq.w	404394 <_dtoa_r+0xa84>
  404624:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404626:	2b00      	cmp	r3, #0
  404628:	f77f aede 	ble.w	4043e8 <_dtoa_r+0xad8>
  40462c:	2200      	movs	r2, #0
  40462e:	4b24      	ldr	r3, [pc, #144]	; (4046c0 <_dtoa_r+0xdb0>)
  404630:	4638      	mov	r0, r7
  404632:	4641      	mov	r1, r8
  404634:	f7fd fb62 	bl	401cfc <__aeabi_dmul>
  404638:	4607      	mov	r7, r0
  40463a:	4688      	mov	r8, r1
  40463c:	f10a 0001 	add.w	r0, sl, #1
  404640:	f7fd faf6 	bl	401c30 <__aeabi_i2d>
  404644:	463a      	mov	r2, r7
  404646:	4643      	mov	r3, r8
  404648:	f7fd fb58 	bl	401cfc <__aeabi_dmul>
  40464c:	2200      	movs	r2, #0
  40464e:	4b17      	ldr	r3, [pc, #92]	; (4046ac <_dtoa_r+0xd9c>)
  404650:	f7fd f9a2 	bl	401998 <__adddf3>
  404654:	9a02      	ldr	r2, [sp, #8]
  404656:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404658:	9312      	str	r3, [sp, #72]	; 0x48
  40465a:	3a01      	subs	r2, #1
  40465c:	4605      	mov	r5, r0
  40465e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404662:	9215      	str	r2, [sp, #84]	; 0x54
  404664:	e56a      	b.n	40413c <_dtoa_r+0x82c>
  404666:	2239      	movs	r2, #57	; 0x39
  404668:	46b3      	mov	fp, r6
  40466a:	703a      	strb	r2, [r7, #0]
  40466c:	9e06      	ldr	r6, [sp, #24]
  40466e:	1c7d      	adds	r5, r7, #1
  404670:	e4c0      	b.n	403ff4 <_dtoa_r+0x6e4>
  404672:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  404676:	2000      	movs	r0, #0
  404678:	4910      	ldr	r1, [pc, #64]	; (4046bc <_dtoa_r+0xdac>)
  40467a:	f7fd f98b 	bl	401994 <__aeabi_dsub>
  40467e:	4632      	mov	r2, r6
  404680:	463b      	mov	r3, r7
  404682:	f7fd fdcb 	bl	40221c <__aeabi_dcmpgt>
  404686:	b908      	cbnz	r0, 40468c <_dtoa_r+0xd7c>
  404688:	e6ae      	b.n	4043e8 <_dtoa_r+0xad8>
  40468a:	4615      	mov	r5, r2
  40468c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404690:	2b30      	cmp	r3, #48	; 0x30
  404692:	f105 32ff 	add.w	r2, r5, #4294967295
  404696:	d0f8      	beq.n	40468a <_dtoa_r+0xd7a>
  404698:	e5d7      	b.n	40424a <_dtoa_r+0x93a>
  40469a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40469e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4046a0:	9302      	str	r3, [sp, #8]
  4046a2:	f7ff bae8 	b.w	403c76 <_dtoa_r+0x366>
  4046a6:	970c      	str	r7, [sp, #48]	; 0x30
  4046a8:	f7ff bba5 	b.w	403df6 <_dtoa_r+0x4e6>
  4046ac:	401c0000 	.word	0x401c0000
  4046b0:	40140000 	.word	0x40140000
  4046b4:	00406db8 	.word	0x00406db8
  4046b8:	00406d90 	.word	0x00406d90
  4046bc:	3fe00000 	.word	0x3fe00000
  4046c0:	40240000 	.word	0x40240000
  4046c4:	2b39      	cmp	r3, #57	; 0x39
  4046c6:	f8cd b018 	str.w	fp, [sp, #24]
  4046ca:	46d0      	mov	r8, sl
  4046cc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4046d0:	469a      	mov	sl, r3
  4046d2:	d0c8      	beq.n	404666 <_dtoa_r+0xd56>
  4046d4:	f1bb 0f00 	cmp.w	fp, #0
  4046d8:	f73f aebf 	bgt.w	40445a <_dtoa_r+0xb4a>
  4046dc:	e6bf      	b.n	40445e <_dtoa_r+0xb4e>
  4046de:	f47f aebe 	bne.w	40445e <_dtoa_r+0xb4e>
  4046e2:	f01a 0f01 	tst.w	sl, #1
  4046e6:	f43f aeba 	beq.w	40445e <_dtoa_r+0xb4e>
  4046ea:	e6b2      	b.n	404452 <_dtoa_r+0xb42>
  4046ec:	f04f 0800 	mov.w	r8, #0
  4046f0:	4646      	mov	r6, r8
  4046f2:	e5e9      	b.n	4042c8 <_dtoa_r+0x9b8>
  4046f4:	4631      	mov	r1, r6
  4046f6:	2300      	movs	r3, #0
  4046f8:	220a      	movs	r2, #10
  4046fa:	4620      	mov	r0, r4
  4046fc:	f000 fc36 	bl	404f6c <__multadd>
  404700:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404702:	2b00      	cmp	r3, #0
  404704:	4606      	mov	r6, r0
  404706:	dd0a      	ble.n	40471e <_dtoa_r+0xe0e>
  404708:	930a      	str	r3, [sp, #40]	; 0x28
  40470a:	f7ff bbaa 	b.w	403e62 <_dtoa_r+0x552>
  40470e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404710:	2b02      	cmp	r3, #2
  404712:	dc23      	bgt.n	40475c <_dtoa_r+0xe4c>
  404714:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404716:	e43b      	b.n	403f90 <_dtoa_r+0x680>
  404718:	f04f 0a02 	mov.w	sl, #2
  40471c:	e4ed      	b.n	4040fa <_dtoa_r+0x7ea>
  40471e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404720:	2b02      	cmp	r3, #2
  404722:	dc1b      	bgt.n	40475c <_dtoa_r+0xe4c>
  404724:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404726:	e7ef      	b.n	404708 <_dtoa_r+0xdf8>
  404728:	2500      	movs	r5, #0
  40472a:	6465      	str	r5, [r4, #68]	; 0x44
  40472c:	4629      	mov	r1, r5
  40472e:	4620      	mov	r0, r4
  404730:	f000 fbec 	bl	404f0c <_Balloc>
  404734:	f04f 33ff 	mov.w	r3, #4294967295
  404738:	930a      	str	r3, [sp, #40]	; 0x28
  40473a:	930f      	str	r3, [sp, #60]	; 0x3c
  40473c:	2301      	movs	r3, #1
  40473e:	9004      	str	r0, [sp, #16]
  404740:	9525      	str	r5, [sp, #148]	; 0x94
  404742:	6420      	str	r0, [r4, #64]	; 0x40
  404744:	930b      	str	r3, [sp, #44]	; 0x2c
  404746:	f7ff b9dd 	b.w	403b04 <_dtoa_r+0x1f4>
  40474a:	2501      	movs	r5, #1
  40474c:	f7ff b9a5 	b.w	403a9a <_dtoa_r+0x18a>
  404750:	f43f ab69 	beq.w	403e26 <_dtoa_r+0x516>
  404754:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404758:	f7ff bbf9 	b.w	403f4e <_dtoa_r+0x63e>
  40475c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40475e:	930a      	str	r3, [sp, #40]	; 0x28
  404760:	e5e5      	b.n	40432e <_dtoa_r+0xa1e>
  404762:	bf00      	nop

00404764 <__libc_fini_array>:
  404764:	b538      	push	{r3, r4, r5, lr}
  404766:	4c0a      	ldr	r4, [pc, #40]	; (404790 <__libc_fini_array+0x2c>)
  404768:	4d0a      	ldr	r5, [pc, #40]	; (404794 <__libc_fini_array+0x30>)
  40476a:	1b64      	subs	r4, r4, r5
  40476c:	10a4      	asrs	r4, r4, #2
  40476e:	d00a      	beq.n	404786 <__libc_fini_array+0x22>
  404770:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404774:	3b01      	subs	r3, #1
  404776:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40477a:	3c01      	subs	r4, #1
  40477c:	f855 3904 	ldr.w	r3, [r5], #-4
  404780:	4798      	blx	r3
  404782:	2c00      	cmp	r4, #0
  404784:	d1f9      	bne.n	40477a <__libc_fini_array+0x16>
  404786:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40478a:	f002 bc13 	b.w	406fb4 <_fini>
  40478e:	bf00      	nop
  404790:	00406fc4 	.word	0x00406fc4
  404794:	00406fc0 	.word	0x00406fc0

00404798 <_localeconv_r>:
  404798:	4a04      	ldr	r2, [pc, #16]	; (4047ac <_localeconv_r+0x14>)
  40479a:	4b05      	ldr	r3, [pc, #20]	; (4047b0 <_localeconv_r+0x18>)
  40479c:	6812      	ldr	r2, [r2, #0]
  40479e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4047a0:	2800      	cmp	r0, #0
  4047a2:	bf08      	it	eq
  4047a4:	4618      	moveq	r0, r3
  4047a6:	30f0      	adds	r0, #240	; 0xf0
  4047a8:	4770      	bx	lr
  4047aa:	bf00      	nop
  4047ac:	20400020 	.word	0x20400020
  4047b0:	20400864 	.word	0x20400864

004047b4 <__retarget_lock_acquire_recursive>:
  4047b4:	4770      	bx	lr
  4047b6:	bf00      	nop

004047b8 <__retarget_lock_release_recursive>:
  4047b8:	4770      	bx	lr
  4047ba:	bf00      	nop

004047bc <_malloc_r>:
  4047bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4047c0:	f101 060b 	add.w	r6, r1, #11
  4047c4:	2e16      	cmp	r6, #22
  4047c6:	b083      	sub	sp, #12
  4047c8:	4605      	mov	r5, r0
  4047ca:	f240 809e 	bls.w	40490a <_malloc_r+0x14e>
  4047ce:	f036 0607 	bics.w	r6, r6, #7
  4047d2:	f100 80bd 	bmi.w	404950 <_malloc_r+0x194>
  4047d6:	42b1      	cmp	r1, r6
  4047d8:	f200 80ba 	bhi.w	404950 <_malloc_r+0x194>
  4047dc:	f000 fb8a 	bl	404ef4 <__malloc_lock>
  4047e0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4047e4:	f0c0 8293 	bcc.w	404d0e <_malloc_r+0x552>
  4047e8:	0a73      	lsrs	r3, r6, #9
  4047ea:	f000 80b8 	beq.w	40495e <_malloc_r+0x1a2>
  4047ee:	2b04      	cmp	r3, #4
  4047f0:	f200 8179 	bhi.w	404ae6 <_malloc_r+0x32a>
  4047f4:	09b3      	lsrs	r3, r6, #6
  4047f6:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4047fa:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4047fe:	00c3      	lsls	r3, r0, #3
  404800:	4fbf      	ldr	r7, [pc, #764]	; (404b00 <_malloc_r+0x344>)
  404802:	443b      	add	r3, r7
  404804:	f1a3 0108 	sub.w	r1, r3, #8
  404808:	685c      	ldr	r4, [r3, #4]
  40480a:	42a1      	cmp	r1, r4
  40480c:	d106      	bne.n	40481c <_malloc_r+0x60>
  40480e:	e00c      	b.n	40482a <_malloc_r+0x6e>
  404810:	2a00      	cmp	r2, #0
  404812:	f280 80aa 	bge.w	40496a <_malloc_r+0x1ae>
  404816:	68e4      	ldr	r4, [r4, #12]
  404818:	42a1      	cmp	r1, r4
  40481a:	d006      	beq.n	40482a <_malloc_r+0x6e>
  40481c:	6863      	ldr	r3, [r4, #4]
  40481e:	f023 0303 	bic.w	r3, r3, #3
  404822:	1b9a      	subs	r2, r3, r6
  404824:	2a0f      	cmp	r2, #15
  404826:	ddf3      	ble.n	404810 <_malloc_r+0x54>
  404828:	4670      	mov	r0, lr
  40482a:	693c      	ldr	r4, [r7, #16]
  40482c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404b14 <_malloc_r+0x358>
  404830:	4574      	cmp	r4, lr
  404832:	f000 81ab 	beq.w	404b8c <_malloc_r+0x3d0>
  404836:	6863      	ldr	r3, [r4, #4]
  404838:	f023 0303 	bic.w	r3, r3, #3
  40483c:	1b9a      	subs	r2, r3, r6
  40483e:	2a0f      	cmp	r2, #15
  404840:	f300 8190 	bgt.w	404b64 <_malloc_r+0x3a8>
  404844:	2a00      	cmp	r2, #0
  404846:	f8c7 e014 	str.w	lr, [r7, #20]
  40484a:	f8c7 e010 	str.w	lr, [r7, #16]
  40484e:	f280 809d 	bge.w	40498c <_malloc_r+0x1d0>
  404852:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404856:	f080 8161 	bcs.w	404b1c <_malloc_r+0x360>
  40485a:	08db      	lsrs	r3, r3, #3
  40485c:	f103 0c01 	add.w	ip, r3, #1
  404860:	1099      	asrs	r1, r3, #2
  404862:	687a      	ldr	r2, [r7, #4]
  404864:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404868:	f8c4 8008 	str.w	r8, [r4, #8]
  40486c:	2301      	movs	r3, #1
  40486e:	408b      	lsls	r3, r1
  404870:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404874:	4313      	orrs	r3, r2
  404876:	3908      	subs	r1, #8
  404878:	60e1      	str	r1, [r4, #12]
  40487a:	607b      	str	r3, [r7, #4]
  40487c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404880:	f8c8 400c 	str.w	r4, [r8, #12]
  404884:	1082      	asrs	r2, r0, #2
  404886:	2401      	movs	r4, #1
  404888:	4094      	lsls	r4, r2
  40488a:	429c      	cmp	r4, r3
  40488c:	f200 808b 	bhi.w	4049a6 <_malloc_r+0x1ea>
  404890:	421c      	tst	r4, r3
  404892:	d106      	bne.n	4048a2 <_malloc_r+0xe6>
  404894:	f020 0003 	bic.w	r0, r0, #3
  404898:	0064      	lsls	r4, r4, #1
  40489a:	421c      	tst	r4, r3
  40489c:	f100 0004 	add.w	r0, r0, #4
  4048a0:	d0fa      	beq.n	404898 <_malloc_r+0xdc>
  4048a2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4048a6:	46cc      	mov	ip, r9
  4048a8:	4680      	mov	r8, r0
  4048aa:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4048ae:	459c      	cmp	ip, r3
  4048b0:	d107      	bne.n	4048c2 <_malloc_r+0x106>
  4048b2:	e16d      	b.n	404b90 <_malloc_r+0x3d4>
  4048b4:	2a00      	cmp	r2, #0
  4048b6:	f280 817b 	bge.w	404bb0 <_malloc_r+0x3f4>
  4048ba:	68db      	ldr	r3, [r3, #12]
  4048bc:	459c      	cmp	ip, r3
  4048be:	f000 8167 	beq.w	404b90 <_malloc_r+0x3d4>
  4048c2:	6859      	ldr	r1, [r3, #4]
  4048c4:	f021 0103 	bic.w	r1, r1, #3
  4048c8:	1b8a      	subs	r2, r1, r6
  4048ca:	2a0f      	cmp	r2, #15
  4048cc:	ddf2      	ble.n	4048b4 <_malloc_r+0xf8>
  4048ce:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4048d2:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4048d6:	9300      	str	r3, [sp, #0]
  4048d8:	199c      	adds	r4, r3, r6
  4048da:	4628      	mov	r0, r5
  4048dc:	f046 0601 	orr.w	r6, r6, #1
  4048e0:	f042 0501 	orr.w	r5, r2, #1
  4048e4:	605e      	str	r6, [r3, #4]
  4048e6:	f8c8 c00c 	str.w	ip, [r8, #12]
  4048ea:	f8cc 8008 	str.w	r8, [ip, #8]
  4048ee:	617c      	str	r4, [r7, #20]
  4048f0:	613c      	str	r4, [r7, #16]
  4048f2:	f8c4 e00c 	str.w	lr, [r4, #12]
  4048f6:	f8c4 e008 	str.w	lr, [r4, #8]
  4048fa:	6065      	str	r5, [r4, #4]
  4048fc:	505a      	str	r2, [r3, r1]
  4048fe:	f000 faff 	bl	404f00 <__malloc_unlock>
  404902:	9b00      	ldr	r3, [sp, #0]
  404904:	f103 0408 	add.w	r4, r3, #8
  404908:	e01e      	b.n	404948 <_malloc_r+0x18c>
  40490a:	2910      	cmp	r1, #16
  40490c:	d820      	bhi.n	404950 <_malloc_r+0x194>
  40490e:	f000 faf1 	bl	404ef4 <__malloc_lock>
  404912:	2610      	movs	r6, #16
  404914:	2318      	movs	r3, #24
  404916:	2002      	movs	r0, #2
  404918:	4f79      	ldr	r7, [pc, #484]	; (404b00 <_malloc_r+0x344>)
  40491a:	443b      	add	r3, r7
  40491c:	f1a3 0208 	sub.w	r2, r3, #8
  404920:	685c      	ldr	r4, [r3, #4]
  404922:	4294      	cmp	r4, r2
  404924:	f000 813d 	beq.w	404ba2 <_malloc_r+0x3e6>
  404928:	6863      	ldr	r3, [r4, #4]
  40492a:	68e1      	ldr	r1, [r4, #12]
  40492c:	68a6      	ldr	r6, [r4, #8]
  40492e:	f023 0303 	bic.w	r3, r3, #3
  404932:	4423      	add	r3, r4
  404934:	4628      	mov	r0, r5
  404936:	685a      	ldr	r2, [r3, #4]
  404938:	60f1      	str	r1, [r6, #12]
  40493a:	f042 0201 	orr.w	r2, r2, #1
  40493e:	608e      	str	r6, [r1, #8]
  404940:	605a      	str	r2, [r3, #4]
  404942:	f000 fadd 	bl	404f00 <__malloc_unlock>
  404946:	3408      	adds	r4, #8
  404948:	4620      	mov	r0, r4
  40494a:	b003      	add	sp, #12
  40494c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404950:	2400      	movs	r4, #0
  404952:	230c      	movs	r3, #12
  404954:	4620      	mov	r0, r4
  404956:	602b      	str	r3, [r5, #0]
  404958:	b003      	add	sp, #12
  40495a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40495e:	2040      	movs	r0, #64	; 0x40
  404960:	f44f 7300 	mov.w	r3, #512	; 0x200
  404964:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404968:	e74a      	b.n	404800 <_malloc_r+0x44>
  40496a:	4423      	add	r3, r4
  40496c:	68e1      	ldr	r1, [r4, #12]
  40496e:	685a      	ldr	r2, [r3, #4]
  404970:	68a6      	ldr	r6, [r4, #8]
  404972:	f042 0201 	orr.w	r2, r2, #1
  404976:	60f1      	str	r1, [r6, #12]
  404978:	4628      	mov	r0, r5
  40497a:	608e      	str	r6, [r1, #8]
  40497c:	605a      	str	r2, [r3, #4]
  40497e:	f000 fabf 	bl	404f00 <__malloc_unlock>
  404982:	3408      	adds	r4, #8
  404984:	4620      	mov	r0, r4
  404986:	b003      	add	sp, #12
  404988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40498c:	4423      	add	r3, r4
  40498e:	4628      	mov	r0, r5
  404990:	685a      	ldr	r2, [r3, #4]
  404992:	f042 0201 	orr.w	r2, r2, #1
  404996:	605a      	str	r2, [r3, #4]
  404998:	f000 fab2 	bl	404f00 <__malloc_unlock>
  40499c:	3408      	adds	r4, #8
  40499e:	4620      	mov	r0, r4
  4049a0:	b003      	add	sp, #12
  4049a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049a6:	68bc      	ldr	r4, [r7, #8]
  4049a8:	6863      	ldr	r3, [r4, #4]
  4049aa:	f023 0803 	bic.w	r8, r3, #3
  4049ae:	45b0      	cmp	r8, r6
  4049b0:	d304      	bcc.n	4049bc <_malloc_r+0x200>
  4049b2:	eba8 0306 	sub.w	r3, r8, r6
  4049b6:	2b0f      	cmp	r3, #15
  4049b8:	f300 8085 	bgt.w	404ac6 <_malloc_r+0x30a>
  4049bc:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404b18 <_malloc_r+0x35c>
  4049c0:	4b50      	ldr	r3, [pc, #320]	; (404b04 <_malloc_r+0x348>)
  4049c2:	f8d9 2000 	ldr.w	r2, [r9]
  4049c6:	681b      	ldr	r3, [r3, #0]
  4049c8:	3201      	adds	r2, #1
  4049ca:	4433      	add	r3, r6
  4049cc:	eb04 0a08 	add.w	sl, r4, r8
  4049d0:	f000 8155 	beq.w	404c7e <_malloc_r+0x4c2>
  4049d4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4049d8:	330f      	adds	r3, #15
  4049da:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4049de:	f02b 0b0f 	bic.w	fp, fp, #15
  4049e2:	4659      	mov	r1, fp
  4049e4:	4628      	mov	r0, r5
  4049e6:	f000 fd8b 	bl	405500 <_sbrk_r>
  4049ea:	1c41      	adds	r1, r0, #1
  4049ec:	4602      	mov	r2, r0
  4049ee:	f000 80fc 	beq.w	404bea <_malloc_r+0x42e>
  4049f2:	4582      	cmp	sl, r0
  4049f4:	f200 80f7 	bhi.w	404be6 <_malloc_r+0x42a>
  4049f8:	4b43      	ldr	r3, [pc, #268]	; (404b08 <_malloc_r+0x34c>)
  4049fa:	6819      	ldr	r1, [r3, #0]
  4049fc:	4459      	add	r1, fp
  4049fe:	6019      	str	r1, [r3, #0]
  404a00:	f000 814d 	beq.w	404c9e <_malloc_r+0x4e2>
  404a04:	f8d9 0000 	ldr.w	r0, [r9]
  404a08:	3001      	adds	r0, #1
  404a0a:	bf1b      	ittet	ne
  404a0c:	eba2 0a0a 	subne.w	sl, r2, sl
  404a10:	4451      	addne	r1, sl
  404a12:	f8c9 2000 	streq.w	r2, [r9]
  404a16:	6019      	strne	r1, [r3, #0]
  404a18:	f012 0107 	ands.w	r1, r2, #7
  404a1c:	f000 8115 	beq.w	404c4a <_malloc_r+0x48e>
  404a20:	f1c1 0008 	rsb	r0, r1, #8
  404a24:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404a28:	4402      	add	r2, r0
  404a2a:	3108      	adds	r1, #8
  404a2c:	eb02 090b 	add.w	r9, r2, fp
  404a30:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404a34:	eba1 0909 	sub.w	r9, r1, r9
  404a38:	4649      	mov	r1, r9
  404a3a:	4628      	mov	r0, r5
  404a3c:	9301      	str	r3, [sp, #4]
  404a3e:	9200      	str	r2, [sp, #0]
  404a40:	f000 fd5e 	bl	405500 <_sbrk_r>
  404a44:	1c43      	adds	r3, r0, #1
  404a46:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404a4a:	f000 8143 	beq.w	404cd4 <_malloc_r+0x518>
  404a4e:	1a80      	subs	r0, r0, r2
  404a50:	4448      	add	r0, r9
  404a52:	f040 0001 	orr.w	r0, r0, #1
  404a56:	6819      	ldr	r1, [r3, #0]
  404a58:	60ba      	str	r2, [r7, #8]
  404a5a:	4449      	add	r1, r9
  404a5c:	42bc      	cmp	r4, r7
  404a5e:	6050      	str	r0, [r2, #4]
  404a60:	6019      	str	r1, [r3, #0]
  404a62:	d017      	beq.n	404a94 <_malloc_r+0x2d8>
  404a64:	f1b8 0f0f 	cmp.w	r8, #15
  404a68:	f240 80fb 	bls.w	404c62 <_malloc_r+0x4a6>
  404a6c:	6860      	ldr	r0, [r4, #4]
  404a6e:	f1a8 020c 	sub.w	r2, r8, #12
  404a72:	f022 0207 	bic.w	r2, r2, #7
  404a76:	eb04 0e02 	add.w	lr, r4, r2
  404a7a:	f000 0001 	and.w	r0, r0, #1
  404a7e:	f04f 0c05 	mov.w	ip, #5
  404a82:	4310      	orrs	r0, r2
  404a84:	2a0f      	cmp	r2, #15
  404a86:	6060      	str	r0, [r4, #4]
  404a88:	f8ce c004 	str.w	ip, [lr, #4]
  404a8c:	f8ce c008 	str.w	ip, [lr, #8]
  404a90:	f200 8117 	bhi.w	404cc2 <_malloc_r+0x506>
  404a94:	4b1d      	ldr	r3, [pc, #116]	; (404b0c <_malloc_r+0x350>)
  404a96:	68bc      	ldr	r4, [r7, #8]
  404a98:	681a      	ldr	r2, [r3, #0]
  404a9a:	4291      	cmp	r1, r2
  404a9c:	bf88      	it	hi
  404a9e:	6019      	strhi	r1, [r3, #0]
  404aa0:	4b1b      	ldr	r3, [pc, #108]	; (404b10 <_malloc_r+0x354>)
  404aa2:	681a      	ldr	r2, [r3, #0]
  404aa4:	4291      	cmp	r1, r2
  404aa6:	6862      	ldr	r2, [r4, #4]
  404aa8:	bf88      	it	hi
  404aaa:	6019      	strhi	r1, [r3, #0]
  404aac:	f022 0203 	bic.w	r2, r2, #3
  404ab0:	4296      	cmp	r6, r2
  404ab2:	eba2 0306 	sub.w	r3, r2, r6
  404ab6:	d801      	bhi.n	404abc <_malloc_r+0x300>
  404ab8:	2b0f      	cmp	r3, #15
  404aba:	dc04      	bgt.n	404ac6 <_malloc_r+0x30a>
  404abc:	4628      	mov	r0, r5
  404abe:	f000 fa1f 	bl	404f00 <__malloc_unlock>
  404ac2:	2400      	movs	r4, #0
  404ac4:	e740      	b.n	404948 <_malloc_r+0x18c>
  404ac6:	19a2      	adds	r2, r4, r6
  404ac8:	f043 0301 	orr.w	r3, r3, #1
  404acc:	f046 0601 	orr.w	r6, r6, #1
  404ad0:	6066      	str	r6, [r4, #4]
  404ad2:	4628      	mov	r0, r5
  404ad4:	60ba      	str	r2, [r7, #8]
  404ad6:	6053      	str	r3, [r2, #4]
  404ad8:	f000 fa12 	bl	404f00 <__malloc_unlock>
  404adc:	3408      	adds	r4, #8
  404ade:	4620      	mov	r0, r4
  404ae0:	b003      	add	sp, #12
  404ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404ae6:	2b14      	cmp	r3, #20
  404ae8:	d971      	bls.n	404bce <_malloc_r+0x412>
  404aea:	2b54      	cmp	r3, #84	; 0x54
  404aec:	f200 80a3 	bhi.w	404c36 <_malloc_r+0x47a>
  404af0:	0b33      	lsrs	r3, r6, #12
  404af2:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404af6:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404afa:	00c3      	lsls	r3, r0, #3
  404afc:	e680      	b.n	404800 <_malloc_r+0x44>
  404afe:	bf00      	nop
  404b00:	20400454 	.word	0x20400454
  404b04:	20400cac 	.word	0x20400cac
  404b08:	20400c7c 	.word	0x20400c7c
  404b0c:	20400ca4 	.word	0x20400ca4
  404b10:	20400ca8 	.word	0x20400ca8
  404b14:	2040045c 	.word	0x2040045c
  404b18:	2040085c 	.word	0x2040085c
  404b1c:	0a5a      	lsrs	r2, r3, #9
  404b1e:	2a04      	cmp	r2, #4
  404b20:	d95b      	bls.n	404bda <_malloc_r+0x41e>
  404b22:	2a14      	cmp	r2, #20
  404b24:	f200 80ae 	bhi.w	404c84 <_malloc_r+0x4c8>
  404b28:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404b2c:	00c9      	lsls	r1, r1, #3
  404b2e:	325b      	adds	r2, #91	; 0x5b
  404b30:	eb07 0c01 	add.w	ip, r7, r1
  404b34:	5879      	ldr	r1, [r7, r1]
  404b36:	f1ac 0c08 	sub.w	ip, ip, #8
  404b3a:	458c      	cmp	ip, r1
  404b3c:	f000 8088 	beq.w	404c50 <_malloc_r+0x494>
  404b40:	684a      	ldr	r2, [r1, #4]
  404b42:	f022 0203 	bic.w	r2, r2, #3
  404b46:	4293      	cmp	r3, r2
  404b48:	d273      	bcs.n	404c32 <_malloc_r+0x476>
  404b4a:	6889      	ldr	r1, [r1, #8]
  404b4c:	458c      	cmp	ip, r1
  404b4e:	d1f7      	bne.n	404b40 <_malloc_r+0x384>
  404b50:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404b54:	687b      	ldr	r3, [r7, #4]
  404b56:	60e2      	str	r2, [r4, #12]
  404b58:	f8c4 c008 	str.w	ip, [r4, #8]
  404b5c:	6094      	str	r4, [r2, #8]
  404b5e:	f8cc 400c 	str.w	r4, [ip, #12]
  404b62:	e68f      	b.n	404884 <_malloc_r+0xc8>
  404b64:	19a1      	adds	r1, r4, r6
  404b66:	f046 0c01 	orr.w	ip, r6, #1
  404b6a:	f042 0601 	orr.w	r6, r2, #1
  404b6e:	f8c4 c004 	str.w	ip, [r4, #4]
  404b72:	4628      	mov	r0, r5
  404b74:	6179      	str	r1, [r7, #20]
  404b76:	6139      	str	r1, [r7, #16]
  404b78:	f8c1 e00c 	str.w	lr, [r1, #12]
  404b7c:	f8c1 e008 	str.w	lr, [r1, #8]
  404b80:	604e      	str	r6, [r1, #4]
  404b82:	50e2      	str	r2, [r4, r3]
  404b84:	f000 f9bc 	bl	404f00 <__malloc_unlock>
  404b88:	3408      	adds	r4, #8
  404b8a:	e6dd      	b.n	404948 <_malloc_r+0x18c>
  404b8c:	687b      	ldr	r3, [r7, #4]
  404b8e:	e679      	b.n	404884 <_malloc_r+0xc8>
  404b90:	f108 0801 	add.w	r8, r8, #1
  404b94:	f018 0f03 	tst.w	r8, #3
  404b98:	f10c 0c08 	add.w	ip, ip, #8
  404b9c:	f47f ae85 	bne.w	4048aa <_malloc_r+0xee>
  404ba0:	e02d      	b.n	404bfe <_malloc_r+0x442>
  404ba2:	68dc      	ldr	r4, [r3, #12]
  404ba4:	42a3      	cmp	r3, r4
  404ba6:	bf08      	it	eq
  404ba8:	3002      	addeq	r0, #2
  404baa:	f43f ae3e 	beq.w	40482a <_malloc_r+0x6e>
  404bae:	e6bb      	b.n	404928 <_malloc_r+0x16c>
  404bb0:	4419      	add	r1, r3
  404bb2:	461c      	mov	r4, r3
  404bb4:	684a      	ldr	r2, [r1, #4]
  404bb6:	68db      	ldr	r3, [r3, #12]
  404bb8:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404bbc:	f042 0201 	orr.w	r2, r2, #1
  404bc0:	604a      	str	r2, [r1, #4]
  404bc2:	4628      	mov	r0, r5
  404bc4:	60f3      	str	r3, [r6, #12]
  404bc6:	609e      	str	r6, [r3, #8]
  404bc8:	f000 f99a 	bl	404f00 <__malloc_unlock>
  404bcc:	e6bc      	b.n	404948 <_malloc_r+0x18c>
  404bce:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404bd2:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404bd6:	00c3      	lsls	r3, r0, #3
  404bd8:	e612      	b.n	404800 <_malloc_r+0x44>
  404bda:	099a      	lsrs	r2, r3, #6
  404bdc:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404be0:	00c9      	lsls	r1, r1, #3
  404be2:	3238      	adds	r2, #56	; 0x38
  404be4:	e7a4      	b.n	404b30 <_malloc_r+0x374>
  404be6:	42bc      	cmp	r4, r7
  404be8:	d054      	beq.n	404c94 <_malloc_r+0x4d8>
  404bea:	68bc      	ldr	r4, [r7, #8]
  404bec:	6862      	ldr	r2, [r4, #4]
  404bee:	f022 0203 	bic.w	r2, r2, #3
  404bf2:	e75d      	b.n	404ab0 <_malloc_r+0x2f4>
  404bf4:	f859 3908 	ldr.w	r3, [r9], #-8
  404bf8:	4599      	cmp	r9, r3
  404bfa:	f040 8086 	bne.w	404d0a <_malloc_r+0x54e>
  404bfe:	f010 0f03 	tst.w	r0, #3
  404c02:	f100 30ff 	add.w	r0, r0, #4294967295
  404c06:	d1f5      	bne.n	404bf4 <_malloc_r+0x438>
  404c08:	687b      	ldr	r3, [r7, #4]
  404c0a:	ea23 0304 	bic.w	r3, r3, r4
  404c0e:	607b      	str	r3, [r7, #4]
  404c10:	0064      	lsls	r4, r4, #1
  404c12:	429c      	cmp	r4, r3
  404c14:	f63f aec7 	bhi.w	4049a6 <_malloc_r+0x1ea>
  404c18:	2c00      	cmp	r4, #0
  404c1a:	f43f aec4 	beq.w	4049a6 <_malloc_r+0x1ea>
  404c1e:	421c      	tst	r4, r3
  404c20:	4640      	mov	r0, r8
  404c22:	f47f ae3e 	bne.w	4048a2 <_malloc_r+0xe6>
  404c26:	0064      	lsls	r4, r4, #1
  404c28:	421c      	tst	r4, r3
  404c2a:	f100 0004 	add.w	r0, r0, #4
  404c2e:	d0fa      	beq.n	404c26 <_malloc_r+0x46a>
  404c30:	e637      	b.n	4048a2 <_malloc_r+0xe6>
  404c32:	468c      	mov	ip, r1
  404c34:	e78c      	b.n	404b50 <_malloc_r+0x394>
  404c36:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404c3a:	d815      	bhi.n	404c68 <_malloc_r+0x4ac>
  404c3c:	0bf3      	lsrs	r3, r6, #15
  404c3e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404c42:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404c46:	00c3      	lsls	r3, r0, #3
  404c48:	e5da      	b.n	404800 <_malloc_r+0x44>
  404c4a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404c4e:	e6ed      	b.n	404a2c <_malloc_r+0x270>
  404c50:	687b      	ldr	r3, [r7, #4]
  404c52:	1092      	asrs	r2, r2, #2
  404c54:	2101      	movs	r1, #1
  404c56:	fa01 f202 	lsl.w	r2, r1, r2
  404c5a:	4313      	orrs	r3, r2
  404c5c:	607b      	str	r3, [r7, #4]
  404c5e:	4662      	mov	r2, ip
  404c60:	e779      	b.n	404b56 <_malloc_r+0x39a>
  404c62:	2301      	movs	r3, #1
  404c64:	6053      	str	r3, [r2, #4]
  404c66:	e729      	b.n	404abc <_malloc_r+0x300>
  404c68:	f240 5254 	movw	r2, #1364	; 0x554
  404c6c:	4293      	cmp	r3, r2
  404c6e:	d822      	bhi.n	404cb6 <_malloc_r+0x4fa>
  404c70:	0cb3      	lsrs	r3, r6, #18
  404c72:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404c76:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404c7a:	00c3      	lsls	r3, r0, #3
  404c7c:	e5c0      	b.n	404800 <_malloc_r+0x44>
  404c7e:	f103 0b10 	add.w	fp, r3, #16
  404c82:	e6ae      	b.n	4049e2 <_malloc_r+0x226>
  404c84:	2a54      	cmp	r2, #84	; 0x54
  404c86:	d829      	bhi.n	404cdc <_malloc_r+0x520>
  404c88:	0b1a      	lsrs	r2, r3, #12
  404c8a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404c8e:	00c9      	lsls	r1, r1, #3
  404c90:	326e      	adds	r2, #110	; 0x6e
  404c92:	e74d      	b.n	404b30 <_malloc_r+0x374>
  404c94:	4b20      	ldr	r3, [pc, #128]	; (404d18 <_malloc_r+0x55c>)
  404c96:	6819      	ldr	r1, [r3, #0]
  404c98:	4459      	add	r1, fp
  404c9a:	6019      	str	r1, [r3, #0]
  404c9c:	e6b2      	b.n	404a04 <_malloc_r+0x248>
  404c9e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404ca2:	2800      	cmp	r0, #0
  404ca4:	f47f aeae 	bne.w	404a04 <_malloc_r+0x248>
  404ca8:	eb08 030b 	add.w	r3, r8, fp
  404cac:	68ba      	ldr	r2, [r7, #8]
  404cae:	f043 0301 	orr.w	r3, r3, #1
  404cb2:	6053      	str	r3, [r2, #4]
  404cb4:	e6ee      	b.n	404a94 <_malloc_r+0x2d8>
  404cb6:	207f      	movs	r0, #127	; 0x7f
  404cb8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404cbc:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404cc0:	e59e      	b.n	404800 <_malloc_r+0x44>
  404cc2:	f104 0108 	add.w	r1, r4, #8
  404cc6:	4628      	mov	r0, r5
  404cc8:	9300      	str	r3, [sp, #0]
  404cca:	f000 fe07 	bl	4058dc <_free_r>
  404cce:	9b00      	ldr	r3, [sp, #0]
  404cd0:	6819      	ldr	r1, [r3, #0]
  404cd2:	e6df      	b.n	404a94 <_malloc_r+0x2d8>
  404cd4:	2001      	movs	r0, #1
  404cd6:	f04f 0900 	mov.w	r9, #0
  404cda:	e6bc      	b.n	404a56 <_malloc_r+0x29a>
  404cdc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404ce0:	d805      	bhi.n	404cee <_malloc_r+0x532>
  404ce2:	0bda      	lsrs	r2, r3, #15
  404ce4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404ce8:	00c9      	lsls	r1, r1, #3
  404cea:	3277      	adds	r2, #119	; 0x77
  404cec:	e720      	b.n	404b30 <_malloc_r+0x374>
  404cee:	f240 5154 	movw	r1, #1364	; 0x554
  404cf2:	428a      	cmp	r2, r1
  404cf4:	d805      	bhi.n	404d02 <_malloc_r+0x546>
  404cf6:	0c9a      	lsrs	r2, r3, #18
  404cf8:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404cfc:	00c9      	lsls	r1, r1, #3
  404cfe:	327c      	adds	r2, #124	; 0x7c
  404d00:	e716      	b.n	404b30 <_malloc_r+0x374>
  404d02:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404d06:	227e      	movs	r2, #126	; 0x7e
  404d08:	e712      	b.n	404b30 <_malloc_r+0x374>
  404d0a:	687b      	ldr	r3, [r7, #4]
  404d0c:	e780      	b.n	404c10 <_malloc_r+0x454>
  404d0e:	08f0      	lsrs	r0, r6, #3
  404d10:	f106 0308 	add.w	r3, r6, #8
  404d14:	e600      	b.n	404918 <_malloc_r+0x15c>
  404d16:	bf00      	nop
  404d18:	20400c7c 	.word	0x20400c7c
  404d1c:	00000000 	.word	0x00000000

00404d20 <memchr>:
  404d20:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404d24:	2a10      	cmp	r2, #16
  404d26:	db2b      	blt.n	404d80 <memchr+0x60>
  404d28:	f010 0f07 	tst.w	r0, #7
  404d2c:	d008      	beq.n	404d40 <memchr+0x20>
  404d2e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404d32:	3a01      	subs	r2, #1
  404d34:	428b      	cmp	r3, r1
  404d36:	d02d      	beq.n	404d94 <memchr+0x74>
  404d38:	f010 0f07 	tst.w	r0, #7
  404d3c:	b342      	cbz	r2, 404d90 <memchr+0x70>
  404d3e:	d1f6      	bne.n	404d2e <memchr+0xe>
  404d40:	b4f0      	push	{r4, r5, r6, r7}
  404d42:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404d46:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404d4a:	f022 0407 	bic.w	r4, r2, #7
  404d4e:	f07f 0700 	mvns.w	r7, #0
  404d52:	2300      	movs	r3, #0
  404d54:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404d58:	3c08      	subs	r4, #8
  404d5a:	ea85 0501 	eor.w	r5, r5, r1
  404d5e:	ea86 0601 	eor.w	r6, r6, r1
  404d62:	fa85 f547 	uadd8	r5, r5, r7
  404d66:	faa3 f587 	sel	r5, r3, r7
  404d6a:	fa86 f647 	uadd8	r6, r6, r7
  404d6e:	faa5 f687 	sel	r6, r5, r7
  404d72:	b98e      	cbnz	r6, 404d98 <memchr+0x78>
  404d74:	d1ee      	bne.n	404d54 <memchr+0x34>
  404d76:	bcf0      	pop	{r4, r5, r6, r7}
  404d78:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404d7c:	f002 0207 	and.w	r2, r2, #7
  404d80:	b132      	cbz	r2, 404d90 <memchr+0x70>
  404d82:	f810 3b01 	ldrb.w	r3, [r0], #1
  404d86:	3a01      	subs	r2, #1
  404d88:	ea83 0301 	eor.w	r3, r3, r1
  404d8c:	b113      	cbz	r3, 404d94 <memchr+0x74>
  404d8e:	d1f8      	bne.n	404d82 <memchr+0x62>
  404d90:	2000      	movs	r0, #0
  404d92:	4770      	bx	lr
  404d94:	3801      	subs	r0, #1
  404d96:	4770      	bx	lr
  404d98:	2d00      	cmp	r5, #0
  404d9a:	bf06      	itte	eq
  404d9c:	4635      	moveq	r5, r6
  404d9e:	3803      	subeq	r0, #3
  404da0:	3807      	subne	r0, #7
  404da2:	f015 0f01 	tst.w	r5, #1
  404da6:	d107      	bne.n	404db8 <memchr+0x98>
  404da8:	3001      	adds	r0, #1
  404daa:	f415 7f80 	tst.w	r5, #256	; 0x100
  404dae:	bf02      	ittt	eq
  404db0:	3001      	addeq	r0, #1
  404db2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404db6:	3001      	addeq	r0, #1
  404db8:	bcf0      	pop	{r4, r5, r6, r7}
  404dba:	3801      	subs	r0, #1
  404dbc:	4770      	bx	lr
  404dbe:	bf00      	nop

00404dc0 <memcpy>:
  404dc0:	4684      	mov	ip, r0
  404dc2:	ea41 0300 	orr.w	r3, r1, r0
  404dc6:	f013 0303 	ands.w	r3, r3, #3
  404dca:	d16d      	bne.n	404ea8 <memcpy+0xe8>
  404dcc:	3a40      	subs	r2, #64	; 0x40
  404dce:	d341      	bcc.n	404e54 <memcpy+0x94>
  404dd0:	f851 3b04 	ldr.w	r3, [r1], #4
  404dd4:	f840 3b04 	str.w	r3, [r0], #4
  404dd8:	f851 3b04 	ldr.w	r3, [r1], #4
  404ddc:	f840 3b04 	str.w	r3, [r0], #4
  404de0:	f851 3b04 	ldr.w	r3, [r1], #4
  404de4:	f840 3b04 	str.w	r3, [r0], #4
  404de8:	f851 3b04 	ldr.w	r3, [r1], #4
  404dec:	f840 3b04 	str.w	r3, [r0], #4
  404df0:	f851 3b04 	ldr.w	r3, [r1], #4
  404df4:	f840 3b04 	str.w	r3, [r0], #4
  404df8:	f851 3b04 	ldr.w	r3, [r1], #4
  404dfc:	f840 3b04 	str.w	r3, [r0], #4
  404e00:	f851 3b04 	ldr.w	r3, [r1], #4
  404e04:	f840 3b04 	str.w	r3, [r0], #4
  404e08:	f851 3b04 	ldr.w	r3, [r1], #4
  404e0c:	f840 3b04 	str.w	r3, [r0], #4
  404e10:	f851 3b04 	ldr.w	r3, [r1], #4
  404e14:	f840 3b04 	str.w	r3, [r0], #4
  404e18:	f851 3b04 	ldr.w	r3, [r1], #4
  404e1c:	f840 3b04 	str.w	r3, [r0], #4
  404e20:	f851 3b04 	ldr.w	r3, [r1], #4
  404e24:	f840 3b04 	str.w	r3, [r0], #4
  404e28:	f851 3b04 	ldr.w	r3, [r1], #4
  404e2c:	f840 3b04 	str.w	r3, [r0], #4
  404e30:	f851 3b04 	ldr.w	r3, [r1], #4
  404e34:	f840 3b04 	str.w	r3, [r0], #4
  404e38:	f851 3b04 	ldr.w	r3, [r1], #4
  404e3c:	f840 3b04 	str.w	r3, [r0], #4
  404e40:	f851 3b04 	ldr.w	r3, [r1], #4
  404e44:	f840 3b04 	str.w	r3, [r0], #4
  404e48:	f851 3b04 	ldr.w	r3, [r1], #4
  404e4c:	f840 3b04 	str.w	r3, [r0], #4
  404e50:	3a40      	subs	r2, #64	; 0x40
  404e52:	d2bd      	bcs.n	404dd0 <memcpy+0x10>
  404e54:	3230      	adds	r2, #48	; 0x30
  404e56:	d311      	bcc.n	404e7c <memcpy+0xbc>
  404e58:	f851 3b04 	ldr.w	r3, [r1], #4
  404e5c:	f840 3b04 	str.w	r3, [r0], #4
  404e60:	f851 3b04 	ldr.w	r3, [r1], #4
  404e64:	f840 3b04 	str.w	r3, [r0], #4
  404e68:	f851 3b04 	ldr.w	r3, [r1], #4
  404e6c:	f840 3b04 	str.w	r3, [r0], #4
  404e70:	f851 3b04 	ldr.w	r3, [r1], #4
  404e74:	f840 3b04 	str.w	r3, [r0], #4
  404e78:	3a10      	subs	r2, #16
  404e7a:	d2ed      	bcs.n	404e58 <memcpy+0x98>
  404e7c:	320c      	adds	r2, #12
  404e7e:	d305      	bcc.n	404e8c <memcpy+0xcc>
  404e80:	f851 3b04 	ldr.w	r3, [r1], #4
  404e84:	f840 3b04 	str.w	r3, [r0], #4
  404e88:	3a04      	subs	r2, #4
  404e8a:	d2f9      	bcs.n	404e80 <memcpy+0xc0>
  404e8c:	3204      	adds	r2, #4
  404e8e:	d008      	beq.n	404ea2 <memcpy+0xe2>
  404e90:	07d2      	lsls	r2, r2, #31
  404e92:	bf1c      	itt	ne
  404e94:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404e98:	f800 3b01 	strbne.w	r3, [r0], #1
  404e9c:	d301      	bcc.n	404ea2 <memcpy+0xe2>
  404e9e:	880b      	ldrh	r3, [r1, #0]
  404ea0:	8003      	strh	r3, [r0, #0]
  404ea2:	4660      	mov	r0, ip
  404ea4:	4770      	bx	lr
  404ea6:	bf00      	nop
  404ea8:	2a08      	cmp	r2, #8
  404eaa:	d313      	bcc.n	404ed4 <memcpy+0x114>
  404eac:	078b      	lsls	r3, r1, #30
  404eae:	d08d      	beq.n	404dcc <memcpy+0xc>
  404eb0:	f010 0303 	ands.w	r3, r0, #3
  404eb4:	d08a      	beq.n	404dcc <memcpy+0xc>
  404eb6:	f1c3 0304 	rsb	r3, r3, #4
  404eba:	1ad2      	subs	r2, r2, r3
  404ebc:	07db      	lsls	r3, r3, #31
  404ebe:	bf1c      	itt	ne
  404ec0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404ec4:	f800 3b01 	strbne.w	r3, [r0], #1
  404ec8:	d380      	bcc.n	404dcc <memcpy+0xc>
  404eca:	f831 3b02 	ldrh.w	r3, [r1], #2
  404ece:	f820 3b02 	strh.w	r3, [r0], #2
  404ed2:	e77b      	b.n	404dcc <memcpy+0xc>
  404ed4:	3a04      	subs	r2, #4
  404ed6:	d3d9      	bcc.n	404e8c <memcpy+0xcc>
  404ed8:	3a01      	subs	r2, #1
  404eda:	f811 3b01 	ldrb.w	r3, [r1], #1
  404ede:	f800 3b01 	strb.w	r3, [r0], #1
  404ee2:	d2f9      	bcs.n	404ed8 <memcpy+0x118>
  404ee4:	780b      	ldrb	r3, [r1, #0]
  404ee6:	7003      	strb	r3, [r0, #0]
  404ee8:	784b      	ldrb	r3, [r1, #1]
  404eea:	7043      	strb	r3, [r0, #1]
  404eec:	788b      	ldrb	r3, [r1, #2]
  404eee:	7083      	strb	r3, [r0, #2]
  404ef0:	4660      	mov	r0, ip
  404ef2:	4770      	bx	lr

00404ef4 <__malloc_lock>:
  404ef4:	4801      	ldr	r0, [pc, #4]	; (404efc <__malloc_lock+0x8>)
  404ef6:	f7ff bc5d 	b.w	4047b4 <__retarget_lock_acquire_recursive>
  404efa:	bf00      	nop
  404efc:	20400cc0 	.word	0x20400cc0

00404f00 <__malloc_unlock>:
  404f00:	4801      	ldr	r0, [pc, #4]	; (404f08 <__malloc_unlock+0x8>)
  404f02:	f7ff bc59 	b.w	4047b8 <__retarget_lock_release_recursive>
  404f06:	bf00      	nop
  404f08:	20400cc0 	.word	0x20400cc0

00404f0c <_Balloc>:
  404f0c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404f0e:	b570      	push	{r4, r5, r6, lr}
  404f10:	4605      	mov	r5, r0
  404f12:	460c      	mov	r4, r1
  404f14:	b14b      	cbz	r3, 404f2a <_Balloc+0x1e>
  404f16:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404f1a:	b180      	cbz	r0, 404f3e <_Balloc+0x32>
  404f1c:	6802      	ldr	r2, [r0, #0]
  404f1e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404f22:	2300      	movs	r3, #0
  404f24:	6103      	str	r3, [r0, #16]
  404f26:	60c3      	str	r3, [r0, #12]
  404f28:	bd70      	pop	{r4, r5, r6, pc}
  404f2a:	2221      	movs	r2, #33	; 0x21
  404f2c:	2104      	movs	r1, #4
  404f2e:	f000 fc55 	bl	4057dc <_calloc_r>
  404f32:	64e8      	str	r0, [r5, #76]	; 0x4c
  404f34:	4603      	mov	r3, r0
  404f36:	2800      	cmp	r0, #0
  404f38:	d1ed      	bne.n	404f16 <_Balloc+0xa>
  404f3a:	2000      	movs	r0, #0
  404f3c:	bd70      	pop	{r4, r5, r6, pc}
  404f3e:	2101      	movs	r1, #1
  404f40:	fa01 f604 	lsl.w	r6, r1, r4
  404f44:	1d72      	adds	r2, r6, #5
  404f46:	4628      	mov	r0, r5
  404f48:	0092      	lsls	r2, r2, #2
  404f4a:	f000 fc47 	bl	4057dc <_calloc_r>
  404f4e:	2800      	cmp	r0, #0
  404f50:	d0f3      	beq.n	404f3a <_Balloc+0x2e>
  404f52:	6044      	str	r4, [r0, #4]
  404f54:	6086      	str	r6, [r0, #8]
  404f56:	e7e4      	b.n	404f22 <_Balloc+0x16>

00404f58 <_Bfree>:
  404f58:	b131      	cbz	r1, 404f68 <_Bfree+0x10>
  404f5a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404f5c:	684a      	ldr	r2, [r1, #4]
  404f5e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404f62:	6008      	str	r0, [r1, #0]
  404f64:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404f68:	4770      	bx	lr
  404f6a:	bf00      	nop

00404f6c <__multadd>:
  404f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404f6e:	690c      	ldr	r4, [r1, #16]
  404f70:	b083      	sub	sp, #12
  404f72:	460d      	mov	r5, r1
  404f74:	4606      	mov	r6, r0
  404f76:	f101 0e14 	add.w	lr, r1, #20
  404f7a:	2700      	movs	r7, #0
  404f7c:	f8de 0000 	ldr.w	r0, [lr]
  404f80:	b281      	uxth	r1, r0
  404f82:	fb02 3301 	mla	r3, r2, r1, r3
  404f86:	0c01      	lsrs	r1, r0, #16
  404f88:	0c18      	lsrs	r0, r3, #16
  404f8a:	fb02 0101 	mla	r1, r2, r1, r0
  404f8e:	b29b      	uxth	r3, r3
  404f90:	3701      	adds	r7, #1
  404f92:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404f96:	42bc      	cmp	r4, r7
  404f98:	f84e 3b04 	str.w	r3, [lr], #4
  404f9c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404fa0:	dcec      	bgt.n	404f7c <__multadd+0x10>
  404fa2:	b13b      	cbz	r3, 404fb4 <__multadd+0x48>
  404fa4:	68aa      	ldr	r2, [r5, #8]
  404fa6:	4294      	cmp	r4, r2
  404fa8:	da07      	bge.n	404fba <__multadd+0x4e>
  404faa:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404fae:	3401      	adds	r4, #1
  404fb0:	6153      	str	r3, [r2, #20]
  404fb2:	612c      	str	r4, [r5, #16]
  404fb4:	4628      	mov	r0, r5
  404fb6:	b003      	add	sp, #12
  404fb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404fba:	6869      	ldr	r1, [r5, #4]
  404fbc:	9301      	str	r3, [sp, #4]
  404fbe:	3101      	adds	r1, #1
  404fc0:	4630      	mov	r0, r6
  404fc2:	f7ff ffa3 	bl	404f0c <_Balloc>
  404fc6:	692a      	ldr	r2, [r5, #16]
  404fc8:	3202      	adds	r2, #2
  404fca:	f105 010c 	add.w	r1, r5, #12
  404fce:	4607      	mov	r7, r0
  404fd0:	0092      	lsls	r2, r2, #2
  404fd2:	300c      	adds	r0, #12
  404fd4:	f7ff fef4 	bl	404dc0 <memcpy>
  404fd8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404fda:	6869      	ldr	r1, [r5, #4]
  404fdc:	9b01      	ldr	r3, [sp, #4]
  404fde:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404fe2:	6028      	str	r0, [r5, #0]
  404fe4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404fe8:	463d      	mov	r5, r7
  404fea:	e7de      	b.n	404faa <__multadd+0x3e>

00404fec <__hi0bits>:
  404fec:	0c02      	lsrs	r2, r0, #16
  404fee:	0412      	lsls	r2, r2, #16
  404ff0:	4603      	mov	r3, r0
  404ff2:	b9b2      	cbnz	r2, 405022 <__hi0bits+0x36>
  404ff4:	0403      	lsls	r3, r0, #16
  404ff6:	2010      	movs	r0, #16
  404ff8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404ffc:	bf04      	itt	eq
  404ffe:	021b      	lsleq	r3, r3, #8
  405000:	3008      	addeq	r0, #8
  405002:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405006:	bf04      	itt	eq
  405008:	011b      	lsleq	r3, r3, #4
  40500a:	3004      	addeq	r0, #4
  40500c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405010:	bf04      	itt	eq
  405012:	009b      	lsleq	r3, r3, #2
  405014:	3002      	addeq	r0, #2
  405016:	2b00      	cmp	r3, #0
  405018:	db02      	blt.n	405020 <__hi0bits+0x34>
  40501a:	005b      	lsls	r3, r3, #1
  40501c:	d403      	bmi.n	405026 <__hi0bits+0x3a>
  40501e:	2020      	movs	r0, #32
  405020:	4770      	bx	lr
  405022:	2000      	movs	r0, #0
  405024:	e7e8      	b.n	404ff8 <__hi0bits+0xc>
  405026:	3001      	adds	r0, #1
  405028:	4770      	bx	lr
  40502a:	bf00      	nop

0040502c <__lo0bits>:
  40502c:	6803      	ldr	r3, [r0, #0]
  40502e:	f013 0207 	ands.w	r2, r3, #7
  405032:	4601      	mov	r1, r0
  405034:	d007      	beq.n	405046 <__lo0bits+0x1a>
  405036:	07da      	lsls	r2, r3, #31
  405038:	d421      	bmi.n	40507e <__lo0bits+0x52>
  40503a:	0798      	lsls	r0, r3, #30
  40503c:	d421      	bmi.n	405082 <__lo0bits+0x56>
  40503e:	089b      	lsrs	r3, r3, #2
  405040:	600b      	str	r3, [r1, #0]
  405042:	2002      	movs	r0, #2
  405044:	4770      	bx	lr
  405046:	b298      	uxth	r0, r3
  405048:	b198      	cbz	r0, 405072 <__lo0bits+0x46>
  40504a:	4610      	mov	r0, r2
  40504c:	f013 0fff 	tst.w	r3, #255	; 0xff
  405050:	bf04      	itt	eq
  405052:	0a1b      	lsreq	r3, r3, #8
  405054:	3008      	addeq	r0, #8
  405056:	071a      	lsls	r2, r3, #28
  405058:	bf04      	itt	eq
  40505a:	091b      	lsreq	r3, r3, #4
  40505c:	3004      	addeq	r0, #4
  40505e:	079a      	lsls	r2, r3, #30
  405060:	bf04      	itt	eq
  405062:	089b      	lsreq	r3, r3, #2
  405064:	3002      	addeq	r0, #2
  405066:	07da      	lsls	r2, r3, #31
  405068:	d407      	bmi.n	40507a <__lo0bits+0x4e>
  40506a:	085b      	lsrs	r3, r3, #1
  40506c:	d104      	bne.n	405078 <__lo0bits+0x4c>
  40506e:	2020      	movs	r0, #32
  405070:	4770      	bx	lr
  405072:	0c1b      	lsrs	r3, r3, #16
  405074:	2010      	movs	r0, #16
  405076:	e7e9      	b.n	40504c <__lo0bits+0x20>
  405078:	3001      	adds	r0, #1
  40507a:	600b      	str	r3, [r1, #0]
  40507c:	4770      	bx	lr
  40507e:	2000      	movs	r0, #0
  405080:	4770      	bx	lr
  405082:	085b      	lsrs	r3, r3, #1
  405084:	600b      	str	r3, [r1, #0]
  405086:	2001      	movs	r0, #1
  405088:	4770      	bx	lr
  40508a:	bf00      	nop

0040508c <__i2b>:
  40508c:	b510      	push	{r4, lr}
  40508e:	460c      	mov	r4, r1
  405090:	2101      	movs	r1, #1
  405092:	f7ff ff3b 	bl	404f0c <_Balloc>
  405096:	2201      	movs	r2, #1
  405098:	6144      	str	r4, [r0, #20]
  40509a:	6102      	str	r2, [r0, #16]
  40509c:	bd10      	pop	{r4, pc}
  40509e:	bf00      	nop

004050a0 <__multiply>:
  4050a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4050a4:	690c      	ldr	r4, [r1, #16]
  4050a6:	6915      	ldr	r5, [r2, #16]
  4050a8:	42ac      	cmp	r4, r5
  4050aa:	b083      	sub	sp, #12
  4050ac:	468b      	mov	fp, r1
  4050ae:	4616      	mov	r6, r2
  4050b0:	da04      	bge.n	4050bc <__multiply+0x1c>
  4050b2:	4622      	mov	r2, r4
  4050b4:	46b3      	mov	fp, r6
  4050b6:	462c      	mov	r4, r5
  4050b8:	460e      	mov	r6, r1
  4050ba:	4615      	mov	r5, r2
  4050bc:	f8db 3008 	ldr.w	r3, [fp, #8]
  4050c0:	f8db 1004 	ldr.w	r1, [fp, #4]
  4050c4:	eb04 0805 	add.w	r8, r4, r5
  4050c8:	4598      	cmp	r8, r3
  4050ca:	bfc8      	it	gt
  4050cc:	3101      	addgt	r1, #1
  4050ce:	f7ff ff1d 	bl	404f0c <_Balloc>
  4050d2:	f100 0914 	add.w	r9, r0, #20
  4050d6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  4050da:	45d1      	cmp	r9, sl
  4050dc:	9000      	str	r0, [sp, #0]
  4050de:	d205      	bcs.n	4050ec <__multiply+0x4c>
  4050e0:	464b      	mov	r3, r9
  4050e2:	2100      	movs	r1, #0
  4050e4:	f843 1b04 	str.w	r1, [r3], #4
  4050e8:	459a      	cmp	sl, r3
  4050ea:	d8fb      	bhi.n	4050e4 <__multiply+0x44>
  4050ec:	f106 0c14 	add.w	ip, r6, #20
  4050f0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  4050f4:	f10b 0b14 	add.w	fp, fp, #20
  4050f8:	459c      	cmp	ip, r3
  4050fa:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  4050fe:	d24c      	bcs.n	40519a <__multiply+0xfa>
  405100:	f8cd a004 	str.w	sl, [sp, #4]
  405104:	469a      	mov	sl, r3
  405106:	f8dc 5000 	ldr.w	r5, [ip]
  40510a:	b2af      	uxth	r7, r5
  40510c:	b1ef      	cbz	r7, 40514a <__multiply+0xaa>
  40510e:	2100      	movs	r1, #0
  405110:	464d      	mov	r5, r9
  405112:	465e      	mov	r6, fp
  405114:	460c      	mov	r4, r1
  405116:	f856 2b04 	ldr.w	r2, [r6], #4
  40511a:	6828      	ldr	r0, [r5, #0]
  40511c:	b293      	uxth	r3, r2
  40511e:	b281      	uxth	r1, r0
  405120:	fb07 1303 	mla	r3, r7, r3, r1
  405124:	0c12      	lsrs	r2, r2, #16
  405126:	0c01      	lsrs	r1, r0, #16
  405128:	4423      	add	r3, r4
  40512a:	fb07 1102 	mla	r1, r7, r2, r1
  40512e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405132:	b29b      	uxth	r3, r3
  405134:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405138:	45b6      	cmp	lr, r6
  40513a:	f845 3b04 	str.w	r3, [r5], #4
  40513e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405142:	d8e8      	bhi.n	405116 <__multiply+0x76>
  405144:	602c      	str	r4, [r5, #0]
  405146:	f8dc 5000 	ldr.w	r5, [ip]
  40514a:	0c2d      	lsrs	r5, r5, #16
  40514c:	d01d      	beq.n	40518a <__multiply+0xea>
  40514e:	f8d9 3000 	ldr.w	r3, [r9]
  405152:	4648      	mov	r0, r9
  405154:	461c      	mov	r4, r3
  405156:	4659      	mov	r1, fp
  405158:	2200      	movs	r2, #0
  40515a:	880e      	ldrh	r6, [r1, #0]
  40515c:	0c24      	lsrs	r4, r4, #16
  40515e:	fb05 4406 	mla	r4, r5, r6, r4
  405162:	4422      	add	r2, r4
  405164:	b29b      	uxth	r3, r3
  405166:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40516a:	f840 3b04 	str.w	r3, [r0], #4
  40516e:	f851 3b04 	ldr.w	r3, [r1], #4
  405172:	6804      	ldr	r4, [r0, #0]
  405174:	0c1b      	lsrs	r3, r3, #16
  405176:	b2a6      	uxth	r6, r4
  405178:	fb05 6303 	mla	r3, r5, r3, r6
  40517c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405180:	458e      	cmp	lr, r1
  405182:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405186:	d8e8      	bhi.n	40515a <__multiply+0xba>
  405188:	6003      	str	r3, [r0, #0]
  40518a:	f10c 0c04 	add.w	ip, ip, #4
  40518e:	45e2      	cmp	sl, ip
  405190:	f109 0904 	add.w	r9, r9, #4
  405194:	d8b7      	bhi.n	405106 <__multiply+0x66>
  405196:	f8dd a004 	ldr.w	sl, [sp, #4]
  40519a:	f1b8 0f00 	cmp.w	r8, #0
  40519e:	dd0b      	ble.n	4051b8 <__multiply+0x118>
  4051a0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4051a4:	f1aa 0a04 	sub.w	sl, sl, #4
  4051a8:	b11b      	cbz	r3, 4051b2 <__multiply+0x112>
  4051aa:	e005      	b.n	4051b8 <__multiply+0x118>
  4051ac:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4051b0:	b913      	cbnz	r3, 4051b8 <__multiply+0x118>
  4051b2:	f1b8 0801 	subs.w	r8, r8, #1
  4051b6:	d1f9      	bne.n	4051ac <__multiply+0x10c>
  4051b8:	9800      	ldr	r0, [sp, #0]
  4051ba:	f8c0 8010 	str.w	r8, [r0, #16]
  4051be:	b003      	add	sp, #12
  4051c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004051c4 <__pow5mult>:
  4051c4:	f012 0303 	ands.w	r3, r2, #3
  4051c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4051cc:	4614      	mov	r4, r2
  4051ce:	4607      	mov	r7, r0
  4051d0:	d12e      	bne.n	405230 <__pow5mult+0x6c>
  4051d2:	460d      	mov	r5, r1
  4051d4:	10a4      	asrs	r4, r4, #2
  4051d6:	d01c      	beq.n	405212 <__pow5mult+0x4e>
  4051d8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  4051da:	b396      	cbz	r6, 405242 <__pow5mult+0x7e>
  4051dc:	07e3      	lsls	r3, r4, #31
  4051de:	f04f 0800 	mov.w	r8, #0
  4051e2:	d406      	bmi.n	4051f2 <__pow5mult+0x2e>
  4051e4:	1064      	asrs	r4, r4, #1
  4051e6:	d014      	beq.n	405212 <__pow5mult+0x4e>
  4051e8:	6830      	ldr	r0, [r6, #0]
  4051ea:	b1a8      	cbz	r0, 405218 <__pow5mult+0x54>
  4051ec:	4606      	mov	r6, r0
  4051ee:	07e3      	lsls	r3, r4, #31
  4051f0:	d5f8      	bpl.n	4051e4 <__pow5mult+0x20>
  4051f2:	4632      	mov	r2, r6
  4051f4:	4629      	mov	r1, r5
  4051f6:	4638      	mov	r0, r7
  4051f8:	f7ff ff52 	bl	4050a0 <__multiply>
  4051fc:	b1b5      	cbz	r5, 40522c <__pow5mult+0x68>
  4051fe:	686a      	ldr	r2, [r5, #4]
  405200:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405202:	1064      	asrs	r4, r4, #1
  405204:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405208:	6029      	str	r1, [r5, #0]
  40520a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40520e:	4605      	mov	r5, r0
  405210:	d1ea      	bne.n	4051e8 <__pow5mult+0x24>
  405212:	4628      	mov	r0, r5
  405214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405218:	4632      	mov	r2, r6
  40521a:	4631      	mov	r1, r6
  40521c:	4638      	mov	r0, r7
  40521e:	f7ff ff3f 	bl	4050a0 <__multiply>
  405222:	6030      	str	r0, [r6, #0]
  405224:	f8c0 8000 	str.w	r8, [r0]
  405228:	4606      	mov	r6, r0
  40522a:	e7e0      	b.n	4051ee <__pow5mult+0x2a>
  40522c:	4605      	mov	r5, r0
  40522e:	e7d9      	b.n	4051e4 <__pow5mult+0x20>
  405230:	1e5a      	subs	r2, r3, #1
  405232:	4d0b      	ldr	r5, [pc, #44]	; (405260 <__pow5mult+0x9c>)
  405234:	2300      	movs	r3, #0
  405236:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40523a:	f7ff fe97 	bl	404f6c <__multadd>
  40523e:	4605      	mov	r5, r0
  405240:	e7c8      	b.n	4051d4 <__pow5mult+0x10>
  405242:	2101      	movs	r1, #1
  405244:	4638      	mov	r0, r7
  405246:	f7ff fe61 	bl	404f0c <_Balloc>
  40524a:	f240 2171 	movw	r1, #625	; 0x271
  40524e:	2201      	movs	r2, #1
  405250:	2300      	movs	r3, #0
  405252:	6141      	str	r1, [r0, #20]
  405254:	6102      	str	r2, [r0, #16]
  405256:	4606      	mov	r6, r0
  405258:	64b8      	str	r0, [r7, #72]	; 0x48
  40525a:	6003      	str	r3, [r0, #0]
  40525c:	e7be      	b.n	4051dc <__pow5mult+0x18>
  40525e:	bf00      	nop
  405260:	00406e80 	.word	0x00406e80

00405264 <__lshift>:
  405264:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405268:	4691      	mov	r9, r2
  40526a:	690a      	ldr	r2, [r1, #16]
  40526c:	688b      	ldr	r3, [r1, #8]
  40526e:	ea4f 1469 	mov.w	r4, r9, asr #5
  405272:	eb04 0802 	add.w	r8, r4, r2
  405276:	f108 0501 	add.w	r5, r8, #1
  40527a:	429d      	cmp	r5, r3
  40527c:	460e      	mov	r6, r1
  40527e:	4607      	mov	r7, r0
  405280:	6849      	ldr	r1, [r1, #4]
  405282:	dd04      	ble.n	40528e <__lshift+0x2a>
  405284:	005b      	lsls	r3, r3, #1
  405286:	429d      	cmp	r5, r3
  405288:	f101 0101 	add.w	r1, r1, #1
  40528c:	dcfa      	bgt.n	405284 <__lshift+0x20>
  40528e:	4638      	mov	r0, r7
  405290:	f7ff fe3c 	bl	404f0c <_Balloc>
  405294:	2c00      	cmp	r4, #0
  405296:	f100 0314 	add.w	r3, r0, #20
  40529a:	dd06      	ble.n	4052aa <__lshift+0x46>
  40529c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4052a0:	2100      	movs	r1, #0
  4052a2:	f843 1b04 	str.w	r1, [r3], #4
  4052a6:	429a      	cmp	r2, r3
  4052a8:	d1fb      	bne.n	4052a2 <__lshift+0x3e>
  4052aa:	6934      	ldr	r4, [r6, #16]
  4052ac:	f106 0114 	add.w	r1, r6, #20
  4052b0:	f019 091f 	ands.w	r9, r9, #31
  4052b4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4052b8:	d01d      	beq.n	4052f6 <__lshift+0x92>
  4052ba:	f1c9 0c20 	rsb	ip, r9, #32
  4052be:	2200      	movs	r2, #0
  4052c0:	680c      	ldr	r4, [r1, #0]
  4052c2:	fa04 f409 	lsl.w	r4, r4, r9
  4052c6:	4314      	orrs	r4, r2
  4052c8:	f843 4b04 	str.w	r4, [r3], #4
  4052cc:	f851 2b04 	ldr.w	r2, [r1], #4
  4052d0:	458e      	cmp	lr, r1
  4052d2:	fa22 f20c 	lsr.w	r2, r2, ip
  4052d6:	d8f3      	bhi.n	4052c0 <__lshift+0x5c>
  4052d8:	601a      	str	r2, [r3, #0]
  4052da:	b10a      	cbz	r2, 4052e0 <__lshift+0x7c>
  4052dc:	f108 0502 	add.w	r5, r8, #2
  4052e0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4052e2:	6872      	ldr	r2, [r6, #4]
  4052e4:	3d01      	subs	r5, #1
  4052e6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4052ea:	6105      	str	r5, [r0, #16]
  4052ec:	6031      	str	r1, [r6, #0]
  4052ee:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  4052f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4052f6:	3b04      	subs	r3, #4
  4052f8:	f851 2b04 	ldr.w	r2, [r1], #4
  4052fc:	f843 2f04 	str.w	r2, [r3, #4]!
  405300:	458e      	cmp	lr, r1
  405302:	d8f9      	bhi.n	4052f8 <__lshift+0x94>
  405304:	e7ec      	b.n	4052e0 <__lshift+0x7c>
  405306:	bf00      	nop

00405308 <__mcmp>:
  405308:	b430      	push	{r4, r5}
  40530a:	690b      	ldr	r3, [r1, #16]
  40530c:	4605      	mov	r5, r0
  40530e:	6900      	ldr	r0, [r0, #16]
  405310:	1ac0      	subs	r0, r0, r3
  405312:	d10f      	bne.n	405334 <__mcmp+0x2c>
  405314:	009b      	lsls	r3, r3, #2
  405316:	3514      	adds	r5, #20
  405318:	3114      	adds	r1, #20
  40531a:	4419      	add	r1, r3
  40531c:	442b      	add	r3, r5
  40531e:	e001      	b.n	405324 <__mcmp+0x1c>
  405320:	429d      	cmp	r5, r3
  405322:	d207      	bcs.n	405334 <__mcmp+0x2c>
  405324:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405328:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40532c:	4294      	cmp	r4, r2
  40532e:	d0f7      	beq.n	405320 <__mcmp+0x18>
  405330:	d302      	bcc.n	405338 <__mcmp+0x30>
  405332:	2001      	movs	r0, #1
  405334:	bc30      	pop	{r4, r5}
  405336:	4770      	bx	lr
  405338:	f04f 30ff 	mov.w	r0, #4294967295
  40533c:	e7fa      	b.n	405334 <__mcmp+0x2c>
  40533e:	bf00      	nop

00405340 <__mdiff>:
  405340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405344:	690f      	ldr	r7, [r1, #16]
  405346:	460e      	mov	r6, r1
  405348:	6911      	ldr	r1, [r2, #16]
  40534a:	1a7f      	subs	r7, r7, r1
  40534c:	2f00      	cmp	r7, #0
  40534e:	4690      	mov	r8, r2
  405350:	d117      	bne.n	405382 <__mdiff+0x42>
  405352:	0089      	lsls	r1, r1, #2
  405354:	f106 0514 	add.w	r5, r6, #20
  405358:	f102 0e14 	add.w	lr, r2, #20
  40535c:	186b      	adds	r3, r5, r1
  40535e:	4471      	add	r1, lr
  405360:	e001      	b.n	405366 <__mdiff+0x26>
  405362:	429d      	cmp	r5, r3
  405364:	d25c      	bcs.n	405420 <__mdiff+0xe0>
  405366:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40536a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40536e:	42a2      	cmp	r2, r4
  405370:	d0f7      	beq.n	405362 <__mdiff+0x22>
  405372:	d25e      	bcs.n	405432 <__mdiff+0xf2>
  405374:	4633      	mov	r3, r6
  405376:	462c      	mov	r4, r5
  405378:	4646      	mov	r6, r8
  40537a:	4675      	mov	r5, lr
  40537c:	4698      	mov	r8, r3
  40537e:	2701      	movs	r7, #1
  405380:	e005      	b.n	40538e <__mdiff+0x4e>
  405382:	db58      	blt.n	405436 <__mdiff+0xf6>
  405384:	f106 0514 	add.w	r5, r6, #20
  405388:	f108 0414 	add.w	r4, r8, #20
  40538c:	2700      	movs	r7, #0
  40538e:	6871      	ldr	r1, [r6, #4]
  405390:	f7ff fdbc 	bl	404f0c <_Balloc>
  405394:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405398:	6936      	ldr	r6, [r6, #16]
  40539a:	60c7      	str	r7, [r0, #12]
  40539c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4053a0:	46a6      	mov	lr, r4
  4053a2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4053a6:	f100 0414 	add.w	r4, r0, #20
  4053aa:	2300      	movs	r3, #0
  4053ac:	f85e 1b04 	ldr.w	r1, [lr], #4
  4053b0:	f855 8b04 	ldr.w	r8, [r5], #4
  4053b4:	b28a      	uxth	r2, r1
  4053b6:	fa13 f388 	uxtah	r3, r3, r8
  4053ba:	0c09      	lsrs	r1, r1, #16
  4053bc:	1a9a      	subs	r2, r3, r2
  4053be:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4053c2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4053c6:	b292      	uxth	r2, r2
  4053c8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4053cc:	45f4      	cmp	ip, lr
  4053ce:	f844 2b04 	str.w	r2, [r4], #4
  4053d2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4053d6:	d8e9      	bhi.n	4053ac <__mdiff+0x6c>
  4053d8:	42af      	cmp	r7, r5
  4053da:	d917      	bls.n	40540c <__mdiff+0xcc>
  4053dc:	46a4      	mov	ip, r4
  4053de:	46ae      	mov	lr, r5
  4053e0:	f85e 2b04 	ldr.w	r2, [lr], #4
  4053e4:	fa13 f382 	uxtah	r3, r3, r2
  4053e8:	1419      	asrs	r1, r3, #16
  4053ea:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  4053ee:	b29b      	uxth	r3, r3
  4053f0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  4053f4:	4577      	cmp	r7, lr
  4053f6:	f84c 2b04 	str.w	r2, [ip], #4
  4053fa:	ea4f 4321 	mov.w	r3, r1, asr #16
  4053fe:	d8ef      	bhi.n	4053e0 <__mdiff+0xa0>
  405400:	43ed      	mvns	r5, r5
  405402:	442f      	add	r7, r5
  405404:	f027 0703 	bic.w	r7, r7, #3
  405408:	3704      	adds	r7, #4
  40540a:	443c      	add	r4, r7
  40540c:	3c04      	subs	r4, #4
  40540e:	b922      	cbnz	r2, 40541a <__mdiff+0xda>
  405410:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405414:	3e01      	subs	r6, #1
  405416:	2b00      	cmp	r3, #0
  405418:	d0fa      	beq.n	405410 <__mdiff+0xd0>
  40541a:	6106      	str	r6, [r0, #16]
  40541c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405420:	2100      	movs	r1, #0
  405422:	f7ff fd73 	bl	404f0c <_Balloc>
  405426:	2201      	movs	r2, #1
  405428:	2300      	movs	r3, #0
  40542a:	6102      	str	r2, [r0, #16]
  40542c:	6143      	str	r3, [r0, #20]
  40542e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405432:	4674      	mov	r4, lr
  405434:	e7ab      	b.n	40538e <__mdiff+0x4e>
  405436:	4633      	mov	r3, r6
  405438:	f106 0414 	add.w	r4, r6, #20
  40543c:	f102 0514 	add.w	r5, r2, #20
  405440:	4616      	mov	r6, r2
  405442:	2701      	movs	r7, #1
  405444:	4698      	mov	r8, r3
  405446:	e7a2      	b.n	40538e <__mdiff+0x4e>

00405448 <__d2b>:
  405448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40544c:	b082      	sub	sp, #8
  40544e:	2101      	movs	r1, #1
  405450:	461c      	mov	r4, r3
  405452:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405456:	4615      	mov	r5, r2
  405458:	9e08      	ldr	r6, [sp, #32]
  40545a:	f7ff fd57 	bl	404f0c <_Balloc>
  40545e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405462:	4680      	mov	r8, r0
  405464:	b10f      	cbz	r7, 40546a <__d2b+0x22>
  405466:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40546a:	9401      	str	r4, [sp, #4]
  40546c:	b31d      	cbz	r5, 4054b6 <__d2b+0x6e>
  40546e:	a802      	add	r0, sp, #8
  405470:	f840 5d08 	str.w	r5, [r0, #-8]!
  405474:	f7ff fdda 	bl	40502c <__lo0bits>
  405478:	2800      	cmp	r0, #0
  40547a:	d134      	bne.n	4054e6 <__d2b+0x9e>
  40547c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405480:	f8c8 2014 	str.w	r2, [r8, #20]
  405484:	2b00      	cmp	r3, #0
  405486:	bf0c      	ite	eq
  405488:	2101      	moveq	r1, #1
  40548a:	2102      	movne	r1, #2
  40548c:	f8c8 3018 	str.w	r3, [r8, #24]
  405490:	f8c8 1010 	str.w	r1, [r8, #16]
  405494:	b9df      	cbnz	r7, 4054ce <__d2b+0x86>
  405496:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40549a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40549e:	6030      	str	r0, [r6, #0]
  4054a0:	6918      	ldr	r0, [r3, #16]
  4054a2:	f7ff fda3 	bl	404fec <__hi0bits>
  4054a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4054a8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4054ac:	6018      	str	r0, [r3, #0]
  4054ae:	4640      	mov	r0, r8
  4054b0:	b002      	add	sp, #8
  4054b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054b6:	a801      	add	r0, sp, #4
  4054b8:	f7ff fdb8 	bl	40502c <__lo0bits>
  4054bc:	9b01      	ldr	r3, [sp, #4]
  4054be:	f8c8 3014 	str.w	r3, [r8, #20]
  4054c2:	2101      	movs	r1, #1
  4054c4:	3020      	adds	r0, #32
  4054c6:	f8c8 1010 	str.w	r1, [r8, #16]
  4054ca:	2f00      	cmp	r7, #0
  4054cc:	d0e3      	beq.n	405496 <__d2b+0x4e>
  4054ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4054d0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4054d4:	4407      	add	r7, r0
  4054d6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4054da:	6037      	str	r7, [r6, #0]
  4054dc:	6018      	str	r0, [r3, #0]
  4054de:	4640      	mov	r0, r8
  4054e0:	b002      	add	sp, #8
  4054e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054e6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  4054ea:	f1c0 0220 	rsb	r2, r0, #32
  4054ee:	fa03 f202 	lsl.w	r2, r3, r2
  4054f2:	430a      	orrs	r2, r1
  4054f4:	40c3      	lsrs	r3, r0
  4054f6:	9301      	str	r3, [sp, #4]
  4054f8:	f8c8 2014 	str.w	r2, [r8, #20]
  4054fc:	e7c2      	b.n	405484 <__d2b+0x3c>
  4054fe:	bf00      	nop

00405500 <_sbrk_r>:
  405500:	b538      	push	{r3, r4, r5, lr}
  405502:	4c07      	ldr	r4, [pc, #28]	; (405520 <_sbrk_r+0x20>)
  405504:	2300      	movs	r3, #0
  405506:	4605      	mov	r5, r0
  405508:	4608      	mov	r0, r1
  40550a:	6023      	str	r3, [r4, #0]
  40550c:	f7fc f800 	bl	401510 <_sbrk>
  405510:	1c43      	adds	r3, r0, #1
  405512:	d000      	beq.n	405516 <_sbrk_r+0x16>
  405514:	bd38      	pop	{r3, r4, r5, pc}
  405516:	6823      	ldr	r3, [r4, #0]
  405518:	2b00      	cmp	r3, #0
  40551a:	d0fb      	beq.n	405514 <_sbrk_r+0x14>
  40551c:	602b      	str	r3, [r5, #0]
  40551e:	bd38      	pop	{r3, r4, r5, pc}
  405520:	20400cd4 	.word	0x20400cd4
	...

00405540 <strlen>:
  405540:	f890 f000 	pld	[r0]
  405544:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405548:	f020 0107 	bic.w	r1, r0, #7
  40554c:	f06f 0c00 	mvn.w	ip, #0
  405550:	f010 0407 	ands.w	r4, r0, #7
  405554:	f891 f020 	pld	[r1, #32]
  405558:	f040 8049 	bne.w	4055ee <strlen+0xae>
  40555c:	f04f 0400 	mov.w	r4, #0
  405560:	f06f 0007 	mvn.w	r0, #7
  405564:	e9d1 2300 	ldrd	r2, r3, [r1]
  405568:	f891 f040 	pld	[r1, #64]	; 0x40
  40556c:	f100 0008 	add.w	r0, r0, #8
  405570:	fa82 f24c 	uadd8	r2, r2, ip
  405574:	faa4 f28c 	sel	r2, r4, ip
  405578:	fa83 f34c 	uadd8	r3, r3, ip
  40557c:	faa2 f38c 	sel	r3, r2, ip
  405580:	bb4b      	cbnz	r3, 4055d6 <strlen+0x96>
  405582:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405586:	fa82 f24c 	uadd8	r2, r2, ip
  40558a:	f100 0008 	add.w	r0, r0, #8
  40558e:	faa4 f28c 	sel	r2, r4, ip
  405592:	fa83 f34c 	uadd8	r3, r3, ip
  405596:	faa2 f38c 	sel	r3, r2, ip
  40559a:	b9e3      	cbnz	r3, 4055d6 <strlen+0x96>
  40559c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4055a0:	fa82 f24c 	uadd8	r2, r2, ip
  4055a4:	f100 0008 	add.w	r0, r0, #8
  4055a8:	faa4 f28c 	sel	r2, r4, ip
  4055ac:	fa83 f34c 	uadd8	r3, r3, ip
  4055b0:	faa2 f38c 	sel	r3, r2, ip
  4055b4:	b97b      	cbnz	r3, 4055d6 <strlen+0x96>
  4055b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4055ba:	f101 0120 	add.w	r1, r1, #32
  4055be:	fa82 f24c 	uadd8	r2, r2, ip
  4055c2:	f100 0008 	add.w	r0, r0, #8
  4055c6:	faa4 f28c 	sel	r2, r4, ip
  4055ca:	fa83 f34c 	uadd8	r3, r3, ip
  4055ce:	faa2 f38c 	sel	r3, r2, ip
  4055d2:	2b00      	cmp	r3, #0
  4055d4:	d0c6      	beq.n	405564 <strlen+0x24>
  4055d6:	2a00      	cmp	r2, #0
  4055d8:	bf04      	itt	eq
  4055da:	3004      	addeq	r0, #4
  4055dc:	461a      	moveq	r2, r3
  4055de:	ba12      	rev	r2, r2
  4055e0:	fab2 f282 	clz	r2, r2
  4055e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4055e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4055ec:	4770      	bx	lr
  4055ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4055f2:	f004 0503 	and.w	r5, r4, #3
  4055f6:	f1c4 0000 	rsb	r0, r4, #0
  4055fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4055fe:	f014 0f04 	tst.w	r4, #4
  405602:	f891 f040 	pld	[r1, #64]	; 0x40
  405606:	fa0c f505 	lsl.w	r5, ip, r5
  40560a:	ea62 0205 	orn	r2, r2, r5
  40560e:	bf1c      	itt	ne
  405610:	ea63 0305 	ornne	r3, r3, r5
  405614:	4662      	movne	r2, ip
  405616:	f04f 0400 	mov.w	r4, #0
  40561a:	e7a9      	b.n	405570 <strlen+0x30>

0040561c <__ssprint_r>:
  40561c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405620:	6893      	ldr	r3, [r2, #8]
  405622:	b083      	sub	sp, #12
  405624:	4690      	mov	r8, r2
  405626:	2b00      	cmp	r3, #0
  405628:	d070      	beq.n	40570c <__ssprint_r+0xf0>
  40562a:	4682      	mov	sl, r0
  40562c:	460c      	mov	r4, r1
  40562e:	6817      	ldr	r7, [r2, #0]
  405630:	688d      	ldr	r5, [r1, #8]
  405632:	6808      	ldr	r0, [r1, #0]
  405634:	e042      	b.n	4056bc <__ssprint_r+0xa0>
  405636:	89a3      	ldrh	r3, [r4, #12]
  405638:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40563c:	d02e      	beq.n	40569c <__ssprint_r+0x80>
  40563e:	6965      	ldr	r5, [r4, #20]
  405640:	6921      	ldr	r1, [r4, #16]
  405642:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405646:	eba0 0b01 	sub.w	fp, r0, r1
  40564a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40564e:	f10b 0001 	add.w	r0, fp, #1
  405652:	106d      	asrs	r5, r5, #1
  405654:	4430      	add	r0, r6
  405656:	42a8      	cmp	r0, r5
  405658:	462a      	mov	r2, r5
  40565a:	bf84      	itt	hi
  40565c:	4605      	movhi	r5, r0
  40565e:	462a      	movhi	r2, r5
  405660:	055b      	lsls	r3, r3, #21
  405662:	d538      	bpl.n	4056d6 <__ssprint_r+0xba>
  405664:	4611      	mov	r1, r2
  405666:	4650      	mov	r0, sl
  405668:	f7ff f8a8 	bl	4047bc <_malloc_r>
  40566c:	2800      	cmp	r0, #0
  40566e:	d03c      	beq.n	4056ea <__ssprint_r+0xce>
  405670:	465a      	mov	r2, fp
  405672:	6921      	ldr	r1, [r4, #16]
  405674:	9001      	str	r0, [sp, #4]
  405676:	f7ff fba3 	bl	404dc0 <memcpy>
  40567a:	89a2      	ldrh	r2, [r4, #12]
  40567c:	9b01      	ldr	r3, [sp, #4]
  40567e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405682:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405686:	81a2      	strh	r2, [r4, #12]
  405688:	eba5 020b 	sub.w	r2, r5, fp
  40568c:	eb03 000b 	add.w	r0, r3, fp
  405690:	6165      	str	r5, [r4, #20]
  405692:	6123      	str	r3, [r4, #16]
  405694:	6020      	str	r0, [r4, #0]
  405696:	60a2      	str	r2, [r4, #8]
  405698:	4635      	mov	r5, r6
  40569a:	46b3      	mov	fp, r6
  40569c:	465a      	mov	r2, fp
  40569e:	4649      	mov	r1, r9
  4056a0:	f000 fa18 	bl	405ad4 <memmove>
  4056a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4056a8:	68a2      	ldr	r2, [r4, #8]
  4056aa:	6820      	ldr	r0, [r4, #0]
  4056ac:	1b55      	subs	r5, r2, r5
  4056ae:	4458      	add	r0, fp
  4056b0:	1b9e      	subs	r6, r3, r6
  4056b2:	60a5      	str	r5, [r4, #8]
  4056b4:	6020      	str	r0, [r4, #0]
  4056b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4056ba:	b33e      	cbz	r6, 40570c <__ssprint_r+0xf0>
  4056bc:	687e      	ldr	r6, [r7, #4]
  4056be:	463b      	mov	r3, r7
  4056c0:	3708      	adds	r7, #8
  4056c2:	2e00      	cmp	r6, #0
  4056c4:	d0fa      	beq.n	4056bc <__ssprint_r+0xa0>
  4056c6:	42ae      	cmp	r6, r5
  4056c8:	f8d3 9000 	ldr.w	r9, [r3]
  4056cc:	46ab      	mov	fp, r5
  4056ce:	d2b2      	bcs.n	405636 <__ssprint_r+0x1a>
  4056d0:	4635      	mov	r5, r6
  4056d2:	46b3      	mov	fp, r6
  4056d4:	e7e2      	b.n	40569c <__ssprint_r+0x80>
  4056d6:	4650      	mov	r0, sl
  4056d8:	f000 fa60 	bl	405b9c <_realloc_r>
  4056dc:	4603      	mov	r3, r0
  4056de:	2800      	cmp	r0, #0
  4056e0:	d1d2      	bne.n	405688 <__ssprint_r+0x6c>
  4056e2:	6921      	ldr	r1, [r4, #16]
  4056e4:	4650      	mov	r0, sl
  4056e6:	f000 f8f9 	bl	4058dc <_free_r>
  4056ea:	230c      	movs	r3, #12
  4056ec:	f8ca 3000 	str.w	r3, [sl]
  4056f0:	89a3      	ldrh	r3, [r4, #12]
  4056f2:	2200      	movs	r2, #0
  4056f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4056f8:	f04f 30ff 	mov.w	r0, #4294967295
  4056fc:	81a3      	strh	r3, [r4, #12]
  4056fe:	f8c8 2008 	str.w	r2, [r8, #8]
  405702:	f8c8 2004 	str.w	r2, [r8, #4]
  405706:	b003      	add	sp, #12
  405708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40570c:	2000      	movs	r0, #0
  40570e:	f8c8 0004 	str.w	r0, [r8, #4]
  405712:	b003      	add	sp, #12
  405714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405718 <__register_exitproc>:
  405718:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40571c:	4d2c      	ldr	r5, [pc, #176]	; (4057d0 <__register_exitproc+0xb8>)
  40571e:	4606      	mov	r6, r0
  405720:	6828      	ldr	r0, [r5, #0]
  405722:	4698      	mov	r8, r3
  405724:	460f      	mov	r7, r1
  405726:	4691      	mov	r9, r2
  405728:	f7ff f844 	bl	4047b4 <__retarget_lock_acquire_recursive>
  40572c:	4b29      	ldr	r3, [pc, #164]	; (4057d4 <__register_exitproc+0xbc>)
  40572e:	681c      	ldr	r4, [r3, #0]
  405730:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405734:	2b00      	cmp	r3, #0
  405736:	d03e      	beq.n	4057b6 <__register_exitproc+0x9e>
  405738:	685a      	ldr	r2, [r3, #4]
  40573a:	2a1f      	cmp	r2, #31
  40573c:	dc1c      	bgt.n	405778 <__register_exitproc+0x60>
  40573e:	f102 0e01 	add.w	lr, r2, #1
  405742:	b176      	cbz	r6, 405762 <__register_exitproc+0x4a>
  405744:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405748:	2401      	movs	r4, #1
  40574a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40574e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405752:	4094      	lsls	r4, r2
  405754:	4320      	orrs	r0, r4
  405756:	2e02      	cmp	r6, #2
  405758:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40575c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405760:	d023      	beq.n	4057aa <__register_exitproc+0x92>
  405762:	3202      	adds	r2, #2
  405764:	f8c3 e004 	str.w	lr, [r3, #4]
  405768:	6828      	ldr	r0, [r5, #0]
  40576a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40576e:	f7ff f823 	bl	4047b8 <__retarget_lock_release_recursive>
  405772:	2000      	movs	r0, #0
  405774:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405778:	4b17      	ldr	r3, [pc, #92]	; (4057d8 <__register_exitproc+0xc0>)
  40577a:	b30b      	cbz	r3, 4057c0 <__register_exitproc+0xa8>
  40577c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405780:	f3af 8000 	nop.w
  405784:	4603      	mov	r3, r0
  405786:	b1d8      	cbz	r0, 4057c0 <__register_exitproc+0xa8>
  405788:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40578c:	6002      	str	r2, [r0, #0]
  40578e:	2100      	movs	r1, #0
  405790:	6041      	str	r1, [r0, #4]
  405792:	460a      	mov	r2, r1
  405794:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405798:	f04f 0e01 	mov.w	lr, #1
  40579c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4057a0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4057a4:	2e00      	cmp	r6, #0
  4057a6:	d0dc      	beq.n	405762 <__register_exitproc+0x4a>
  4057a8:	e7cc      	b.n	405744 <__register_exitproc+0x2c>
  4057aa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4057ae:	430c      	orrs	r4, r1
  4057b0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4057b4:	e7d5      	b.n	405762 <__register_exitproc+0x4a>
  4057b6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4057ba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4057be:	e7bb      	b.n	405738 <__register_exitproc+0x20>
  4057c0:	6828      	ldr	r0, [r5, #0]
  4057c2:	f7fe fff9 	bl	4047b8 <__retarget_lock_release_recursive>
  4057c6:	f04f 30ff 	mov.w	r0, #4294967295
  4057ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4057ce:	bf00      	nop
  4057d0:	20400450 	.word	0x20400450
  4057d4:	00406d18 	.word	0x00406d18
  4057d8:	00000000 	.word	0x00000000

004057dc <_calloc_r>:
  4057dc:	b510      	push	{r4, lr}
  4057de:	fb02 f101 	mul.w	r1, r2, r1
  4057e2:	f7fe ffeb 	bl	4047bc <_malloc_r>
  4057e6:	4604      	mov	r4, r0
  4057e8:	b1d8      	cbz	r0, 405822 <_calloc_r+0x46>
  4057ea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4057ee:	f022 0203 	bic.w	r2, r2, #3
  4057f2:	3a04      	subs	r2, #4
  4057f4:	2a24      	cmp	r2, #36	; 0x24
  4057f6:	d818      	bhi.n	40582a <_calloc_r+0x4e>
  4057f8:	2a13      	cmp	r2, #19
  4057fa:	d914      	bls.n	405826 <_calloc_r+0x4a>
  4057fc:	2300      	movs	r3, #0
  4057fe:	2a1b      	cmp	r2, #27
  405800:	6003      	str	r3, [r0, #0]
  405802:	6043      	str	r3, [r0, #4]
  405804:	d916      	bls.n	405834 <_calloc_r+0x58>
  405806:	2a24      	cmp	r2, #36	; 0x24
  405808:	6083      	str	r3, [r0, #8]
  40580a:	60c3      	str	r3, [r0, #12]
  40580c:	bf11      	iteee	ne
  40580e:	f100 0210 	addne.w	r2, r0, #16
  405812:	6103      	streq	r3, [r0, #16]
  405814:	6143      	streq	r3, [r0, #20]
  405816:	f100 0218 	addeq.w	r2, r0, #24
  40581a:	2300      	movs	r3, #0
  40581c:	6013      	str	r3, [r2, #0]
  40581e:	6053      	str	r3, [r2, #4]
  405820:	6093      	str	r3, [r2, #8]
  405822:	4620      	mov	r0, r4
  405824:	bd10      	pop	{r4, pc}
  405826:	4602      	mov	r2, r0
  405828:	e7f7      	b.n	40581a <_calloc_r+0x3e>
  40582a:	2100      	movs	r1, #0
  40582c:	f7fc fd28 	bl	402280 <memset>
  405830:	4620      	mov	r0, r4
  405832:	bd10      	pop	{r4, pc}
  405834:	f100 0208 	add.w	r2, r0, #8
  405838:	e7ef      	b.n	40581a <_calloc_r+0x3e>
  40583a:	bf00      	nop

0040583c <_malloc_trim_r>:
  40583c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40583e:	4f24      	ldr	r7, [pc, #144]	; (4058d0 <_malloc_trim_r+0x94>)
  405840:	460c      	mov	r4, r1
  405842:	4606      	mov	r6, r0
  405844:	f7ff fb56 	bl	404ef4 <__malloc_lock>
  405848:	68bb      	ldr	r3, [r7, #8]
  40584a:	685d      	ldr	r5, [r3, #4]
  40584c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405850:	310f      	adds	r1, #15
  405852:	f025 0503 	bic.w	r5, r5, #3
  405856:	4429      	add	r1, r5
  405858:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40585c:	f021 010f 	bic.w	r1, r1, #15
  405860:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405864:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405868:	db07      	blt.n	40587a <_malloc_trim_r+0x3e>
  40586a:	2100      	movs	r1, #0
  40586c:	4630      	mov	r0, r6
  40586e:	f7ff fe47 	bl	405500 <_sbrk_r>
  405872:	68bb      	ldr	r3, [r7, #8]
  405874:	442b      	add	r3, r5
  405876:	4298      	cmp	r0, r3
  405878:	d004      	beq.n	405884 <_malloc_trim_r+0x48>
  40587a:	4630      	mov	r0, r6
  40587c:	f7ff fb40 	bl	404f00 <__malloc_unlock>
  405880:	2000      	movs	r0, #0
  405882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405884:	4261      	negs	r1, r4
  405886:	4630      	mov	r0, r6
  405888:	f7ff fe3a 	bl	405500 <_sbrk_r>
  40588c:	3001      	adds	r0, #1
  40588e:	d00d      	beq.n	4058ac <_malloc_trim_r+0x70>
  405890:	4b10      	ldr	r3, [pc, #64]	; (4058d4 <_malloc_trim_r+0x98>)
  405892:	68ba      	ldr	r2, [r7, #8]
  405894:	6819      	ldr	r1, [r3, #0]
  405896:	1b2d      	subs	r5, r5, r4
  405898:	f045 0501 	orr.w	r5, r5, #1
  40589c:	4630      	mov	r0, r6
  40589e:	1b09      	subs	r1, r1, r4
  4058a0:	6055      	str	r5, [r2, #4]
  4058a2:	6019      	str	r1, [r3, #0]
  4058a4:	f7ff fb2c 	bl	404f00 <__malloc_unlock>
  4058a8:	2001      	movs	r0, #1
  4058aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4058ac:	2100      	movs	r1, #0
  4058ae:	4630      	mov	r0, r6
  4058b0:	f7ff fe26 	bl	405500 <_sbrk_r>
  4058b4:	68ba      	ldr	r2, [r7, #8]
  4058b6:	1a83      	subs	r3, r0, r2
  4058b8:	2b0f      	cmp	r3, #15
  4058ba:	ddde      	ble.n	40587a <_malloc_trim_r+0x3e>
  4058bc:	4c06      	ldr	r4, [pc, #24]	; (4058d8 <_malloc_trim_r+0x9c>)
  4058be:	4905      	ldr	r1, [pc, #20]	; (4058d4 <_malloc_trim_r+0x98>)
  4058c0:	6824      	ldr	r4, [r4, #0]
  4058c2:	f043 0301 	orr.w	r3, r3, #1
  4058c6:	1b00      	subs	r0, r0, r4
  4058c8:	6053      	str	r3, [r2, #4]
  4058ca:	6008      	str	r0, [r1, #0]
  4058cc:	e7d5      	b.n	40587a <_malloc_trim_r+0x3e>
  4058ce:	bf00      	nop
  4058d0:	20400454 	.word	0x20400454
  4058d4:	20400c7c 	.word	0x20400c7c
  4058d8:	2040085c 	.word	0x2040085c

004058dc <_free_r>:
  4058dc:	2900      	cmp	r1, #0
  4058de:	d044      	beq.n	40596a <_free_r+0x8e>
  4058e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4058e4:	460d      	mov	r5, r1
  4058e6:	4680      	mov	r8, r0
  4058e8:	f7ff fb04 	bl	404ef4 <__malloc_lock>
  4058ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4058f0:	4969      	ldr	r1, [pc, #420]	; (405a98 <_free_r+0x1bc>)
  4058f2:	f027 0301 	bic.w	r3, r7, #1
  4058f6:	f1a5 0408 	sub.w	r4, r5, #8
  4058fa:	18e2      	adds	r2, r4, r3
  4058fc:	688e      	ldr	r6, [r1, #8]
  4058fe:	6850      	ldr	r0, [r2, #4]
  405900:	42b2      	cmp	r2, r6
  405902:	f020 0003 	bic.w	r0, r0, #3
  405906:	d05e      	beq.n	4059c6 <_free_r+0xea>
  405908:	07fe      	lsls	r6, r7, #31
  40590a:	6050      	str	r0, [r2, #4]
  40590c:	d40b      	bmi.n	405926 <_free_r+0x4a>
  40590e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405912:	1be4      	subs	r4, r4, r7
  405914:	f101 0e08 	add.w	lr, r1, #8
  405918:	68a5      	ldr	r5, [r4, #8]
  40591a:	4575      	cmp	r5, lr
  40591c:	443b      	add	r3, r7
  40591e:	d06d      	beq.n	4059fc <_free_r+0x120>
  405920:	68e7      	ldr	r7, [r4, #12]
  405922:	60ef      	str	r7, [r5, #12]
  405924:	60bd      	str	r5, [r7, #8]
  405926:	1815      	adds	r5, r2, r0
  405928:	686d      	ldr	r5, [r5, #4]
  40592a:	07ed      	lsls	r5, r5, #31
  40592c:	d53e      	bpl.n	4059ac <_free_r+0xd0>
  40592e:	f043 0201 	orr.w	r2, r3, #1
  405932:	6062      	str	r2, [r4, #4]
  405934:	50e3      	str	r3, [r4, r3]
  405936:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40593a:	d217      	bcs.n	40596c <_free_r+0x90>
  40593c:	08db      	lsrs	r3, r3, #3
  40593e:	1c58      	adds	r0, r3, #1
  405940:	109a      	asrs	r2, r3, #2
  405942:	684d      	ldr	r5, [r1, #4]
  405944:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405948:	60a7      	str	r7, [r4, #8]
  40594a:	2301      	movs	r3, #1
  40594c:	4093      	lsls	r3, r2
  40594e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405952:	432b      	orrs	r3, r5
  405954:	3a08      	subs	r2, #8
  405956:	60e2      	str	r2, [r4, #12]
  405958:	604b      	str	r3, [r1, #4]
  40595a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40595e:	60fc      	str	r4, [r7, #12]
  405960:	4640      	mov	r0, r8
  405962:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405966:	f7ff bacb 	b.w	404f00 <__malloc_unlock>
  40596a:	4770      	bx	lr
  40596c:	0a5a      	lsrs	r2, r3, #9
  40596e:	2a04      	cmp	r2, #4
  405970:	d852      	bhi.n	405a18 <_free_r+0x13c>
  405972:	099a      	lsrs	r2, r3, #6
  405974:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405978:	00ff      	lsls	r7, r7, #3
  40597a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40597e:	19c8      	adds	r0, r1, r7
  405980:	59ca      	ldr	r2, [r1, r7]
  405982:	3808      	subs	r0, #8
  405984:	4290      	cmp	r0, r2
  405986:	d04f      	beq.n	405a28 <_free_r+0x14c>
  405988:	6851      	ldr	r1, [r2, #4]
  40598a:	f021 0103 	bic.w	r1, r1, #3
  40598e:	428b      	cmp	r3, r1
  405990:	d232      	bcs.n	4059f8 <_free_r+0x11c>
  405992:	6892      	ldr	r2, [r2, #8]
  405994:	4290      	cmp	r0, r2
  405996:	d1f7      	bne.n	405988 <_free_r+0xac>
  405998:	68c3      	ldr	r3, [r0, #12]
  40599a:	60a0      	str	r0, [r4, #8]
  40599c:	60e3      	str	r3, [r4, #12]
  40599e:	609c      	str	r4, [r3, #8]
  4059a0:	60c4      	str	r4, [r0, #12]
  4059a2:	4640      	mov	r0, r8
  4059a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4059a8:	f7ff baaa 	b.w	404f00 <__malloc_unlock>
  4059ac:	6895      	ldr	r5, [r2, #8]
  4059ae:	4f3b      	ldr	r7, [pc, #236]	; (405a9c <_free_r+0x1c0>)
  4059b0:	42bd      	cmp	r5, r7
  4059b2:	4403      	add	r3, r0
  4059b4:	d040      	beq.n	405a38 <_free_r+0x15c>
  4059b6:	68d0      	ldr	r0, [r2, #12]
  4059b8:	60e8      	str	r0, [r5, #12]
  4059ba:	f043 0201 	orr.w	r2, r3, #1
  4059be:	6085      	str	r5, [r0, #8]
  4059c0:	6062      	str	r2, [r4, #4]
  4059c2:	50e3      	str	r3, [r4, r3]
  4059c4:	e7b7      	b.n	405936 <_free_r+0x5a>
  4059c6:	07ff      	lsls	r7, r7, #31
  4059c8:	4403      	add	r3, r0
  4059ca:	d407      	bmi.n	4059dc <_free_r+0x100>
  4059cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4059d0:	1aa4      	subs	r4, r4, r2
  4059d2:	4413      	add	r3, r2
  4059d4:	68a0      	ldr	r0, [r4, #8]
  4059d6:	68e2      	ldr	r2, [r4, #12]
  4059d8:	60c2      	str	r2, [r0, #12]
  4059da:	6090      	str	r0, [r2, #8]
  4059dc:	4a30      	ldr	r2, [pc, #192]	; (405aa0 <_free_r+0x1c4>)
  4059de:	6812      	ldr	r2, [r2, #0]
  4059e0:	f043 0001 	orr.w	r0, r3, #1
  4059e4:	4293      	cmp	r3, r2
  4059e6:	6060      	str	r0, [r4, #4]
  4059e8:	608c      	str	r4, [r1, #8]
  4059ea:	d3b9      	bcc.n	405960 <_free_r+0x84>
  4059ec:	4b2d      	ldr	r3, [pc, #180]	; (405aa4 <_free_r+0x1c8>)
  4059ee:	4640      	mov	r0, r8
  4059f0:	6819      	ldr	r1, [r3, #0]
  4059f2:	f7ff ff23 	bl	40583c <_malloc_trim_r>
  4059f6:	e7b3      	b.n	405960 <_free_r+0x84>
  4059f8:	4610      	mov	r0, r2
  4059fa:	e7cd      	b.n	405998 <_free_r+0xbc>
  4059fc:	1811      	adds	r1, r2, r0
  4059fe:	6849      	ldr	r1, [r1, #4]
  405a00:	07c9      	lsls	r1, r1, #31
  405a02:	d444      	bmi.n	405a8e <_free_r+0x1b2>
  405a04:	6891      	ldr	r1, [r2, #8]
  405a06:	68d2      	ldr	r2, [r2, #12]
  405a08:	60ca      	str	r2, [r1, #12]
  405a0a:	4403      	add	r3, r0
  405a0c:	f043 0001 	orr.w	r0, r3, #1
  405a10:	6091      	str	r1, [r2, #8]
  405a12:	6060      	str	r0, [r4, #4]
  405a14:	50e3      	str	r3, [r4, r3]
  405a16:	e7a3      	b.n	405960 <_free_r+0x84>
  405a18:	2a14      	cmp	r2, #20
  405a1a:	d816      	bhi.n	405a4a <_free_r+0x16e>
  405a1c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405a20:	00ff      	lsls	r7, r7, #3
  405a22:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405a26:	e7aa      	b.n	40597e <_free_r+0xa2>
  405a28:	10aa      	asrs	r2, r5, #2
  405a2a:	2301      	movs	r3, #1
  405a2c:	684d      	ldr	r5, [r1, #4]
  405a2e:	4093      	lsls	r3, r2
  405a30:	432b      	orrs	r3, r5
  405a32:	604b      	str	r3, [r1, #4]
  405a34:	4603      	mov	r3, r0
  405a36:	e7b0      	b.n	40599a <_free_r+0xbe>
  405a38:	f043 0201 	orr.w	r2, r3, #1
  405a3c:	614c      	str	r4, [r1, #20]
  405a3e:	610c      	str	r4, [r1, #16]
  405a40:	60e5      	str	r5, [r4, #12]
  405a42:	60a5      	str	r5, [r4, #8]
  405a44:	6062      	str	r2, [r4, #4]
  405a46:	50e3      	str	r3, [r4, r3]
  405a48:	e78a      	b.n	405960 <_free_r+0x84>
  405a4a:	2a54      	cmp	r2, #84	; 0x54
  405a4c:	d806      	bhi.n	405a5c <_free_r+0x180>
  405a4e:	0b1a      	lsrs	r2, r3, #12
  405a50:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405a54:	00ff      	lsls	r7, r7, #3
  405a56:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405a5a:	e790      	b.n	40597e <_free_r+0xa2>
  405a5c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405a60:	d806      	bhi.n	405a70 <_free_r+0x194>
  405a62:	0bda      	lsrs	r2, r3, #15
  405a64:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405a68:	00ff      	lsls	r7, r7, #3
  405a6a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405a6e:	e786      	b.n	40597e <_free_r+0xa2>
  405a70:	f240 5054 	movw	r0, #1364	; 0x554
  405a74:	4282      	cmp	r2, r0
  405a76:	d806      	bhi.n	405a86 <_free_r+0x1aa>
  405a78:	0c9a      	lsrs	r2, r3, #18
  405a7a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405a7e:	00ff      	lsls	r7, r7, #3
  405a80:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405a84:	e77b      	b.n	40597e <_free_r+0xa2>
  405a86:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405a8a:	257e      	movs	r5, #126	; 0x7e
  405a8c:	e777      	b.n	40597e <_free_r+0xa2>
  405a8e:	f043 0101 	orr.w	r1, r3, #1
  405a92:	6061      	str	r1, [r4, #4]
  405a94:	6013      	str	r3, [r2, #0]
  405a96:	e763      	b.n	405960 <_free_r+0x84>
  405a98:	20400454 	.word	0x20400454
  405a9c:	2040045c 	.word	0x2040045c
  405aa0:	20400860 	.word	0x20400860
  405aa4:	20400cac 	.word	0x20400cac

00405aa8 <__ascii_mbtowc>:
  405aa8:	b082      	sub	sp, #8
  405aaa:	b149      	cbz	r1, 405ac0 <__ascii_mbtowc+0x18>
  405aac:	b15a      	cbz	r2, 405ac6 <__ascii_mbtowc+0x1e>
  405aae:	b16b      	cbz	r3, 405acc <__ascii_mbtowc+0x24>
  405ab0:	7813      	ldrb	r3, [r2, #0]
  405ab2:	600b      	str	r3, [r1, #0]
  405ab4:	7812      	ldrb	r2, [r2, #0]
  405ab6:	1c10      	adds	r0, r2, #0
  405ab8:	bf18      	it	ne
  405aba:	2001      	movne	r0, #1
  405abc:	b002      	add	sp, #8
  405abe:	4770      	bx	lr
  405ac0:	a901      	add	r1, sp, #4
  405ac2:	2a00      	cmp	r2, #0
  405ac4:	d1f3      	bne.n	405aae <__ascii_mbtowc+0x6>
  405ac6:	4610      	mov	r0, r2
  405ac8:	b002      	add	sp, #8
  405aca:	4770      	bx	lr
  405acc:	f06f 0001 	mvn.w	r0, #1
  405ad0:	e7f4      	b.n	405abc <__ascii_mbtowc+0x14>
  405ad2:	bf00      	nop

00405ad4 <memmove>:
  405ad4:	4288      	cmp	r0, r1
  405ad6:	b5f0      	push	{r4, r5, r6, r7, lr}
  405ad8:	d90d      	bls.n	405af6 <memmove+0x22>
  405ada:	188b      	adds	r3, r1, r2
  405adc:	4298      	cmp	r0, r3
  405ade:	d20a      	bcs.n	405af6 <memmove+0x22>
  405ae0:	1884      	adds	r4, r0, r2
  405ae2:	2a00      	cmp	r2, #0
  405ae4:	d051      	beq.n	405b8a <memmove+0xb6>
  405ae6:	4622      	mov	r2, r4
  405ae8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405aec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405af0:	4299      	cmp	r1, r3
  405af2:	d1f9      	bne.n	405ae8 <memmove+0x14>
  405af4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405af6:	2a0f      	cmp	r2, #15
  405af8:	d948      	bls.n	405b8c <memmove+0xb8>
  405afa:	ea41 0300 	orr.w	r3, r1, r0
  405afe:	079b      	lsls	r3, r3, #30
  405b00:	d146      	bne.n	405b90 <memmove+0xbc>
  405b02:	f100 0410 	add.w	r4, r0, #16
  405b06:	f101 0310 	add.w	r3, r1, #16
  405b0a:	4615      	mov	r5, r2
  405b0c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405b10:	f844 6c10 	str.w	r6, [r4, #-16]
  405b14:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405b18:	f844 6c0c 	str.w	r6, [r4, #-12]
  405b1c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405b20:	f844 6c08 	str.w	r6, [r4, #-8]
  405b24:	3d10      	subs	r5, #16
  405b26:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405b2a:	f844 6c04 	str.w	r6, [r4, #-4]
  405b2e:	2d0f      	cmp	r5, #15
  405b30:	f103 0310 	add.w	r3, r3, #16
  405b34:	f104 0410 	add.w	r4, r4, #16
  405b38:	d8e8      	bhi.n	405b0c <memmove+0x38>
  405b3a:	f1a2 0310 	sub.w	r3, r2, #16
  405b3e:	f023 030f 	bic.w	r3, r3, #15
  405b42:	f002 0e0f 	and.w	lr, r2, #15
  405b46:	3310      	adds	r3, #16
  405b48:	f1be 0f03 	cmp.w	lr, #3
  405b4c:	4419      	add	r1, r3
  405b4e:	4403      	add	r3, r0
  405b50:	d921      	bls.n	405b96 <memmove+0xc2>
  405b52:	1f1e      	subs	r6, r3, #4
  405b54:	460d      	mov	r5, r1
  405b56:	4674      	mov	r4, lr
  405b58:	3c04      	subs	r4, #4
  405b5a:	f855 7b04 	ldr.w	r7, [r5], #4
  405b5e:	f846 7f04 	str.w	r7, [r6, #4]!
  405b62:	2c03      	cmp	r4, #3
  405b64:	d8f8      	bhi.n	405b58 <memmove+0x84>
  405b66:	f1ae 0404 	sub.w	r4, lr, #4
  405b6a:	f024 0403 	bic.w	r4, r4, #3
  405b6e:	3404      	adds	r4, #4
  405b70:	4421      	add	r1, r4
  405b72:	4423      	add	r3, r4
  405b74:	f002 0203 	and.w	r2, r2, #3
  405b78:	b162      	cbz	r2, 405b94 <memmove+0xc0>
  405b7a:	3b01      	subs	r3, #1
  405b7c:	440a      	add	r2, r1
  405b7e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405b82:	f803 4f01 	strb.w	r4, [r3, #1]!
  405b86:	428a      	cmp	r2, r1
  405b88:	d1f9      	bne.n	405b7e <memmove+0xaa>
  405b8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405b8c:	4603      	mov	r3, r0
  405b8e:	e7f3      	b.n	405b78 <memmove+0xa4>
  405b90:	4603      	mov	r3, r0
  405b92:	e7f2      	b.n	405b7a <memmove+0xa6>
  405b94:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405b96:	4672      	mov	r2, lr
  405b98:	e7ee      	b.n	405b78 <memmove+0xa4>
  405b9a:	bf00      	nop

00405b9c <_realloc_r>:
  405b9c:	2900      	cmp	r1, #0
  405b9e:	f000 8095 	beq.w	405ccc <_realloc_r+0x130>
  405ba2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405ba6:	460d      	mov	r5, r1
  405ba8:	4616      	mov	r6, r2
  405baa:	b083      	sub	sp, #12
  405bac:	4680      	mov	r8, r0
  405bae:	f106 070b 	add.w	r7, r6, #11
  405bb2:	f7ff f99f 	bl	404ef4 <__malloc_lock>
  405bb6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405bba:	2f16      	cmp	r7, #22
  405bbc:	f02e 0403 	bic.w	r4, lr, #3
  405bc0:	f1a5 0908 	sub.w	r9, r5, #8
  405bc4:	d83c      	bhi.n	405c40 <_realloc_r+0xa4>
  405bc6:	2210      	movs	r2, #16
  405bc8:	4617      	mov	r7, r2
  405bca:	42be      	cmp	r6, r7
  405bcc:	d83d      	bhi.n	405c4a <_realloc_r+0xae>
  405bce:	4294      	cmp	r4, r2
  405bd0:	da43      	bge.n	405c5a <_realloc_r+0xbe>
  405bd2:	4bc4      	ldr	r3, [pc, #784]	; (405ee4 <_realloc_r+0x348>)
  405bd4:	6899      	ldr	r1, [r3, #8]
  405bd6:	eb09 0004 	add.w	r0, r9, r4
  405bda:	4288      	cmp	r0, r1
  405bdc:	f000 80b4 	beq.w	405d48 <_realloc_r+0x1ac>
  405be0:	6843      	ldr	r3, [r0, #4]
  405be2:	f023 0101 	bic.w	r1, r3, #1
  405be6:	4401      	add	r1, r0
  405be8:	6849      	ldr	r1, [r1, #4]
  405bea:	07c9      	lsls	r1, r1, #31
  405bec:	d54c      	bpl.n	405c88 <_realloc_r+0xec>
  405bee:	f01e 0f01 	tst.w	lr, #1
  405bf2:	f000 809b 	beq.w	405d2c <_realloc_r+0x190>
  405bf6:	4631      	mov	r1, r6
  405bf8:	4640      	mov	r0, r8
  405bfa:	f7fe fddf 	bl	4047bc <_malloc_r>
  405bfe:	4606      	mov	r6, r0
  405c00:	2800      	cmp	r0, #0
  405c02:	d03a      	beq.n	405c7a <_realloc_r+0xde>
  405c04:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405c08:	f023 0301 	bic.w	r3, r3, #1
  405c0c:	444b      	add	r3, r9
  405c0e:	f1a0 0208 	sub.w	r2, r0, #8
  405c12:	429a      	cmp	r2, r3
  405c14:	f000 8121 	beq.w	405e5a <_realloc_r+0x2be>
  405c18:	1f22      	subs	r2, r4, #4
  405c1a:	2a24      	cmp	r2, #36	; 0x24
  405c1c:	f200 8107 	bhi.w	405e2e <_realloc_r+0x292>
  405c20:	2a13      	cmp	r2, #19
  405c22:	f200 80db 	bhi.w	405ddc <_realloc_r+0x240>
  405c26:	4603      	mov	r3, r0
  405c28:	462a      	mov	r2, r5
  405c2a:	6811      	ldr	r1, [r2, #0]
  405c2c:	6019      	str	r1, [r3, #0]
  405c2e:	6851      	ldr	r1, [r2, #4]
  405c30:	6059      	str	r1, [r3, #4]
  405c32:	6892      	ldr	r2, [r2, #8]
  405c34:	609a      	str	r2, [r3, #8]
  405c36:	4629      	mov	r1, r5
  405c38:	4640      	mov	r0, r8
  405c3a:	f7ff fe4f 	bl	4058dc <_free_r>
  405c3e:	e01c      	b.n	405c7a <_realloc_r+0xde>
  405c40:	f027 0707 	bic.w	r7, r7, #7
  405c44:	2f00      	cmp	r7, #0
  405c46:	463a      	mov	r2, r7
  405c48:	dabf      	bge.n	405bca <_realloc_r+0x2e>
  405c4a:	2600      	movs	r6, #0
  405c4c:	230c      	movs	r3, #12
  405c4e:	4630      	mov	r0, r6
  405c50:	f8c8 3000 	str.w	r3, [r8]
  405c54:	b003      	add	sp, #12
  405c56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405c5a:	462e      	mov	r6, r5
  405c5c:	1be3      	subs	r3, r4, r7
  405c5e:	2b0f      	cmp	r3, #15
  405c60:	d81e      	bhi.n	405ca0 <_realloc_r+0x104>
  405c62:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405c66:	f003 0301 	and.w	r3, r3, #1
  405c6a:	4323      	orrs	r3, r4
  405c6c:	444c      	add	r4, r9
  405c6e:	f8c9 3004 	str.w	r3, [r9, #4]
  405c72:	6863      	ldr	r3, [r4, #4]
  405c74:	f043 0301 	orr.w	r3, r3, #1
  405c78:	6063      	str	r3, [r4, #4]
  405c7a:	4640      	mov	r0, r8
  405c7c:	f7ff f940 	bl	404f00 <__malloc_unlock>
  405c80:	4630      	mov	r0, r6
  405c82:	b003      	add	sp, #12
  405c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405c88:	f023 0303 	bic.w	r3, r3, #3
  405c8c:	18e1      	adds	r1, r4, r3
  405c8e:	4291      	cmp	r1, r2
  405c90:	db1f      	blt.n	405cd2 <_realloc_r+0x136>
  405c92:	68c3      	ldr	r3, [r0, #12]
  405c94:	6882      	ldr	r2, [r0, #8]
  405c96:	462e      	mov	r6, r5
  405c98:	60d3      	str	r3, [r2, #12]
  405c9a:	460c      	mov	r4, r1
  405c9c:	609a      	str	r2, [r3, #8]
  405c9e:	e7dd      	b.n	405c5c <_realloc_r+0xc0>
  405ca0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405ca4:	eb09 0107 	add.w	r1, r9, r7
  405ca8:	f002 0201 	and.w	r2, r2, #1
  405cac:	444c      	add	r4, r9
  405cae:	f043 0301 	orr.w	r3, r3, #1
  405cb2:	4317      	orrs	r7, r2
  405cb4:	f8c9 7004 	str.w	r7, [r9, #4]
  405cb8:	604b      	str	r3, [r1, #4]
  405cba:	6863      	ldr	r3, [r4, #4]
  405cbc:	f043 0301 	orr.w	r3, r3, #1
  405cc0:	3108      	adds	r1, #8
  405cc2:	6063      	str	r3, [r4, #4]
  405cc4:	4640      	mov	r0, r8
  405cc6:	f7ff fe09 	bl	4058dc <_free_r>
  405cca:	e7d6      	b.n	405c7a <_realloc_r+0xde>
  405ccc:	4611      	mov	r1, r2
  405cce:	f7fe bd75 	b.w	4047bc <_malloc_r>
  405cd2:	f01e 0f01 	tst.w	lr, #1
  405cd6:	d18e      	bne.n	405bf6 <_realloc_r+0x5a>
  405cd8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405cdc:	eba9 0a01 	sub.w	sl, r9, r1
  405ce0:	f8da 1004 	ldr.w	r1, [sl, #4]
  405ce4:	f021 0103 	bic.w	r1, r1, #3
  405ce8:	440b      	add	r3, r1
  405cea:	4423      	add	r3, r4
  405cec:	4293      	cmp	r3, r2
  405cee:	db25      	blt.n	405d3c <_realloc_r+0x1a0>
  405cf0:	68c2      	ldr	r2, [r0, #12]
  405cf2:	6881      	ldr	r1, [r0, #8]
  405cf4:	4656      	mov	r6, sl
  405cf6:	60ca      	str	r2, [r1, #12]
  405cf8:	6091      	str	r1, [r2, #8]
  405cfa:	f8da 100c 	ldr.w	r1, [sl, #12]
  405cfe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405d02:	1f22      	subs	r2, r4, #4
  405d04:	2a24      	cmp	r2, #36	; 0x24
  405d06:	60c1      	str	r1, [r0, #12]
  405d08:	6088      	str	r0, [r1, #8]
  405d0a:	f200 8094 	bhi.w	405e36 <_realloc_r+0x29a>
  405d0e:	2a13      	cmp	r2, #19
  405d10:	d96f      	bls.n	405df2 <_realloc_r+0x256>
  405d12:	6829      	ldr	r1, [r5, #0]
  405d14:	f8ca 1008 	str.w	r1, [sl, #8]
  405d18:	6869      	ldr	r1, [r5, #4]
  405d1a:	f8ca 100c 	str.w	r1, [sl, #12]
  405d1e:	2a1b      	cmp	r2, #27
  405d20:	f200 80a2 	bhi.w	405e68 <_realloc_r+0x2cc>
  405d24:	3508      	adds	r5, #8
  405d26:	f10a 0210 	add.w	r2, sl, #16
  405d2a:	e063      	b.n	405df4 <_realloc_r+0x258>
  405d2c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405d30:	eba9 0a03 	sub.w	sl, r9, r3
  405d34:	f8da 1004 	ldr.w	r1, [sl, #4]
  405d38:	f021 0103 	bic.w	r1, r1, #3
  405d3c:	1863      	adds	r3, r4, r1
  405d3e:	4293      	cmp	r3, r2
  405d40:	f6ff af59 	blt.w	405bf6 <_realloc_r+0x5a>
  405d44:	4656      	mov	r6, sl
  405d46:	e7d8      	b.n	405cfa <_realloc_r+0x15e>
  405d48:	6841      	ldr	r1, [r0, #4]
  405d4a:	f021 0b03 	bic.w	fp, r1, #3
  405d4e:	44a3      	add	fp, r4
  405d50:	f107 0010 	add.w	r0, r7, #16
  405d54:	4583      	cmp	fp, r0
  405d56:	da56      	bge.n	405e06 <_realloc_r+0x26a>
  405d58:	f01e 0f01 	tst.w	lr, #1
  405d5c:	f47f af4b 	bne.w	405bf6 <_realloc_r+0x5a>
  405d60:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405d64:	eba9 0a01 	sub.w	sl, r9, r1
  405d68:	f8da 1004 	ldr.w	r1, [sl, #4]
  405d6c:	f021 0103 	bic.w	r1, r1, #3
  405d70:	448b      	add	fp, r1
  405d72:	4558      	cmp	r0, fp
  405d74:	dce2      	bgt.n	405d3c <_realloc_r+0x1a0>
  405d76:	4656      	mov	r6, sl
  405d78:	f8da 100c 	ldr.w	r1, [sl, #12]
  405d7c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405d80:	1f22      	subs	r2, r4, #4
  405d82:	2a24      	cmp	r2, #36	; 0x24
  405d84:	60c1      	str	r1, [r0, #12]
  405d86:	6088      	str	r0, [r1, #8]
  405d88:	f200 808f 	bhi.w	405eaa <_realloc_r+0x30e>
  405d8c:	2a13      	cmp	r2, #19
  405d8e:	f240 808a 	bls.w	405ea6 <_realloc_r+0x30a>
  405d92:	6829      	ldr	r1, [r5, #0]
  405d94:	f8ca 1008 	str.w	r1, [sl, #8]
  405d98:	6869      	ldr	r1, [r5, #4]
  405d9a:	f8ca 100c 	str.w	r1, [sl, #12]
  405d9e:	2a1b      	cmp	r2, #27
  405da0:	f200 808a 	bhi.w	405eb8 <_realloc_r+0x31c>
  405da4:	3508      	adds	r5, #8
  405da6:	f10a 0210 	add.w	r2, sl, #16
  405daa:	6829      	ldr	r1, [r5, #0]
  405dac:	6011      	str	r1, [r2, #0]
  405dae:	6869      	ldr	r1, [r5, #4]
  405db0:	6051      	str	r1, [r2, #4]
  405db2:	68a9      	ldr	r1, [r5, #8]
  405db4:	6091      	str	r1, [r2, #8]
  405db6:	eb0a 0107 	add.w	r1, sl, r7
  405dba:	ebab 0207 	sub.w	r2, fp, r7
  405dbe:	f042 0201 	orr.w	r2, r2, #1
  405dc2:	6099      	str	r1, [r3, #8]
  405dc4:	604a      	str	r2, [r1, #4]
  405dc6:	f8da 3004 	ldr.w	r3, [sl, #4]
  405dca:	f003 0301 	and.w	r3, r3, #1
  405dce:	431f      	orrs	r7, r3
  405dd0:	4640      	mov	r0, r8
  405dd2:	f8ca 7004 	str.w	r7, [sl, #4]
  405dd6:	f7ff f893 	bl	404f00 <__malloc_unlock>
  405dda:	e751      	b.n	405c80 <_realloc_r+0xe4>
  405ddc:	682b      	ldr	r3, [r5, #0]
  405dde:	6003      	str	r3, [r0, #0]
  405de0:	686b      	ldr	r3, [r5, #4]
  405de2:	6043      	str	r3, [r0, #4]
  405de4:	2a1b      	cmp	r2, #27
  405de6:	d82d      	bhi.n	405e44 <_realloc_r+0x2a8>
  405de8:	f100 0308 	add.w	r3, r0, #8
  405dec:	f105 0208 	add.w	r2, r5, #8
  405df0:	e71b      	b.n	405c2a <_realloc_r+0x8e>
  405df2:	4632      	mov	r2, r6
  405df4:	6829      	ldr	r1, [r5, #0]
  405df6:	6011      	str	r1, [r2, #0]
  405df8:	6869      	ldr	r1, [r5, #4]
  405dfa:	6051      	str	r1, [r2, #4]
  405dfc:	68a9      	ldr	r1, [r5, #8]
  405dfe:	6091      	str	r1, [r2, #8]
  405e00:	461c      	mov	r4, r3
  405e02:	46d1      	mov	r9, sl
  405e04:	e72a      	b.n	405c5c <_realloc_r+0xc0>
  405e06:	eb09 0107 	add.w	r1, r9, r7
  405e0a:	ebab 0b07 	sub.w	fp, fp, r7
  405e0e:	f04b 0201 	orr.w	r2, fp, #1
  405e12:	6099      	str	r1, [r3, #8]
  405e14:	604a      	str	r2, [r1, #4]
  405e16:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405e1a:	f003 0301 	and.w	r3, r3, #1
  405e1e:	431f      	orrs	r7, r3
  405e20:	4640      	mov	r0, r8
  405e22:	f845 7c04 	str.w	r7, [r5, #-4]
  405e26:	f7ff f86b 	bl	404f00 <__malloc_unlock>
  405e2a:	462e      	mov	r6, r5
  405e2c:	e728      	b.n	405c80 <_realloc_r+0xe4>
  405e2e:	4629      	mov	r1, r5
  405e30:	f7ff fe50 	bl	405ad4 <memmove>
  405e34:	e6ff      	b.n	405c36 <_realloc_r+0x9a>
  405e36:	4629      	mov	r1, r5
  405e38:	4630      	mov	r0, r6
  405e3a:	461c      	mov	r4, r3
  405e3c:	46d1      	mov	r9, sl
  405e3e:	f7ff fe49 	bl	405ad4 <memmove>
  405e42:	e70b      	b.n	405c5c <_realloc_r+0xc0>
  405e44:	68ab      	ldr	r3, [r5, #8]
  405e46:	6083      	str	r3, [r0, #8]
  405e48:	68eb      	ldr	r3, [r5, #12]
  405e4a:	60c3      	str	r3, [r0, #12]
  405e4c:	2a24      	cmp	r2, #36	; 0x24
  405e4e:	d017      	beq.n	405e80 <_realloc_r+0x2e4>
  405e50:	f100 0310 	add.w	r3, r0, #16
  405e54:	f105 0210 	add.w	r2, r5, #16
  405e58:	e6e7      	b.n	405c2a <_realloc_r+0x8e>
  405e5a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405e5e:	f023 0303 	bic.w	r3, r3, #3
  405e62:	441c      	add	r4, r3
  405e64:	462e      	mov	r6, r5
  405e66:	e6f9      	b.n	405c5c <_realloc_r+0xc0>
  405e68:	68a9      	ldr	r1, [r5, #8]
  405e6a:	f8ca 1010 	str.w	r1, [sl, #16]
  405e6e:	68e9      	ldr	r1, [r5, #12]
  405e70:	f8ca 1014 	str.w	r1, [sl, #20]
  405e74:	2a24      	cmp	r2, #36	; 0x24
  405e76:	d00c      	beq.n	405e92 <_realloc_r+0x2f6>
  405e78:	3510      	adds	r5, #16
  405e7a:	f10a 0218 	add.w	r2, sl, #24
  405e7e:	e7b9      	b.n	405df4 <_realloc_r+0x258>
  405e80:	692b      	ldr	r3, [r5, #16]
  405e82:	6103      	str	r3, [r0, #16]
  405e84:	696b      	ldr	r3, [r5, #20]
  405e86:	6143      	str	r3, [r0, #20]
  405e88:	f105 0218 	add.w	r2, r5, #24
  405e8c:	f100 0318 	add.w	r3, r0, #24
  405e90:	e6cb      	b.n	405c2a <_realloc_r+0x8e>
  405e92:	692a      	ldr	r2, [r5, #16]
  405e94:	f8ca 2018 	str.w	r2, [sl, #24]
  405e98:	696a      	ldr	r2, [r5, #20]
  405e9a:	f8ca 201c 	str.w	r2, [sl, #28]
  405e9e:	3518      	adds	r5, #24
  405ea0:	f10a 0220 	add.w	r2, sl, #32
  405ea4:	e7a6      	b.n	405df4 <_realloc_r+0x258>
  405ea6:	4632      	mov	r2, r6
  405ea8:	e77f      	b.n	405daa <_realloc_r+0x20e>
  405eaa:	4629      	mov	r1, r5
  405eac:	4630      	mov	r0, r6
  405eae:	9301      	str	r3, [sp, #4]
  405eb0:	f7ff fe10 	bl	405ad4 <memmove>
  405eb4:	9b01      	ldr	r3, [sp, #4]
  405eb6:	e77e      	b.n	405db6 <_realloc_r+0x21a>
  405eb8:	68a9      	ldr	r1, [r5, #8]
  405eba:	f8ca 1010 	str.w	r1, [sl, #16]
  405ebe:	68e9      	ldr	r1, [r5, #12]
  405ec0:	f8ca 1014 	str.w	r1, [sl, #20]
  405ec4:	2a24      	cmp	r2, #36	; 0x24
  405ec6:	d003      	beq.n	405ed0 <_realloc_r+0x334>
  405ec8:	3510      	adds	r5, #16
  405eca:	f10a 0218 	add.w	r2, sl, #24
  405ece:	e76c      	b.n	405daa <_realloc_r+0x20e>
  405ed0:	692a      	ldr	r2, [r5, #16]
  405ed2:	f8ca 2018 	str.w	r2, [sl, #24]
  405ed6:	696a      	ldr	r2, [r5, #20]
  405ed8:	f8ca 201c 	str.w	r2, [sl, #28]
  405edc:	3518      	adds	r5, #24
  405ede:	f10a 0220 	add.w	r2, sl, #32
  405ee2:	e762      	b.n	405daa <_realloc_r+0x20e>
  405ee4:	20400454 	.word	0x20400454

00405ee8 <__ascii_wctomb>:
  405ee8:	b121      	cbz	r1, 405ef4 <__ascii_wctomb+0xc>
  405eea:	2aff      	cmp	r2, #255	; 0xff
  405eec:	d804      	bhi.n	405ef8 <__ascii_wctomb+0x10>
  405eee:	700a      	strb	r2, [r1, #0]
  405ef0:	2001      	movs	r0, #1
  405ef2:	4770      	bx	lr
  405ef4:	4608      	mov	r0, r1
  405ef6:	4770      	bx	lr
  405ef8:	238a      	movs	r3, #138	; 0x8a
  405efa:	6003      	str	r3, [r0, #0]
  405efc:	f04f 30ff 	mov.w	r0, #4294967295
  405f00:	4770      	bx	lr
  405f02:	bf00      	nop

00405f04 <__aeabi_dcmpun>:
  405f04:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f0c:	d102      	bne.n	405f14 <__aeabi_dcmpun+0x10>
  405f0e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405f12:	d10a      	bne.n	405f2a <__aeabi_dcmpun+0x26>
  405f14:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f1c:	d102      	bne.n	405f24 <__aeabi_dcmpun+0x20>
  405f1e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405f22:	d102      	bne.n	405f2a <__aeabi_dcmpun+0x26>
  405f24:	f04f 0000 	mov.w	r0, #0
  405f28:	4770      	bx	lr
  405f2a:	f04f 0001 	mov.w	r0, #1
  405f2e:	4770      	bx	lr

00405f30 <__aeabi_d2iz>:
  405f30:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405f34:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405f38:	d215      	bcs.n	405f66 <__aeabi_d2iz+0x36>
  405f3a:	d511      	bpl.n	405f60 <__aeabi_d2iz+0x30>
  405f3c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405f40:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405f44:	d912      	bls.n	405f6c <__aeabi_d2iz+0x3c>
  405f46:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405f4a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405f4e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405f52:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405f56:	fa23 f002 	lsr.w	r0, r3, r2
  405f5a:	bf18      	it	ne
  405f5c:	4240      	negne	r0, r0
  405f5e:	4770      	bx	lr
  405f60:	f04f 0000 	mov.w	r0, #0
  405f64:	4770      	bx	lr
  405f66:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405f6a:	d105      	bne.n	405f78 <__aeabi_d2iz+0x48>
  405f6c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405f70:	bf08      	it	eq
  405f72:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405f76:	4770      	bx	lr
  405f78:	f04f 0000 	mov.w	r0, #0
  405f7c:	4770      	bx	lr
  405f7e:	bf00      	nop

00405f80 <__aeabi_uldivmod>:
  405f80:	b953      	cbnz	r3, 405f98 <__aeabi_uldivmod+0x18>
  405f82:	b94a      	cbnz	r2, 405f98 <__aeabi_uldivmod+0x18>
  405f84:	2900      	cmp	r1, #0
  405f86:	bf08      	it	eq
  405f88:	2800      	cmpeq	r0, #0
  405f8a:	bf1c      	itt	ne
  405f8c:	f04f 31ff 	movne.w	r1, #4294967295
  405f90:	f04f 30ff 	movne.w	r0, #4294967295
  405f94:	f000 b97a 	b.w	40628c <__aeabi_idiv0>
  405f98:	f1ad 0c08 	sub.w	ip, sp, #8
  405f9c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405fa0:	f000 f806 	bl	405fb0 <__udivmoddi4>
  405fa4:	f8dd e004 	ldr.w	lr, [sp, #4]
  405fa8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405fac:	b004      	add	sp, #16
  405fae:	4770      	bx	lr

00405fb0 <__udivmoddi4>:
  405fb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405fb4:	468c      	mov	ip, r1
  405fb6:	460d      	mov	r5, r1
  405fb8:	4604      	mov	r4, r0
  405fba:	9e08      	ldr	r6, [sp, #32]
  405fbc:	2b00      	cmp	r3, #0
  405fbe:	d151      	bne.n	406064 <__udivmoddi4+0xb4>
  405fc0:	428a      	cmp	r2, r1
  405fc2:	4617      	mov	r7, r2
  405fc4:	d96d      	bls.n	4060a2 <__udivmoddi4+0xf2>
  405fc6:	fab2 fe82 	clz	lr, r2
  405fca:	f1be 0f00 	cmp.w	lr, #0
  405fce:	d00b      	beq.n	405fe8 <__udivmoddi4+0x38>
  405fd0:	f1ce 0c20 	rsb	ip, lr, #32
  405fd4:	fa01 f50e 	lsl.w	r5, r1, lr
  405fd8:	fa20 fc0c 	lsr.w	ip, r0, ip
  405fdc:	fa02 f70e 	lsl.w	r7, r2, lr
  405fe0:	ea4c 0c05 	orr.w	ip, ip, r5
  405fe4:	fa00 f40e 	lsl.w	r4, r0, lr
  405fe8:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405fec:	0c25      	lsrs	r5, r4, #16
  405fee:	fbbc f8fa 	udiv	r8, ip, sl
  405ff2:	fa1f f987 	uxth.w	r9, r7
  405ff6:	fb0a cc18 	mls	ip, sl, r8, ip
  405ffa:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  405ffe:	fb08 f309 	mul.w	r3, r8, r9
  406002:	42ab      	cmp	r3, r5
  406004:	d90a      	bls.n	40601c <__udivmoddi4+0x6c>
  406006:	19ed      	adds	r5, r5, r7
  406008:	f108 32ff 	add.w	r2, r8, #4294967295
  40600c:	f080 8123 	bcs.w	406256 <__udivmoddi4+0x2a6>
  406010:	42ab      	cmp	r3, r5
  406012:	f240 8120 	bls.w	406256 <__udivmoddi4+0x2a6>
  406016:	f1a8 0802 	sub.w	r8, r8, #2
  40601a:	443d      	add	r5, r7
  40601c:	1aed      	subs	r5, r5, r3
  40601e:	b2a4      	uxth	r4, r4
  406020:	fbb5 f0fa 	udiv	r0, r5, sl
  406024:	fb0a 5510 	mls	r5, sl, r0, r5
  406028:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40602c:	fb00 f909 	mul.w	r9, r0, r9
  406030:	45a1      	cmp	r9, r4
  406032:	d909      	bls.n	406048 <__udivmoddi4+0x98>
  406034:	19e4      	adds	r4, r4, r7
  406036:	f100 33ff 	add.w	r3, r0, #4294967295
  40603a:	f080 810a 	bcs.w	406252 <__udivmoddi4+0x2a2>
  40603e:	45a1      	cmp	r9, r4
  406040:	f240 8107 	bls.w	406252 <__udivmoddi4+0x2a2>
  406044:	3802      	subs	r0, #2
  406046:	443c      	add	r4, r7
  406048:	eba4 0409 	sub.w	r4, r4, r9
  40604c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406050:	2100      	movs	r1, #0
  406052:	2e00      	cmp	r6, #0
  406054:	d061      	beq.n	40611a <__udivmoddi4+0x16a>
  406056:	fa24 f40e 	lsr.w	r4, r4, lr
  40605a:	2300      	movs	r3, #0
  40605c:	6034      	str	r4, [r6, #0]
  40605e:	6073      	str	r3, [r6, #4]
  406060:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406064:	428b      	cmp	r3, r1
  406066:	d907      	bls.n	406078 <__udivmoddi4+0xc8>
  406068:	2e00      	cmp	r6, #0
  40606a:	d054      	beq.n	406116 <__udivmoddi4+0x166>
  40606c:	2100      	movs	r1, #0
  40606e:	e886 0021 	stmia.w	r6, {r0, r5}
  406072:	4608      	mov	r0, r1
  406074:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406078:	fab3 f183 	clz	r1, r3
  40607c:	2900      	cmp	r1, #0
  40607e:	f040 808e 	bne.w	40619e <__udivmoddi4+0x1ee>
  406082:	42ab      	cmp	r3, r5
  406084:	d302      	bcc.n	40608c <__udivmoddi4+0xdc>
  406086:	4282      	cmp	r2, r0
  406088:	f200 80fa 	bhi.w	406280 <__udivmoddi4+0x2d0>
  40608c:	1a84      	subs	r4, r0, r2
  40608e:	eb65 0503 	sbc.w	r5, r5, r3
  406092:	2001      	movs	r0, #1
  406094:	46ac      	mov	ip, r5
  406096:	2e00      	cmp	r6, #0
  406098:	d03f      	beq.n	40611a <__udivmoddi4+0x16a>
  40609a:	e886 1010 	stmia.w	r6, {r4, ip}
  40609e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4060a2:	b912      	cbnz	r2, 4060aa <__udivmoddi4+0xfa>
  4060a4:	2701      	movs	r7, #1
  4060a6:	fbb7 f7f2 	udiv	r7, r7, r2
  4060aa:	fab7 fe87 	clz	lr, r7
  4060ae:	f1be 0f00 	cmp.w	lr, #0
  4060b2:	d134      	bne.n	40611e <__udivmoddi4+0x16e>
  4060b4:	1beb      	subs	r3, r5, r7
  4060b6:	0c3a      	lsrs	r2, r7, #16
  4060b8:	fa1f fc87 	uxth.w	ip, r7
  4060bc:	2101      	movs	r1, #1
  4060be:	fbb3 f8f2 	udiv	r8, r3, r2
  4060c2:	0c25      	lsrs	r5, r4, #16
  4060c4:	fb02 3318 	mls	r3, r2, r8, r3
  4060c8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4060cc:	fb0c f308 	mul.w	r3, ip, r8
  4060d0:	42ab      	cmp	r3, r5
  4060d2:	d907      	bls.n	4060e4 <__udivmoddi4+0x134>
  4060d4:	19ed      	adds	r5, r5, r7
  4060d6:	f108 30ff 	add.w	r0, r8, #4294967295
  4060da:	d202      	bcs.n	4060e2 <__udivmoddi4+0x132>
  4060dc:	42ab      	cmp	r3, r5
  4060de:	f200 80d1 	bhi.w	406284 <__udivmoddi4+0x2d4>
  4060e2:	4680      	mov	r8, r0
  4060e4:	1aed      	subs	r5, r5, r3
  4060e6:	b2a3      	uxth	r3, r4
  4060e8:	fbb5 f0f2 	udiv	r0, r5, r2
  4060ec:	fb02 5510 	mls	r5, r2, r0, r5
  4060f0:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4060f4:	fb0c fc00 	mul.w	ip, ip, r0
  4060f8:	45a4      	cmp	ip, r4
  4060fa:	d907      	bls.n	40610c <__udivmoddi4+0x15c>
  4060fc:	19e4      	adds	r4, r4, r7
  4060fe:	f100 33ff 	add.w	r3, r0, #4294967295
  406102:	d202      	bcs.n	40610a <__udivmoddi4+0x15a>
  406104:	45a4      	cmp	ip, r4
  406106:	f200 80b8 	bhi.w	40627a <__udivmoddi4+0x2ca>
  40610a:	4618      	mov	r0, r3
  40610c:	eba4 040c 	sub.w	r4, r4, ip
  406110:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406114:	e79d      	b.n	406052 <__udivmoddi4+0xa2>
  406116:	4631      	mov	r1, r6
  406118:	4630      	mov	r0, r6
  40611a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40611e:	f1ce 0420 	rsb	r4, lr, #32
  406122:	fa05 f30e 	lsl.w	r3, r5, lr
  406126:	fa07 f70e 	lsl.w	r7, r7, lr
  40612a:	fa20 f804 	lsr.w	r8, r0, r4
  40612e:	0c3a      	lsrs	r2, r7, #16
  406130:	fa25 f404 	lsr.w	r4, r5, r4
  406134:	ea48 0803 	orr.w	r8, r8, r3
  406138:	fbb4 f1f2 	udiv	r1, r4, r2
  40613c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406140:	fb02 4411 	mls	r4, r2, r1, r4
  406144:	fa1f fc87 	uxth.w	ip, r7
  406148:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40614c:	fb01 f30c 	mul.w	r3, r1, ip
  406150:	42ab      	cmp	r3, r5
  406152:	fa00 f40e 	lsl.w	r4, r0, lr
  406156:	d909      	bls.n	40616c <__udivmoddi4+0x1bc>
  406158:	19ed      	adds	r5, r5, r7
  40615a:	f101 30ff 	add.w	r0, r1, #4294967295
  40615e:	f080 808a 	bcs.w	406276 <__udivmoddi4+0x2c6>
  406162:	42ab      	cmp	r3, r5
  406164:	f240 8087 	bls.w	406276 <__udivmoddi4+0x2c6>
  406168:	3902      	subs	r1, #2
  40616a:	443d      	add	r5, r7
  40616c:	1aeb      	subs	r3, r5, r3
  40616e:	fa1f f588 	uxth.w	r5, r8
  406172:	fbb3 f0f2 	udiv	r0, r3, r2
  406176:	fb02 3310 	mls	r3, r2, r0, r3
  40617a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40617e:	fb00 f30c 	mul.w	r3, r0, ip
  406182:	42ab      	cmp	r3, r5
  406184:	d907      	bls.n	406196 <__udivmoddi4+0x1e6>
  406186:	19ed      	adds	r5, r5, r7
  406188:	f100 38ff 	add.w	r8, r0, #4294967295
  40618c:	d26f      	bcs.n	40626e <__udivmoddi4+0x2be>
  40618e:	42ab      	cmp	r3, r5
  406190:	d96d      	bls.n	40626e <__udivmoddi4+0x2be>
  406192:	3802      	subs	r0, #2
  406194:	443d      	add	r5, r7
  406196:	1aeb      	subs	r3, r5, r3
  406198:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40619c:	e78f      	b.n	4060be <__udivmoddi4+0x10e>
  40619e:	f1c1 0720 	rsb	r7, r1, #32
  4061a2:	fa22 f807 	lsr.w	r8, r2, r7
  4061a6:	408b      	lsls	r3, r1
  4061a8:	fa05 f401 	lsl.w	r4, r5, r1
  4061ac:	ea48 0303 	orr.w	r3, r8, r3
  4061b0:	fa20 fe07 	lsr.w	lr, r0, r7
  4061b4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4061b8:	40fd      	lsrs	r5, r7
  4061ba:	ea4e 0e04 	orr.w	lr, lr, r4
  4061be:	fbb5 f9fc 	udiv	r9, r5, ip
  4061c2:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4061c6:	fb0c 5519 	mls	r5, ip, r9, r5
  4061ca:	fa1f f883 	uxth.w	r8, r3
  4061ce:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4061d2:	fb09 f408 	mul.w	r4, r9, r8
  4061d6:	42ac      	cmp	r4, r5
  4061d8:	fa02 f201 	lsl.w	r2, r2, r1
  4061dc:	fa00 fa01 	lsl.w	sl, r0, r1
  4061e0:	d908      	bls.n	4061f4 <__udivmoddi4+0x244>
  4061e2:	18ed      	adds	r5, r5, r3
  4061e4:	f109 30ff 	add.w	r0, r9, #4294967295
  4061e8:	d243      	bcs.n	406272 <__udivmoddi4+0x2c2>
  4061ea:	42ac      	cmp	r4, r5
  4061ec:	d941      	bls.n	406272 <__udivmoddi4+0x2c2>
  4061ee:	f1a9 0902 	sub.w	r9, r9, #2
  4061f2:	441d      	add	r5, r3
  4061f4:	1b2d      	subs	r5, r5, r4
  4061f6:	fa1f fe8e 	uxth.w	lr, lr
  4061fa:	fbb5 f0fc 	udiv	r0, r5, ip
  4061fe:	fb0c 5510 	mls	r5, ip, r0, r5
  406202:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406206:	fb00 f808 	mul.w	r8, r0, r8
  40620a:	45a0      	cmp	r8, r4
  40620c:	d907      	bls.n	40621e <__udivmoddi4+0x26e>
  40620e:	18e4      	adds	r4, r4, r3
  406210:	f100 35ff 	add.w	r5, r0, #4294967295
  406214:	d229      	bcs.n	40626a <__udivmoddi4+0x2ba>
  406216:	45a0      	cmp	r8, r4
  406218:	d927      	bls.n	40626a <__udivmoddi4+0x2ba>
  40621a:	3802      	subs	r0, #2
  40621c:	441c      	add	r4, r3
  40621e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406222:	eba4 0408 	sub.w	r4, r4, r8
  406226:	fba0 8902 	umull	r8, r9, r0, r2
  40622a:	454c      	cmp	r4, r9
  40622c:	46c6      	mov	lr, r8
  40622e:	464d      	mov	r5, r9
  406230:	d315      	bcc.n	40625e <__udivmoddi4+0x2ae>
  406232:	d012      	beq.n	40625a <__udivmoddi4+0x2aa>
  406234:	b156      	cbz	r6, 40624c <__udivmoddi4+0x29c>
  406236:	ebba 030e 	subs.w	r3, sl, lr
  40623a:	eb64 0405 	sbc.w	r4, r4, r5
  40623e:	fa04 f707 	lsl.w	r7, r4, r7
  406242:	40cb      	lsrs	r3, r1
  406244:	431f      	orrs	r7, r3
  406246:	40cc      	lsrs	r4, r1
  406248:	6037      	str	r7, [r6, #0]
  40624a:	6074      	str	r4, [r6, #4]
  40624c:	2100      	movs	r1, #0
  40624e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406252:	4618      	mov	r0, r3
  406254:	e6f8      	b.n	406048 <__udivmoddi4+0x98>
  406256:	4690      	mov	r8, r2
  406258:	e6e0      	b.n	40601c <__udivmoddi4+0x6c>
  40625a:	45c2      	cmp	sl, r8
  40625c:	d2ea      	bcs.n	406234 <__udivmoddi4+0x284>
  40625e:	ebb8 0e02 	subs.w	lr, r8, r2
  406262:	eb69 0503 	sbc.w	r5, r9, r3
  406266:	3801      	subs	r0, #1
  406268:	e7e4      	b.n	406234 <__udivmoddi4+0x284>
  40626a:	4628      	mov	r0, r5
  40626c:	e7d7      	b.n	40621e <__udivmoddi4+0x26e>
  40626e:	4640      	mov	r0, r8
  406270:	e791      	b.n	406196 <__udivmoddi4+0x1e6>
  406272:	4681      	mov	r9, r0
  406274:	e7be      	b.n	4061f4 <__udivmoddi4+0x244>
  406276:	4601      	mov	r1, r0
  406278:	e778      	b.n	40616c <__udivmoddi4+0x1bc>
  40627a:	3802      	subs	r0, #2
  40627c:	443c      	add	r4, r7
  40627e:	e745      	b.n	40610c <__udivmoddi4+0x15c>
  406280:	4608      	mov	r0, r1
  406282:	e708      	b.n	406096 <__udivmoddi4+0xe6>
  406284:	f1a8 0802 	sub.w	r8, r8, #2
  406288:	443d      	add	r5, r7
  40628a:	e72b      	b.n	4060e4 <__udivmoddi4+0x134>

0040628c <__aeabi_idiv0>:
  40628c:	4770      	bx	lr
  40628e:	bf00      	nop

00406290 <sysfont_glyphs>:
	...
  4062b0:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  4062c0:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  4062d0:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  4062e8:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  4062f8:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406308:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406320:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406330:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406340:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  406358:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  406374:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406384:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  406394:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4063a4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  4063cc:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  4063f4:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406404:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406428:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406438:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406448:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  406458:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406470:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406480:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  406490:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4064a8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  4064b8:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  4064c8:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  4064e0:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  4064f0:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406500:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406518:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406528:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406538:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406550:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  406560:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406570:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  40658c:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  40659c:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4065ac:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  4065c8:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  4065e0:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  4065f8:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406608:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406618:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406630:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406640:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406650:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  406668:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  406678:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  406688:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4066a0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  4066b0:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4066c0:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  4066d8:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  4066e8:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  4066f8:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406710:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406720:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406730:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406748:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  406758:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  406768:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406780:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  406790:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4067a0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  4067b8:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  4067c8:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  4067d8:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  4067f0:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406800:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406810:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406828:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406838:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406848:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406860:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406870:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406880:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  406898:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4068a8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  4068b8:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  4068d0:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  4068e0:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  4068f0:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406908:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406918:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406928:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406940:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406950:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406960:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406988:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406998:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4069b4:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  4069cc:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  4069dc:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  4069ec:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406a04:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406a14:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406a24:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406a3c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406a4c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406a5c:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406a6c:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406a7c:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406a8c:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406a9c:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406aac:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406abc:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406acc:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406ae4:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406af4:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b04:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406b20:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406b3c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406b58:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406b68:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406b78:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406b90:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406bac:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406bc8:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406be4:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406c00:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406c1c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406c38:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406c54:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406c64:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406c74:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406c84:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406c94:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406ca4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406cb4:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406cc4:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406cd4:	0000 0000 2020 2020 2020 2020 2020 2020     ....            
  406ce4:	0020 0000 4843 4345 204b 4553 534e 524f      ...CHECK SENSOR
  406cf4:	0000 0000 4f54 204f 4146 0052 2020 2020     ....TOO FAR.    
  406d04:	2020 2020 2020 0020 2520 2e30 6c32 2066            . %0.2lf 
  406d14:	6d63 0000                                   cm..

00406d18 <_global_impure_ptr>:
  406d18:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406d28:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406d38:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406d48:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406d58:	296c 0000 0030 0000                         l)..0...

00406d60 <blanks.7223>:
  406d60:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406d70 <zeroes.7224>:
  406d70:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406d80:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00406d90 <__mprec_bigtens>:
  406d90:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406da0:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406db0:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406db8 <__mprec_tens>:
  406db8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406dc8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406dd8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406de8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406df8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406e08:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406e18:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406e28:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406e38:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406e48:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406e58:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406e68:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406e78:	9db4 79d9 7843 44ea                         ...yCx.D

00406e80 <p05.6055>:
  406e80:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406e90:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406e9c <_ctype_>:
  406e9c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406eac:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406ebc:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406ecc:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406edc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406eec:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406efc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406f0c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406f1c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406fa0 <_init>:
  406fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406fa2:	bf00      	nop
  406fa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406fa6:	bc08      	pop	{r3}
  406fa8:	469e      	mov	lr, r3
  406faa:	4770      	bx	lr

00406fac <__init_array_start>:
  406fac:	004037c5 	.word	0x004037c5

00406fb0 <__frame_dummy_init_array_entry>:
  406fb0:	00400165                                e.@.

00406fb4 <_fini>:
  406fb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406fb6:	bf00      	nop
  406fb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406fba:	bc08      	pop	{r3}
  406fbc:	469e      	mov	lr, r3
  406fbe:	4770      	bx	lr

00406fc0 <__fini_array_start>:
  406fc0:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 6290 0040 0e0a 7d20               .....b@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cb0 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	5ee9 0040 5aa9 0040 0000 0000 6e9c 0040     .^@..Z@......n@.
20400954:	6e98 0040 6d3c 0040 6d3c 0040 6d3c 0040     .n@.<m@.<m@.<m@.
20400964:	6d3c 0040 6d3c 0040 6d3c 0040 6d3c 0040     <m@.<m@.<m@.<m@.
20400974:	6d3c 0040 6d3c 0040 ffff ffff ffff ffff     <m@.<m@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
